{"version":3,"sources":["Components/Sidebar.tsx","hooks.ts","Components/ImageGallery/LightBox.tsx","Components/MapGallery.tsx","model/enums.ts","Components/Timeline/EventInfoDisplay.tsx","Components/TimeSeries/js/util.js","Components/TimeSeries/components/Brush.js","Components/TimeSeries/components/MultiBrush.js","Components/TimeSeries/components/YAxis.js","Components/TimeSeries/components/Charts.js","Components/TimeSeries/components/ValueList.js","Components/TimeSeries/components/Label.js","Components/TimeSeries/components/TimeMarker.js","Components/TimeSeries/js/interpolators.js","Components/TimeSeries/components/ChartRow.js","Components/TimeSeries/components/EventHandler.js","Components/TimeSeries/components/TimeAxis.js","Components/TimeSeries/components/ChartContainer.js","Components/TimeSeries/components/Resizable.js","Components/TimeSeries/components/EventChart.js","Components/Timeline.tsx","Components/SelectorSection.tsx","Components/Selectors/Containers/SelectorGroup.tsx","Components/Selectors/Containers/SelectorParent.tsx","Components/Selectors/Grid/GridUnit.tsx","utils.tsx","Components/Selectors/Grid/GridChunk.tsx","Components/Selectors/YearDiscipline.tsx","Components/Selectors/Themes.tsx","Components/Selectors/Grid/GridRow.tsx","Components/Selectors/MapLens.tsx","Components/Toolbar.tsx","Components/Title.tsx","App.tsx","reportWebVitals.ts","theme.tsx","model/validation.ts","model/map_data.ts","model/index.ts","store.ts","index.tsx"],"names":["Sidebar","theme","useTheme","sidebarContainer","height","width","paddingBottom","paddingRight","textAlign","display","flexDirection","justifyContent","color","palette","primary","main","fontFamily","typography","sidebarBold","fontSize","lineHeight","fontWeight","Pane","style","Text","Paragraph","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","LightBox","show","onClick","active_lightbox","state","map_data","slickSlide","textStyle","LimitedBackdrop","withStyles","root","position","zIndex","boxSizing","paddingLeft","paddingTop","opacity","backgroundColor","Backdrop","open","top","left","CrossIcon","Grid","container","spacing","justify","item","xs","Heading","size","title","author","description","replace","dots","infinite","speed","slidesToShow","slidesToScroll","variableWidth","images","map","src","index","imageSrc","source","allowOverflow","magnifierSize","AuthorDisciplineFilter","FilterState","EventLevel","FilterGroup","EventType","MapSubTopic","Topic","GalleryFilterType","ThemeCategoryFilter","MapGallery","gallery_images","computed_active_images","useState","showLightbox","setShowLightBox","set_active_lightbox","actions","set_lightbox_content","data_loaded","loaded","useEffect","console","log","scrollContainer","overflow","border","margin","tagStyle","customOverlay","rowHeight","maxRows","enableLightbox","enableImageSelection","onClickThumbnail","this","props","tileViewportStyle","z","q","min","max","duration","Math","ceil","floor","random","animation","animationIterationCound","EventInfoDisplay","info","infoHeader","textDecoration","paragraph","default_val","start","Date","end","tags","category","national","data","scaleAsString","scale","domain","range","getElementOffset","element","de","document","documentElement","box","getBoundingClientRect","window","pageYOffset","clientTop","pageXOffset","clientLeft","Brush","isBrushing","handleBrushMouseDown","bind","handleOverlayMouseDown","handleHandleMouseDown","handleMouseUp","handleClick","handleMouseMove","timeScale","viewBeginTime","invert","viewEndTime","TimeRange","e","preventDefault","x","pageX","y","pageY","xy0","round","begin","timeRange","addEventListener","setState","brushingInitializationSite","initialBrushBeginTime","initialBrushEndTime","initialBrushXYPosition","offset","overlay","t","getTime","handle","removeEventListener","allowSelectionClear","onTimeRangeChanged","xy","viewport","newBegin","newEnd","tb","te","xx","timeOffset","startOffsetConstraint","endOffsetConstrain","parseInt","cursor","overlayStyle","fill","ref","c","onMouseDown","onMouseUp","brushDefaultStyle","fillOpacity","stroke","shapeRendering","brushStyle","merge","disjoint","intersection","bounds","pointerEvents","handleStyle","toJSON","handleSize","leftHandleBounds","rightHandleBounds","onMouseMove","renderOverlay","renderBrush","renderHandles","React","Component","defaultProps","MultiBrush","hasNullBrush","timeRanges","length","handleMouseClick","brushIndex","onTimeRangeClicked","brush_idx","allowFreeDrawing","drawingPosition","brushing_is","onUserMouseUp","idx","userStyle","key","defaultStyle","label","font","values","ticks","axis","YAxis","renderAxis","align","showGrid","chartExtent","hideAxisLine","absolute","type","format","tickCount","nextProps","updateAxis","updateLabel","fmt","_","isString","isFunction","labelStyle","valueStyle","axisStyle","tickStyle","select","ReactDOM","findDOMNode","selectAll","styles","remove","append","attr","yformat","axisGenerator","stepSize","tickValues","tickFormat","d","abs","tickSizeOuter","Error","axisLeft","axisRight","mergeStyles","tickSize","isInnerAxis","labelOffset","generator","call","text","postSelect","transition","ease","easeSinOut","id","Charts","constructor","name","defaultBoxStyle","defaultTextStyle","textAnchor","defaultTextStyleCentered","ValueList","isCentered","boxStyle","i","dy","value","posx","Label","TimeMarker","infoStyle","line","x1","y1","x2","y2","dateStr","timeFormat","formatter","moment","w","infoWidth","infoBoxProps","infoHeight","infoValues","infoBox","transform","showTime","renderTimeMarker","time","showLine","renderLine","showInfoBox","renderInfoBox","visible","dot","ScaleInterpolator","observer","uniqueId","transitionTime","sourceScale","targetScale","cachedScaler","cacheKey","animationTime","initialTimestamp","performance","now","animationPosition","func1","func2","a","setTimeout","update","isNull","v","ChartRow","isChildYAxis","child","areComponentsEqual","has","clipId","clipPathURL","mounted","axisMargin","innerHeight","rangeTop","rangeBottom","Children","forEach","children","scaleMap","s","yAxisScalerMap","yScale","yaxis","y0","isUndefined","scaleLinear","nice","base","logBase","scaleLog","power","powerExponent","scalePow","exponent","createScale","setScale","scalerMap","interpolator","scaler","updateScales","axes","chartList","yAxisMap","leftAxisList","rightAxisList","alignLeft","push","reverse","leftWidth","reduce","leftAxisWidths","b","rightWidth","rightAxisWidths","chartWidth","leftColumnIndex","colWidth","latestScale","cloneElement","rightColumnIndex","chartTransform","keyCount","charts","chart","ytransition","chartProps","brushList","multiBrushList","brushProps","tracker","clipPath","clipper","strokeOpacity","brushes","multiBrushes","trackerTime","timeMarkerProps","trackerTimeFormat","trackerShowTime","trackerStyle","trackerInfoValues","trackerInfoWidth","trackerInfoHeight","trackerTransform","enablePanZoom","EventHandler","isPanning","initialPanBegin","initialPanEnd","initialPanPosition","handleScrollWheel","handleMouseDown","handleMouseOut","handleContextMenu","eventHandlerRef","passive","eventRect","enableDragZoom","deltaY","getOffsetMousePosition","center","beginScaled","endScaled","minDuration","minTime","maxTime","maxDuration","newTimeRange","onZoom","button","offsetxy","isDragging","initialDragZoom","currentDragZoom","onMouseClick","stopPropagation","sort","onMouseOut","mousePosition","onContextMenu","handlers","toString","TimeAxis","gridHeight","renderTimeAxis","utc","axisBottom","tickArguments","utcDay","timeDay","utcMonth","timeMonth","utcYear","timeYear","angled","defaultTimeAxisStyle","defaultTitleStyle","defaultChartRowTitleLabelStyle","defaultChartRowTitleBoxStyle","defaultTrackerStyle","ChartContainer","handleTrackerChanged","handleTimeRangeChanged","handleBackgroundClick","handleZoom","saveSvgRef","onTrackerChanged","timerange","onBackgroundClick","svg","padding","titleHeight","chartRows","chartRowTitles","childRow","countLeft","countCharts","invariant","pos","Number","timeAxisHeight","hideTimeAxis","timeAxisWidth","timeAxisStyle","scaleUtc","scaleTime","chartsWidth","yPosition","titleStyle","chartsHeight","chartRow","rowKey","firstRow","isVisible","trackerPosition","rowTitleKey","titleLabelStyle","titleBoxStyle","titleTransform","contains","trackerValues","trackerHintWidth","trackerHintHeight","timeAxis","timeAxisAngledLabels","timeAxisTickCount","rows","rowTitles","svgWidth","svgHeight","svgStyle","showGridPosition","Resizable","handleResize","innerWidth","only","childElement","EventChart","hover","event","onMouseOver","onMouseLeave","onSelectionChange","series","textOffsetX","textOffsetY","hoverMarkerWidth","eventMarkers","events","beginPos","endPos","Event","is","barStyle","Tooltip","cx","cy","r","className","Timeline","time_series","timeline_series","event_rows","event_spreadsheet","timeline_container","useRef","undefined","eventInfo","setEventInfo","resizeWidth","setResizeWidth","selectedEvent","setSelectedEvent","seperators","setSeperators","start_date","end_date","is_sm","useMediaQuery","breakpoints","up","tot","Object","f","keys","test","sep","timelineSection","borderTop","current","test_number","seperatorText","textAlilgn","make_series","row_height","ev","base_style","handle_click","first","get","found_row","filter","toCheck","obj","concat","getOwnPropertyNames","getPrototypeOf","arr","getAllFuncs","label_func","light","dark","marginLeft","toUpperCase","city","international","NA","SelectorSection","minHeight","marginRight","maxWidth","headerContainer","borderBottom","alignContent","header","marginTop","marginBottom","SelectorGroup","set_filter","thunk_set_filter","active_group_filter","group_filter","hovered","SetHovered","DEFAULT","active","setActive","SOLO","NONE","DEACTIVATED","childContainer","headerAndChild","onMouseEnter","fs","set_style","SelectorParent","columns","selectorGroup","borderRight","noSiblings","selectorGroupFirst","selectorGroupLast","child_count","Array","isArray","gridContainer","gridTemplateColumns","repeat","isValidElement","ind","chil","GridUnit","is_active_filter","setHover","containerStyle","match_color","col","blue","secondary","outline","GridChunk","count","base_color","rowContainer","chunkContainer","cur_state_filters","set_row_color","cur_filters","is_hovered","some","setHovered","group_columns","step","val","num_cols","max_num_rows","from","k","roundToStep","col_list","cur_col","to_chunk","to_author_enum","discipline","year","YearDiscipline","year_data","computed_student_stats","chunksContainer","disciplineStyle","make_year_chunks","year_breakdown","ARCHITECTURE","ARTDESIGN","LANDSCAPE","OTHER","STUDENTS_2016","STUDENTS_2018","STUDENTS_2020","Themes","theme_stats","map_stats","EQUITY_THEME","EQUITY","ACCESS_THEME","ACCESS","DIVERISTY_THEME","DIVERSITY","filterToToolTip","tooltip_title","BUILDINGS","TRANSPORTATION","INFRASTR","PROPERTY","URBANDEV","WORK","GREENSPACE","POLLUTION","HYDROLOGY","GOVERMENT","POLICY","CIVICENG","EDUCATION","HEALTHSAFETY","RACEGEN","GridRow","icon","real_filter","MapLens","tag_stats","subtopic","BUILT_TOPIC","BE","ENERGY","LightbulbIcon","HOUSING","Apartment","DirectionsBus","ECONOMIC_TOPIC","EE","COSTOFLIVING","HomeIcon","ChartIcon","BriefcaseIcon","NATURAL_TOPIC","NE","TreeIcon","Opacity","POLITICAL_TOPIC","PE","AccountBalance","Gavel","VolumeUp","SOCIAL_TOPIC","SE","School","SymbolCrossIcon","PeopleIcon","Toolbar","toolbarContainer","maxHeight","instructions_paragraph","SelectorContainer","sm","md","lg","xl","Title","is_md","titleHeader","titleSubHeader","titleContainer","App","fetch_app_data","fetch_student_sheets","fetch_event_spreadsheet","fetch_all_spreedsheets","request_all_spreadsheets","myCustomTheme","defaultTheme","fontFamilies","ui","mono","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","factor","overrides","MuiGrid","check","right","applicativeV","E","getSemigroup","lengthAtLeastFour","includes","handle_validation","row","validators","on_error","on_success","validations","pipe","sequence","afb","n","error","validation_sequence","DOC_KEY","initial_empty_timeline","lb_initial","row_to_student","student","topic","lightbox_images","create_gallery_images_for_student","single_row","series_number","keyTyped","thumbnail","isSelected","caption","thumbnailWidth","thumbnailHeight","quick_get","group","cat","filter_set","group_enum","my_filters","ARTDESIGN_2016","ARCHITECTURE_2016","OTHER_2016","LANDSCAPE_2016","ARTDESIGN_2018","ARCHITECTURE_2018","OTHER_2018","LANDSCAPE_2018","ARTDESIGN_2020","ARCHITECTURE_2020","OTHER_2020","LANDSCAPE_2020","filter_group_to_set","splits","author_enum","split","yddata","years","get_year_discipline","filter_func","filters","make_time_series","categorized_events","groupBy","test_obj","ev2","array","row_count","every","e3","a_start","a_end","b_start","b_end","sorted_events","TimeSeries","time_range_events_to_time_series","all_events","event_row","time_range","time_range_event","TimeRangeEvent","event_rows_to_time_range_events","property","acc","cur","type_event_rows","cat_string","type_cat","get_image","image","Promise","resolve","reject","img","Image","onload","get_sheet","sheet_num","GetSheetDone","labeledCols","sheet","catch","err","get_map_sheet","sheet_index","map_sheet","discipline_string","model","doc_key","students","active_images","filter_function","gi","computed","test_gallery_images","raw_student_sheets","all_images","map_spreadsheet","validation_errors","add_valid_student","action","payload","add_student_sheet_raw_data","object_values_to_array_lengths","discipline_stats","year_groups","new_obj","entries","get_year_breakdown","final_obj","topic_groups","student_map_stats","subtopic_group","all_subtopics","topic_subtopics","topic_to_array_of_subtopics","st","get_topic_breakdown","process_student","thunk","getState","first_image","res","process_raw_student_sheets","add_validation_error","set_filter_function","set_validation_errors","event_sheet","typed_event_rows","set_event_spreadsheet","set_timeline_series","_payload","test_2016","student_sheet_requests","all","raw_student_rows","sheet_payload","set_map_spreadsheet","map_rows","set_map_stats","map_stats_obj","set_all_images","set_gallery_images","set_active_images","filter_gallery_2","filter_result","arraysEqual","debug","set_group_filter","final_result","get_group_filter","single_filter","get_single_filter","reset_gallery","set_active_filter","active_filter","source_row","series0101","photo_sources","startsWith","photo_info","kind","set_loaded","is_loaded","store","createStore","render","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.06dfeac6.chunk.js","sourcesContent":["import { Paragraph, Text, Pane } from \"evergreen-ui\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nfunction Sidebar() {\r\n  const theme = useTheme();\r\n\r\n  const sidebarContainer = {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    paddingBottom: \"1em\",\r\n    paddingRight: \"2em\",\r\n    textAlign: \"left\" as const,\r\n    display: \"flex\",\r\n    flexDirection: \"column\" as const,\r\n    justifyContent: \"space-evenly\",\r\n    color: theme.palette.primary.main,\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n\r\n  const sidebarBold = {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"9pt\",\r\n    lineHeight: \"12pt\",\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: 800,\r\n  } as React.CSSProperties;\r\n\r\n  const sidebarParagraph = {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"9pt\",\r\n    lineHeight: \"12pt\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <Pane style={sidebarContainer}>\r\n      <Text style={{ lineHeight: \"12pt\" }}>\r\n        <Paragraph style={sidebarBold}>\r\n          Since 2001 Raleigh has experienced an unprecedented 43% population\r\n          growth. As the city continues to expand physically and economically,\r\n          the need for an inclusive dialog concerning the type of city that\r\n          Raleigh should be increases dramatically. Many of downtown’s adjacent\r\n          historic neighborhoods are struggling to maintain their identity as\r\n          rising property values displace longtime community members and new\r\n          development erases historic urban fabric. This reality makes for a\r\n          critical moment to reflect and recognize significant urban spaces as\r\n          we shape the future city. These series of maps created by students in\r\n          a Graduate seminar in the College of Design at NC State use mapping as\r\n          a way to examine the history and future of Raleigh's urban develop—not\r\n          just from a physical and infrastructural perspective, but also the\r\n          ways that social, economic, political and natural development have\r\n          also shaped it. They offer alternative methods to visualize, capture\r\n          and integrate contemporary and historic voices into a rich discourse\r\n          on community, culture and urban redevelopment.\r\n        </Paragraph>\r\n      </Text>\r\n      {/* <Text style={sidebarParagraph}>\r\n        <br></br>\r\n        <Paragraph style={sidebarParagraph}>\r\n          Building on the seminal work of theorists like James Corner, Alan\r\n          Berger, JB Harley, Anu Mathur, Dilip da Cunha and others, these maps\r\n          also call for a critical evaluation of the map that goes beyond the\r\n          examination of the artifact (i.e. the map) to include the critical\r\n          evaluation of the activity of mapping and its impact on the\r\n          propositional nature of design. As the landscape architect and\r\n          theorist James Corner has argued “the function of mapping is less to\r\n          mirror reality than to engender the reshaping of the world in which\r\n          people live” (Corner 1999, 213). These maps aim to open up\r\n          conversations about this very reshaping.\r\n        </Paragraph>\r\n      </Text> */}\r\n    </Pane>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { createTypedHooks } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\n","import { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport {CrossIcon, Heading, Paragraph} from 'evergreen-ui';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactSlick from 'react-slick';\r\nimport {GlassMagnifier} from 'react-image-magnifiers';\r\nimport { useStoreState } from \"../../hooks\";\r\n// https://material-ui.com/components/material-icons/\r\n\r\n\r\ninterface LightBoxProps{\r\n    show: boolean,\r\n    onClick: any,\r\n};\r\n\r\nconst LightBox = ({show, onClick}: LightBoxProps) => {\r\n    const active_lightbox = useStoreState(state=>state.map_data.active_lightbox);\r\n    const theme = useTheme();\r\n    const slickSlide = {\r\n        height: '500px',\r\n      //   width: '500px',  \r\n        width: '100vh',  \r\n      } as React.CSSProperties\r\n\r\n      \r\n    const galleryStyle = {\r\n        height: '90vh'\r\n        // height: '100%'\r\n    }\r\n\r\n    const backDropContainer = {\r\n        width: '100%', \r\n        height: '100%',\r\n        paddingLeft: '2em',\r\n        // padding: '5em',\r\n    }\r\n    const mainGrid = {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        spacing: 0,\r\n        justify: 'space-around',\r\n    };\r\n\r\n    const closeButtonContainer = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        color: 'white'\r\n    } as React.CSSProperties\r\n\r\n    const textStyle = {\r\n        color: 'White',\r\n        fontSize: '12pt',\r\n        lineHeight: '12pt',\r\n    }\r\n\r\n    const slick_props= {\r\n        // adaptiveHeight: false, \r\n        // adaptiveHeight: true, \r\n        variableWidth: true,\r\n        // centerMode: true, \r\n        slidesToShow: 1,\r\n        // adaptiveHeight: false, \r\n    }\r\n\r\n    // console.log(tag_stats);\r\n    const LimitedBackdrop = withStyles({\r\n        root: {\r\n          position: \"absolute\",\r\n          zIndex: 1,\r\n          boxSizing: \"border-box\",\r\n          paddingLeft: '2em',\r\n          paddingTop: '2em',\r\n          opacity: .5,\r\n          backgroundColor: 'rgb(0 0 0 / 73%)'\r\n        }\r\n    })(Backdrop);\r\n\r\n    return (\r\n    <>\r\n     <LimitedBackdrop open={show}>\r\n                <div style = {closeButtonContainer}  onClick={onClick}>\r\n                <CrossIcon></CrossIcon>\r\n                </div>\r\n\r\n            {/* <LimitedBackdrop open={showLightbox} onClick={()=>setShowLightBox(false)}> */}\r\n                <div style = {backDropContainer}>\r\n                    <Grid container spacing = {3} style = {mainGrid}>\r\n                 \r\n                        <Grid item xs = {3}>\r\n                        <Heading size = {400} color = {'white'} >{active_lightbox.title}</Heading>\r\n                            <Paragraph>\r\n                                {active_lightbox.author}\r\n                            </Paragraph>\r\n                            <Paragraph style = {textStyle}>\r\n                            {active_lightbox.description.replace(\"___\", \"\")}\r\n                            </Paragraph>\r\n                            <Paragraph style = {textStyle}>\r\n                            </Paragraph>\r\n                        </Grid>\r\n                        <Grid item xs = {9} style = {galleryStyle}>\r\n                        <ReactSlick\r\n                            {...{\r\n                                dots: true,\r\n                                infinite: true,\r\n                                speed: 500,\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 1\r\n                            }}\r\n                            {...slick_props}\r\n                            // {...rsProps}\r\n                        >\r\n                            {active_lightbox.images.map((src: any, index) => (\r\n                                <div key={index} style = {slickSlide}>\r\n                                    <GlassMagnifier\r\n                                        imageSrc = {src.source}\r\n                                        allowOverflow = {true}\r\n                                        magnifierSize = {\"40%\"}\r\n                                        \r\n                                    />\r\n                                \r\n                                </div>\r\n                            ))}\r\n                        </ReactSlick>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n        \r\n                </div>\r\n            </LimitedBackdrop>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default LightBox;","import React, { useState, useEffect } from \"react\";\r\nimport Gallery from \"react-grid-gallery\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { useStoreActions, useStoreState } from \"../hooks\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport LightBox from \"./ImageGallery/LightBox\";\r\nimport \"../css/GridGallery.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../css/SlickSlide.css\";\r\n\r\n// https://codesandbox.io/s/react-grid-gallery-ztf4n?file=/src/index.js:358-880\r\n// https://codesandbox.io/s/r48lm1jopq\r\n\r\nfunction getRandomNumber(min: number, max: number) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.random() * (max - min) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nconst MapGallery = () => {\r\n  // var shuffleClassName = this.state.toggleActive ? \"player-control-icon active\" : \"player-control-icon\"\r\n  const gallery_images = useStoreState(\r\n    (state) => state.map_data?.computed_active_images\r\n  );\r\n  // const gallery_images = useStoreState(\r\n  //   (state) => state.map_data?.active_images\r\n  // );\r\n  const [showLightbox, setShowLightBox] = useState(false);\r\n  const set_active_lightbox = useStoreActions(\r\n    (actions) => actions.map_data.set_lightbox_content\r\n  );\r\n  const active_lightbox = useStoreState(\r\n    (state) => state.map_data.active_lightbox\r\n  );\r\n  // const test_all_images = useStoreState(\r\n  //   (state) => state.map_data.test_gallery_images\r\n  // );\r\n  const data_loaded = useStoreState((state) => state.map_data.loaded);\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    console.log(gallery_images);\r\n    // }, [test_all_images, active_lightbox]);\r\n  }, [gallery_images, active_lightbox]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"data loaded changd, val is\", data_loaded);\r\n  }, [data_loaded]);\r\n\r\n  const containerStyle = {\r\n    backgroundColor: \"white\",\r\n    height: \"100%\",\r\n    margin: \"auto\",\r\n    flexDirection: \"column\",\r\n  } as React.CSSProperties;\r\n\r\n  function get_lightbox_tb_2(this: any) {\r\n    console.log(this.props);\r\n    setShowLightBox((showLightbox) => !showLightbox);\r\n    console.log(showLightbox);\r\n    set_active_lightbox(this.props.item);\r\n  }\r\n\r\n  const scrollContainer = {\r\n    overflow: \"hidden\",\r\n    height: \"100%\",\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n  };\r\n\r\n  function thumbnail_style(props: any, z: any, q: any) {\r\n    const duration = getRandomNumber(0.5, 4);\r\n    if (data_loaded) {\r\n      return {\r\n        animation: `fadein ${duration}s normal`,\r\n        animationIterationCound: 1,\r\n      };\r\n    }\r\n  }\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div>\r\n        <LightBox show={showLightbox} onClick={() => setShowLightBox(false)} />\r\n      </div>\r\n      <div style={scrollContainer}>\r\n        <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div style={{ height: \"100%\", paddingTop: \"0\", width: \"100%\" }}>\r\n            <Gallery\r\n              tagStyle={{ display: \"none\" }}\r\n              // renderItem = {test_render_item}\r\n              // images={test_all_images}\r\n              images={gallery_images}\r\n              customOverlay={<div style={{ backgroundColor: \"red\" }}></div>}\r\n              rowHeight={120}\r\n              maxRows={10}\r\n              enableLightbox={false}\r\n              enableImageSelection={false}\r\n              onClickThumbnail={get_lightbox_tb_2}\r\n              tileViewportStyle={thumbnail_style}\r\n            ></Gallery>\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapGallery;\r\n","export enum AuthorDisciplineFilter {\r\n  ARTDESIGN = \"ARTDESIGN\",\r\n  ARCHITECTURE = \"ARCHITECTURE\",\r\n  LANDSCAPE = \"LANDSCAPE\",\r\n  OTHER = \"OTHER\",\r\n  ARTDESIGN_2016 = \"ARTDESIGN_2016\",\r\n  ARTDESIGN_2018 = \"ARTDESIGN_2018\",\r\n  ARTDESIGN_2020 = \"ARTDESIGN_2020\",\r\n  ARCHITECTURE_2016 = \"ARTDESIGN_2016\",\r\n  ARCHITECTURE_2018 = \"ARTDESIGN_2018\",\r\n  ARCHITECTURE_2020 = \"ARTDESIGN_2020\",\r\n  OTHER_2016 = \"OTHER_2016\",\r\n  OTHER_2018 = \"OTHER_2018\",\r\n  OTHER_2020 = \"OTHER_2020\",\r\n  LANDSCAPE_2016 = \"LANDSCAPE_2016\",\r\n  LANDSCAPE_2018 = \"LANDSCAPE_2018\",\r\n  LANDSCAPE_2020 = \"LANDSCAPE_2020\",\r\n}\r\n\r\nexport enum FilterState {\r\n  SOLO = \"SOLO\",\r\n  DEACTIVATED = \"DEACTIVATED\",\r\n  DEFAULT = \"DEFAULT\",\r\n}\r\n// export\r\n\r\nexport enum EventLevel {\r\n  national = \"national\",\r\n  state = \"state\",\r\n  city = \"city\",\r\n  international = \"international\",\r\n  NA = \"NA\",\r\n}\r\n\r\nexport enum FilterGroup {\r\n  STUDENTS_2016 = \"STUDENTS_2016\",\r\n  STUDENTS_2018 = \"STUDENTS_2018\",\r\n  STUDENTS_2020 = \"STUDENTS_2020\",\r\n  BUILT_TOPIC = \"BUILT_TOPIC\",\r\n  ECONOMIC_TOPIC = \"ECONOMIC_TOPIC\",\r\n  NATURAL_TOPIC = \"NATURAL_TOPIC\",\r\n  POLITICAL_TOPIC = \"POLITICAL_TOPIC\",\r\n  SOCIAL_TOPIC = \"SOCIAL_TOPIC\",\r\n  EQUITY_THEME = \"EQUITY_THEME\",\r\n  ACCESS_THEME = \"ACCESS_THEME\",\r\n  DIVERISTY_THEME = \"DIVERISTY_THEME\",\r\n  NONE = \"NONE\",\r\n  ARCHITECTURE_STUDENTS = \"ARCHITECTURE\",\r\n  ARTDESIGN_STUDENTS = \"ARTDESIGN\",\r\n  OTHER_STUDENTS = \"OTHER\",\r\n  LANDSCAPE_STUDENTS = \"LANDSCAPE\",\r\n}\r\n\r\nexport enum EventType {\r\n  DATE = \"DATE\",\r\n  RANGE = \"RANGE\",\r\n}\r\n\r\n//Correspond to the subtopic value for a student\r\nexport enum MapSubTopic {\r\n  //BUILT ENVIRONMENT\r\n  BUILDINGS = \"BUILDINGS\",\r\n  TRANSPORTATION = \"TRANSPORTATION\",\r\n  INFRASTR = \"INFRASTR\",\r\n  //NATURAL ENVIRONMENT\r\n  GREENSPACE = \"GREENSPACE\",\r\n  HYDROLOGY = \"HYDROLOGY\",\r\n  POLLUTION = \"POLLUTION\",\r\n  //SOCIAL-CULTURAL ENVIRONMENT\r\n  EDUCATION = \"EDUCATION\",\r\n  HEALTHSAFETY = \"HEALTHSAFETY\",\r\n  RACEGEN = \"RACEGEN\",\r\n  //POLITICAL ENVIRONMENT\r\n  GOVERMENT = \"GOVERMENT\",\r\n  POLICY = \"POLICY\",\r\n  CIVICENG = \"CIVICENG\",\r\n  //ECONOMIC ENVIRONMENT\r\n  WORK = \"WORK\",\r\n  URBANDEV = \"URBANDEV\",\r\n  PROPERTY = \"PROPERTY\",\r\n}\r\n// export enum MapSubTopic {\r\n//   //BUILT ENVIRONMENT\r\n//   BE_BUILDINGS = \"BUILDINGS\",\r\n//   BE_TRANSPORTATION = \"TRANSPORTATION\",\r\n//   BE_INFRASTR = \"INFRASTR\",\r\n//   //NATURAL ENVIRONMENT\r\n//   NE_GREENSPACE = \"GREENSPACE\",\r\n//   NE_HYDROLOGY = \"HYDROLOGY\",\r\n//   NE_POLLUTION = \"POLLUTION\",\r\n//   //SOCIAL-CULTURAL ENVIRONMENT\r\n//   SE_EDUCATION = \"EDUCATION\",\r\n//   SE_HEALTH = \"HEALTH\",\r\n//   SE_RACEGEN = \"RACEGEN\",\r\n//   //POLITICAL ENVIRONMENT\r\n//   PE_GOV = \"GOV\",\r\n//   PE_POLICY = \"POLICY\",\r\n//   PE_CIVICENG = \"CIVICENG\",\r\n//   //ECONOMIC ENVIRONMENT\r\n//   EE_WORK = \"WORK\",\r\n//   EE_URBANDEV = \"URBANDEV\",\r\n//   EE_PROPERTY = \"PROPERTY\",\r\n// }\r\n\r\nexport enum Topic {\r\n  BE = \"BE\",\r\n  SE = \"SE\",\r\n  PE = \"PE\",\r\n  EE = \"EE\",\r\n  NE = \"NE\",\r\n}\r\n\r\nexport enum GalleryFilterType {\r\n  TOPIC,\r\n  DISCIPLINE,\r\n  THEME,\r\n  FILTERGROUP,\r\n  FILTERGROUP_TOPIC,\r\n  FILTERGROUP_YEAR,\r\n}\r\nexport enum ThemeCategoryFilter {\r\n  EQUITY = \"EQUITY\",\r\n  ACCESS = \"ACCESS\",\r\n  DIVERSITY = \"DIVERSITY\",\r\n}\r\n","import {\r\n  Heading,\r\n  Paragraph,\r\n  Link,\r\n  Strong,\r\n  Small,\r\n  Text,\r\n  Icon,\r\n  Pane,\r\n  ArrowRightIcon,\r\n} from \"evergreen-ui\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport type { EventRowValues } from \"../../model/map_data\";\r\nimport { EventLevel, EventType } from \"../../model/enums\";\r\nimport { useEffect } from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\n\r\ntype EventInfoDisplayProps = {\r\n  info: EventRowValues | undefined;\r\n};\r\n\r\nfunction EventInfoDisplay({ info }: EventInfoDisplayProps) {\r\n  const theme = useTheme();\r\n  const infoContainer = {\r\n    height: \"100%\",\r\n    // fontFamily: theme.typography.fontFamily,\r\n    // border: `1px solid ${theme.palette.primary.main}`,\r\n  } as React.CSSProperties;\r\n  const infoBody = {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"medium\",\r\n    // lineHeight: \"9pt\",\r\n    paddingTop: \".5em\",\r\n  } as React.CSSProperties;\r\n\r\n  const infoHeader = {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"9pt\",\r\n    lineHeight: \"5pt\",\r\n    fontFamily: theme.typography.fontFamily,\r\n    textDecoration: \"underline\",\r\n  } as React.CSSProperties;\r\n\r\n  const paragraph = {\r\n    // : \"left\"\r\n    color: theme.palette.primary.main,\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontSize: \"9pt\",\r\n    lineHeight: \"15pt\",\r\n  } as React.CSSProperties;\r\n\r\n  const default_val: EventRowValues = {\r\n    start: new Date(1 / 1 / 1900),\r\n    end: new Date(1 / 1 / 1900),\r\n    title: \"\",\r\n    info: \"\",\r\n    tags: \"\",\r\n    // type: EventType.DATE,\r\n    category: EventLevel.national,\r\n  };\r\n  const data = info ?? default_val;\r\n  useEffect(() => {}, [info]);\r\n\r\n  return (\r\n    <div style={infoContainer}>\r\n      <Scrollbars style={{ width: \"100%\", height: \"100%\" }}>\r\n        <Text style={infoHeader}>\r\n          <Paragraph style={infoHeader}>{data.title}</Paragraph>\r\n        </Text>\r\n        <Text style={paragraph}>\r\n          <Paragraph style={paragraph}>{data.info}</Paragraph>\r\n        </Text>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventInfoDisplay;\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function scaleAsString(scale) {\r\n    return `${scale.domain()}-${scale.range()}`;\r\n}\r\n\r\n// http://stackoverflow.com/a/28857255\r\nexport function getElementOffset(element) {\r\n    const de = document.documentElement;\r\n    const box = element.getBoundingClientRect();\r\n    const top = box.top + window.pageYOffset - de.clientTop;\r\n    const left = box.left + window.pageXOffset - de.clientLeft;\r\n    return { top, left };\r\n}\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Renders a brush with the range defined in the prop `timeRange`.\r\n */\r\nexport default class Brush extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isBrushing: false\r\n        };\r\n\r\n        this.handleBrushMouseDown = this.handleBrushMouseDown.bind(this);\r\n        this.handleOverlayMouseDown = this.handleOverlayMouseDown.bind(this);\r\n        this.handleHandleMouseDown = this.handleHandleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    viewport() {\r\n        const { width, timeScale } = this.props;\r\n        const viewBeginTime = timeScale.invert(0);\r\n        const viewEndTime = timeScale.invert(width);\r\n        return new TimeRange(viewBeginTime, viewEndTime);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleBrushMouseDown(e) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = +this.props.timeRange.begin();\r\n        const end = +this.props.timeRange.end();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"brush\",\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0\r\n        });\r\n    }\r\n\r\n    handleOverlayMouseDown(e) {\r\n        e.preventDefault();\r\n\r\n        const offset = getElementOffset(this.overlay);\r\n        const x = e.pageX - offset.left;\r\n        const t = this.props.timeScale.invert(x).getTime();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"overlay\",\r\n            initialBrushBeginTime: t,\r\n            initialBrushEndTime: t,\r\n            initialBrushXYPosition: null\r\n        });\r\n    }\r\n\r\n    handleHandleMouseDown(e, handle) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = this.props.timeRange.begin().getTime();\r\n        const end = this.props.timeRange.end().getTime();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: `handle-${handle}`,\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0\r\n        });\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        e.preventDefault();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: false,\r\n            brushingInitializationSite: null,\r\n            initialBrushBeginTime: null,\r\n            initialBrushEndTime: null,\r\n            initialBrushXYPosition: null\r\n        });\r\n    }\r\n\r\n    /**\r\n   * Handles clearing the TimeRange if the user clicks on the overlay (but\r\n   * doesn't drag to create a new brush). This will send a null as the\r\n   * new TimeRange. The user of this code can react to that however they\r\n   * see fit, but the most logical response is to reset the timerange to\r\n   * some initial value. This behavior is optional.\r\n   */\r\n    handleClick() {\r\n        if (this.props.allowSelectionClear && this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(null);\r\n        }\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const viewport = this.viewport();\r\n\r\n        if (this.state.isBrushing) {\r\n            let newBegin;\r\n            let newEnd;\r\n\r\n            const tb = this.state.initialBrushBeginTime;\r\n            const te = this.state.initialBrushEndTime;\r\n\r\n            if (this.state.brushingInitializationSite === \"overlay\") {\r\n                const offset = getElementOffset(this.overlay);\r\n                const xx = e.pageX - offset.left;\r\n                const t = this.props.timeScale.invert(xx).getTime();\r\n                if (t < tb) {\r\n                    newBegin = t < viewport.begin().getTime() ? viewport.begin() : t;\r\n                    newEnd = tb > viewport.end().getTime() ? viewport.end() : tb;\r\n                } else {\r\n                    newBegin = tb < viewport.begin().getTime() ? viewport.begin() : tb;\r\n                    newEnd = t > viewport.end().getTime() ? viewport.end() : t;\r\n                }\r\n            } else {\r\n                const xy0 = this.state.initialBrushXYPosition;\r\n                let timeOffset = this.props.timeScale.invert(xy0[0]).getTime() -\r\n                    this.props.timeScale.invert(xy[0]).getTime();\r\n\r\n                // Constrain\r\n                let startOffsetConstraint = timeOffset;\r\n                let endOffsetConstrain = timeOffset;\r\n                if (tb - timeOffset < viewport.begin()) {\r\n                    startOffsetConstraint = tb - viewport.begin().getTime();\r\n                }\r\n                if (te - timeOffset > viewport.end()) {\r\n                    endOffsetConstrain = te - viewport.end().getTime();\r\n                }\r\n\r\n                newBegin = this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-left\"\r\n                    ? parseInt(tb - startOffsetConstraint, 10)\r\n                    : tb;\r\n                newEnd = this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-right\"\r\n                    ? parseInt(te - endOffsetConstrain, 10)\r\n                    : te;\r\n\r\n                // Swap if needed\r\n                if (newBegin > newEnd) [newBegin, newEnd] = [newEnd, newBegin];\r\n            }\r\n\r\n            if (this.props.onTimeRangeChanged) {\r\n                this.props.onTimeRangeChanged(new TimeRange(newBegin, newEnd));\r\n            }\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    renderOverlay() {\r\n        const { width, height } = this.props;\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"brush\":\r\n                cursor = \"move\";\r\n                break;\r\n            default:\r\n                cursor = \"crosshair\";\r\n        }\r\n\r\n        const overlayStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor\r\n        };\r\n        return (\r\n            <rect\r\n                ref={c => {\r\n                    this.overlay = c;\r\n                }}\r\n                x={0}\r\n                y={0}\r\n                width={width}\r\n                height={height}\r\n                style={overlayStyle}\r\n                onMouseDown={this.handleOverlayMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n                onClick={this.handleClick}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBrush() {\r\n        const { timeRange, timeScale, height, style } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"overlay\":\r\n                cursor = \"crosshair\";\r\n                break;\r\n            default:\r\n                cursor = \"move\";\r\n        }\r\n\r\n        // Style of the brush area\r\n        const brushDefaultStyle = {\r\n            fill: \"#777\",\r\n            fillOpacity: 0.3,\r\n            stroke: \"#fff\",\r\n            shapeRendering: \"crispEdges\",\r\n            cursor\r\n        };\r\n        const brushStyle = merge(true, brushDefaultStyle, style);\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const begin = range.begin();\r\n            const end = range.end();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const bounds = { x, y, width, height };\r\n\r\n            return (\r\n                <rect\r\n                    {...bounds}\r\n                    style={brushStyle}\r\n                    pointerEvents=\"all\"\r\n                    onMouseDown={this.handleBrushMouseDown}\r\n                    onMouseUp={this.handleMouseUp}\r\n                />\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    renderHandles() {\r\n        const { timeRange, timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        // Style of the handles\r\n        const handleStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor: \"ew-resize\"\r\n        };\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const [begin, end] = range.toJSON();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const handleSize = this.props.handleSize;\r\n\r\n            const leftHandleBounds = { x: x - 1, y, width: handleSize, height };\r\n            const rightHandleBounds = {\r\n                x: x + (width - handleSize),\r\n                y,\r\n                width: handleSize + 1,\r\n                height\r\n            };\r\n\r\n            return (\r\n                <g>\r\n                    <rect\r\n                        {...leftHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"left\")}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                    <rect\r\n                        {...rightHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"right\")}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <g onMouseMove={this.handleMouseMove}>\r\n                {this.renderOverlay()}\r\n                {this.renderBrush()}\r\n                {this.renderHandles()}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nBrush.propTypes = {\r\n    /**\r\n   * The timerange for the brush. Typically you would maintain this\r\n   * as state on the surrounding page, since it would likely control\r\n   * another page element, such as the range of the main chart. See\r\n   * also `onTimeRangeChanged()` for receiving notification of the\r\n   * brush range being changed by the user.\r\n   *\r\n   * Takes a Pond TimeRange object.\r\n   */\r\n    timeRange: PropTypes.instanceOf(TimeRange),\r\n    /**\r\n   * The brush is rendered as an SVG rect. You can specify the style\r\n   * of this rect using this prop.\r\n   */\r\n    style: PropTypes.object, //eslint-disable-line\r\n    /**\r\n   * The size of the invisible side handles. Defaults to 6 pixels.\r\n   */\r\n    handleSize: PropTypes.number,\r\n    allowSelectionClear: PropTypes.bool,\r\n    /**\r\n   * A callback which will be called if the brush range is changed by\r\n   * the user. It is called with a Pond TimeRange object. Note that if\r\n   * `allowSelectionClear` is set to true, then this can also be called\r\n   * when the user performs a simple click outside the brush area. In\r\n   * this case it will be called with null as the TimeRange. You can\r\n   * use this to reset the selection, perhaps to some initial range.\r\n   */\r\n    onTimeRangeChanged: PropTypes.func,\r\n    /**\r\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n   */\r\n    timeScale: PropTypes.func,\r\n    /**\r\n   * [Internal] The width supplied by the surrounding ChartContainer\r\n   */\r\n    width: PropTypes.number,\r\n    /**\r\n   * [Internal] The height supplied by the surrounding ChartContainer\r\n   */\r\n    height: PropTypes.number\r\n};\r\n\r\nBrush.defaultProps = {\r\n    handleSize: 6,\r\n    allowSelectionClear: false\r\n};\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Renders a brush with the range defined in the prop `timeRange`.\r\n */\r\nexport default class MultiBrush extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isBrushing: false\r\n        };\r\n\r\n        this.handleBrushMouseDown = this.handleBrushMouseDown.bind(this);\r\n        this.handleOverlayMouseDown = this.handleOverlayMouseDown.bind(this);\r\n        this.handleHandleMouseDown = this.handleHandleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    viewport() {\r\n        const { width, timeScale } = this.props;\r\n        const viewBeginTime = timeScale.invert(0);\r\n        const viewEndTime = timeScale.invert(width);\r\n        return new TimeRange(viewBeginTime, viewEndTime);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleBrushMouseDown(e, brush_idx) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = +this.props.timeRanges[brush_idx].begin();\r\n        const end = +this.props.timeRanges[brush_idx].end();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"brush\",\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0,\r\n            brushIndex: brush_idx\r\n        });\r\n    }\r\n\r\n    handleOverlayMouseDown(e) {\r\n        if (this.props.allowFreeDrawing || this.hasNullBrush()) {\r\n            e.preventDefault();\r\n\r\n            const offset = getElementOffset(this.overlay);\r\n            const x = e.pageX - offset.left;\r\n            const t = this.props.timeScale.invert(x).getTime();\r\n\r\n            document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n            const drawingPosition = this.props.allowFreeDrawing\r\n                ? this.props.timeRanges.length\r\n                : this.props.timeRanges.length - 1;\r\n\r\n            this.setState({\r\n                isBrushing: true,\r\n                brushingInitializationSite: \"overlay\",\r\n                initialBrushBeginTime: t,\r\n                initialBrushEndTime: t,\r\n                initialBrushXYPosition: null,\r\n                brushIndex: drawingPosition\r\n            });\r\n        }\r\n    }\r\n\r\n    hasNullBrush = () => {\r\n        return (\r\n            (this.props.timeRanges || []).length > 0 &&\r\n            this.props.timeRanges[this.props.timeRanges.length - 1] == null\r\n        );\r\n    };\r\n\r\n    handleMouseClick = (e, brushIndex) => {\r\n        if (this.props.onTimeRangeClicked) {\r\n            this.props.onTimeRangeClicked(brushIndex);\r\n        }\r\n    };\r\n\r\n    handleHandleMouseDown(e, handle, brushIndex) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = this.props.timeRanges[brushIndex].begin().getTime();\r\n        const end = this.props.timeRanges[brushIndex].end().getTime();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: `handle-${handle}`,\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0,\r\n            brushIndex: brushIndex\r\n        });\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        e.preventDefault();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        const brushing_is = this.state.brushIndex;\r\n        this.setState(\r\n            {\r\n                isBrushing: false,\r\n                brushingInitializationSite: null,\r\n                initialBrushBeginTime: null,\r\n                initialBrushEndTime: null,\r\n                initialBrushXYPosition: null,\r\n                brushIndex: null\r\n            },\r\n            () => {\r\n                if (this.props.onUserMouseUp) {\r\n                    this.props.onUserMouseUp(brushing_is);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const viewport = this.viewport();\r\n\r\n        if (this.state.isBrushing) {\r\n            let newBegin;\r\n            let newEnd;\r\n\r\n            const tb = this.state.initialBrushBeginTime;\r\n            const te = this.state.initialBrushEndTime;\r\n\r\n            if (this.state.brushingInitializationSite === \"overlay\") {\r\n                const offset = getElementOffset(this.overlay);\r\n                const xx = e.pageX - offset.left;\r\n                const t = this.props.timeScale.invert(xx).getTime();\r\n                if (t < tb) {\r\n                    newBegin = t < viewport.begin().getTime() ? viewport.begin() : t;\r\n                    newEnd = tb > viewport.end().getTime() ? viewport.end() : tb;\r\n                } else {\r\n                    newBegin = tb < viewport.begin().getTime() ? viewport.begin() : tb;\r\n                    newEnd = t > viewport.end().getTime() ? viewport.end() : t;\r\n                }\r\n            } else {\r\n                const xy0 = this.state.initialBrushXYPosition;\r\n                let timeOffset =\r\n                    this.props.timeScale.invert(xy0[0]).getTime() -\r\n                    this.props.timeScale.invert(xy[0]).getTime();\r\n\r\n                // Constrain\r\n                let startOffsetConstraint = timeOffset;\r\n                let endOffsetConstrain = timeOffset;\r\n                if (tb - timeOffset < viewport.begin()) {\r\n                    startOffsetConstraint = tb - viewport.begin().getTime();\r\n                }\r\n                if (te - timeOffset > viewport.end()) {\r\n                    endOffsetConstrain = te - viewport.end().getTime();\r\n                }\r\n\r\n                newBegin =\r\n                    this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-left\"\r\n                        ? parseInt(tb - startOffsetConstraint, 10)\r\n                        : tb;\r\n                newEnd =\r\n                    this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-right\"\r\n                        ? parseInt(te - endOffsetConstrain, 10)\r\n                        : te;\r\n\r\n                // Swap if needed\r\n                if (newBegin > newEnd) [newBegin, newEnd] = [newEnd, newBegin];\r\n            }\r\n\r\n            if (this.props.onTimeRangeChanged) {\r\n                this.props.onTimeRangeChanged(\r\n                    new TimeRange(newBegin, newEnd),\r\n                    this.state.brushIndex\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    renderOverlay() {\r\n        const { width, height } = this.props;\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"brush\":\r\n                cursor = \"move\";\r\n                break;\r\n            default:\r\n                cursor =\r\n                    this.props.allowFreeDrawing || this.hasNullBrush() ? \"crosshair\" : \"default\";\r\n        }\r\n\r\n        const overlayStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor\r\n        };\r\n        return (\r\n            <rect\r\n                ref={c => {\r\n                    this.overlay = c;\r\n                }}\r\n                x={0}\r\n                y={0}\r\n                width={width}\r\n                height={height}\r\n                style={overlayStyle}\r\n                onClick={this.handleMouseClick}\r\n                onMouseDown={this.handleOverlayMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBrush(timeRange, idx) {\r\n        const { timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"overlay\":\r\n                cursor =\r\n                    this.props.allowFreeDrawing || this.hasNullBrush() ? \"crosshair\" : \"default\";\r\n                break;\r\n            default:\r\n                cursor = \"move\";\r\n        }\r\n\r\n        // Style of the brush area\r\n        const brushDefaultStyle = {\r\n            fill: \"#777\",\r\n            fillOpacity: 0.3,\r\n            stroke: \"#fff\",\r\n            shapeRendering: \"crispEdges\",\r\n            cursor\r\n        };\r\n        const userStyle = this.props.style ? this.props.style(idx) : {};\r\n        const brushStyle = merge(true, brushDefaultStyle, userStyle);\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const begin = range.begin();\r\n            const end = range.end();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const bounds = { x, y, width, height };\r\n\r\n            return (\r\n                <rect\r\n                    {...bounds}\r\n                    key={`${idx}-${brushStyle}`}\r\n                    style={brushStyle}\r\n                    pointerEvents=\"all\"\r\n                    onClick={e => this.handleMouseClick(e, idx)}\r\n                    onMouseDown={e => this.handleBrushMouseDown(e, idx)}\r\n                    onMouseUp={this.handleMouseUp}\r\n                />\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    renderHandles(timeRange, idx) {\r\n        const { timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        // Style of the handles\r\n        const handleStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor: \"ew-resize\"\r\n        };\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const [begin, end] = range.toJSON();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const handleSize = this.props.handleSize;\r\n\r\n            const leftHandleBounds = { x: x - 1, y, width: handleSize, height };\r\n            const rightHandleBounds = {\r\n                x: x + (width - handleSize),\r\n                y,\r\n                width: handleSize + 1,\r\n                height\r\n            };\r\n\r\n            return (\r\n                <g>\r\n                    <rect\r\n                        {...leftHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"left\", idx)}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                    <rect\r\n                        {...rightHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"right\", idx)}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <g onMouseMove={this.handleMouseMove}>\r\n                {this.renderOverlay()}\r\n                {(this.props.timeRanges || []).map((timeRange, idx) => {\r\n                    return (\r\n                        <g key={`multibrush_${idx}`}>\r\n                            {this.renderBrush(timeRange, idx)}\r\n                            {this.renderHandles(timeRange, idx)}\r\n                        </g>\r\n                    );\r\n                })}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nMultiBrush.propTypes = {\r\n    /**\r\n     * The timeranges for the brushes. Typically you would maintain this\r\n     * as state on the surrounding page, since it would likely control\r\n     * another page element, such as the range of the main chart. See\r\n     * also `onTimeRangeChanged()` for receiving notification of the\r\n     * brush range being changed by the user.\r\n     *\r\n     * Takes an array of Pond TimeRange object.\r\n     */\r\n    timeRanges: PropTypes.arrayOf(PropTypes.instanceOf(TimeRange)),\r\n\r\n    /**\r\n     * The brush is rendered as an SVG rect. You can specify the style\r\n     * of this rect using this prop. The brush style is a function that you\r\n     * provide. It will be called with the index of the TimeRange, corresponding\r\n     * to those in the `timeRanges` prop.\r\n     */\r\n    style: PropTypes.func, //eslint-disable-line\r\n\r\n    /**\r\n     * The size of the invisible side handles. Defaults to 6 pixels.\r\n     */\r\n    handleSize: PropTypes.number,\r\n\r\n    /**\r\n     * If this prop is false, you will only be able to draw a new brush if the last position of the timeRanges\r\n     * array is equal to null, otherwise it will allow the free drawing and the index passed to onTimeRangeChanged\r\n     * will the equal to the length of the timeRanges array\r\n     */\r\n    allowFreeDrawing: PropTypes.bool,\r\n\r\n    /**\r\n     * A callback which will be called if the brush range is changed by\r\n     * the user. It is called with a Pond TimeRange object and the index position of\r\n     * the brush in the timeRanges prop.\r\n     */\r\n    onTimeRangeChanged: PropTypes.func,\r\n\r\n    /**\r\n     * when user stop drawing or dragging box\r\n     */\r\n    onUserMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * When the user clicks one of the TimeRanges\r\n     */\r\n    onTimeRangeClicked: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n     */\r\n    timeScale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The width supplied by the surrounding ChartContainer\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nMultiBrush.defaultProps = {\r\n    handleSize: 6,\r\n    allowFreeDrawing: true\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport \"d3-transition\";\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\nimport { range } from \"d3-array\";\r\nimport { axisLeft, axisRight } from \"d3-axis\";\r\nimport { easeSinOut } from \"d3-ease\";\r\nimport { format } from \"d3-format\";\r\nimport { select } from \"d3-selection\";\r\nimport \"d3-selection-multi\";\r\n\r\nimport { scaleAsString } from \"../js/util\";\r\n\r\nconst MARGIN = 0;\r\n\r\nconst defaultStyle = {\r\n    label: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default label color\r\n        fontWeight: 100,\r\n        fontSize: 12,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    values: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default value color\r\n        fontWeight: 100,\r\n        fontSize: 11,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    ticks: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    },\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    }\r\n};\r\n\r\n/**\r\n * The `YAxis` widget displays a vertical axis to the left or right\r\n * of the charts. A `YAxis` always appears within a `ChartRow`, from\r\n * which it gets its height and positioning. You can have more than\r\n * one axis per row. You do control how wide it is.\r\n *\r\n * Here's a simple YAxis example:\r\n *\r\n * ```js\r\n * <YAxis\r\n *   id=\"price-axis\"\r\n *   label=\"Price (USD)\"\r\n *   min={0} max={100}\r\n *   width=\"60\"\r\n *   type=\"linear\"\r\n *   format=\"$,.2f\"\r\n * />\r\n * ```\r\n *\r\n * Visually you can control the axis `label`, its size via the `width`\r\n * prop, its `format`, and `type` of scale (linear). You can quicky turn\r\n * it on and off with the `visible` prop.\r\n *\r\n * Each axis also defines a scale through a `min` and `max` prop. Chart\r\n * then refer to the axis by by citing the axis `id` in their `axis`\r\n * prop. Those charts will then use the axis scale for their y-scale.\r\n * This is what ties them together. Many charts can use the same axis,\r\n * or not.\r\n *\r\n * Here is an example of two line charts that each have their own axis:\r\n *\r\n * ```js\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis id=\"aud\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" format=\"$,.2f\"/>\r\n *         <Charts>\r\n *             <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\r\n *             <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\r\n *         </Charts>\r\n *         <YAxis id=\"euro\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" format=\"$,.2f\"/>\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n *\r\n *  Note that there are two `<YAxis>` components defined here, one before\r\n *  the `<Charts>` block and one after. This defines that the first axis will\r\n *  appear to the left of the charts and the second will appear right of the charts.\r\n *  Each of the line charts uses its `axis` prop to identify the axis (\"aud\" or \"euro\")\r\n *  it will use for its vertical scale.\r\n */\r\nexport default class YAxis extends React.Component {\r\n    componentDidMount() {\r\n        this.renderAxis(\r\n            this.props.align,\r\n            this.props.scale,\r\n            +this.props.width,\r\n            +this.props.height,\r\n            this.props.showGrid,\r\n            +this.props.chartExtent,\r\n            this.props.hideAxisLine,\r\n            this.props.absolute,\r\n            this.props.type,\r\n            this.props.format,\r\n            this.props.label,\r\n            this.props.tickCount,\r\n            this.props.min,\r\n            this.props.max\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {\r\n            scale,\r\n            align,\r\n            width,\r\n            height,\r\n            chartExtent,\r\n            absolute,\r\n            format,\r\n            type,\r\n            showGrid,\r\n            hideAxisLine,\r\n            label,\r\n            tickCount,\r\n            min,\r\n            max\r\n        } = nextProps;\r\n\r\n        if (scaleAsString(this.props.scale) !== scaleAsString(scale)) {\r\n            this.updateAxis(\r\n                align,\r\n                scale,\r\n                width,\r\n                height,\r\n                showGrid,\r\n                chartExtent,\r\n                hideAxisLine,\r\n                absolute,\r\n                type,\r\n                format,\r\n                label,\r\n                tickCount,\r\n                min,\r\n                max\r\n            );\r\n        } else if (\r\n            this.props.format !== format ||\r\n            this.props.align !== align ||\r\n            this.props.width !== width ||\r\n            this.props.height !== height ||\r\n            this.props.type !== type ||\r\n            this.props.absolute !== absolute ||\r\n            this.props.chartExtent !== chartExtent ||\r\n            this.props.showGrid !== showGrid ||\r\n            this.props.hideAxisLine !== hideAxisLine\r\n        ) {\r\n            this.renderAxis(\r\n                align,\r\n                scale,\r\n                +width,\r\n                +height,\r\n                showGrid,\r\n                chartExtent,\r\n                hideAxisLine,\r\n                absolute,\r\n                type,\r\n                format,\r\n                label,\r\n                tickCount,\r\n                min,\r\n                max\r\n            );\r\n        } else if (this.props.label !== label) {\r\n            this.updateLabel(label);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    yformat(fmt) {\r\n        if (_.isString(fmt)) {\r\n            return format(fmt);\r\n        } else if (_.isFunction(fmt)) {\r\n            return fmt;\r\n        } else {\r\n            return format(\"\");\r\n        }\r\n    }\r\n\r\n    mergeStyles(style) {\r\n        return {\r\n            labelStyle: merge(\r\n                true,\r\n                defaultStyle.label,\r\n                this.props.style.label ? this.props.style.label : {}\r\n            ),\r\n            valueStyle: merge(\r\n                true,\r\n                defaultStyle.values,\r\n                this.props.style.values ? this.props.style.values : {}\r\n            ),\r\n            axisStyle: merge(\r\n                true,\r\n                defaultStyle.axis,\r\n                this.props.style.axis ? this.props.style.axis : {}\r\n            ),\r\n            tickStyle: merge(\r\n                true,\r\n                defaultStyle.ticks,\r\n                this.props.style.ticks ? this.props.style.ticks : {}\r\n            )\r\n        };\r\n    }\r\n\r\n    postSelect(style, hideAxisLine, height) {\r\n        const { valueStyle, tickStyle, axisStyle } = style;\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"text\")\r\n            .styles(valueStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"line\")\r\n            .styles(tickStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".domain\")\r\n            .remove();\r\n\r\n        if (!hideAxisLine) {\r\n            select(ReactDOM.findDOMNode(this))\r\n                .select(\"g\")\r\n                .append(\"line\")\r\n                .styles(axisStyle)\r\n                .attr(\"x1\", 0)\r\n                .attr(\"y1\", 0)\r\n                .attr(\"x2\", 0)\r\n                .attr(\"y2\", height);\r\n        }\r\n    }\r\n\r\n    generator(type, absolute, yformat, axis, scale, height, tickCount, min, max) {\r\n        let axisGenerator;\r\n        if (type === \"linear\" || type === \"power\") {\r\n            if (tickCount > 0) {\r\n                const stepSize = (max - min) / (tickCount - 1);\r\n                axisGenerator = axis(scale)\r\n                    .tickValues(range(min, max + max / 10000, stepSize))\r\n                    .tickFormat(d => {\r\n                        if (absolute) {\r\n                            return yformat(Math.abs(d));\r\n                        }\r\n                        return yformat(d);\r\n                    })\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                if (height <= 200) {\r\n                    axisGenerator = axis(scale)\r\n                        .ticks(4)\r\n                        .tickFormat(d => {\r\n                            if (absolute) {\r\n                                return yformat(Math.abs(d));\r\n                            }\r\n                            return yformat(d);\r\n                        })\r\n                        .tickSizeOuter(0);\r\n                } else {\r\n                    axisGenerator = axis(scale)\r\n                        .tickFormat(d => {\r\n                            if (absolute) {\r\n                                return yformat(Math.abs(d));\r\n                            }\r\n                            return yformat(d);\r\n                        })\r\n                        .tickSizeOuter(0);\r\n                }\r\n            }\r\n        } else if (type === \"log\") {\r\n            if (min === 0) {\r\n                throw Error(\"In a log scale, minimum value can't be 0\");\r\n            }\r\n            axisGenerator = axis(scale)\r\n                .ticks(10, \".2s\")\r\n                .tickSizeOuter(0);\r\n        }\r\n        return axisGenerator;\r\n    }\r\n\r\n    renderAxis(\r\n        align,\r\n        scale,\r\n        width,\r\n        height,\r\n        showGrid,\r\n        chartExtent,\r\n        hideAxisLine,\r\n        absolute,\r\n        type,\r\n        fmt,\r\n        label,\r\n        tickCount,\r\n        min,\r\n        max\r\n    ) {\r\n        const yformat = this.yformat(fmt);\r\n        const axis = align === \"left\" ? axisLeft : axisRight;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const { labelStyle, valueStyle } = style;\r\n        const tickSize = showGrid && this.props.isInnerAxis ? -chartExtent : 5;\r\n        const x = align === \"left\" ? width - MARGIN : 0;\r\n        const labelOffset =\r\n            align === \"left\" ? this.props.labelOffset - 50 : 40 + this.props.labelOffset;\r\n\r\n        // Axis generator\r\n        const axisGenerator = this.generator(\r\n            type,\r\n            absolute,\r\n            yformat,\r\n            axis,\r\n            scale,\r\n            height,\r\n            tickCount,\r\n            min,\r\n            max\r\n        );\r\n\r\n        // Remove the old axis from under this DOM node\r\n        select(ReactDOM.findDOMNode(this))\r\n            .selectAll(\"*\")\r\n            .remove();\r\n\r\n        // Add the new axis\r\n        this.axis = select(ReactDOM.findDOMNode(this))\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${x},0)`)\r\n            .attr(\"class\", \"yaxis\")\r\n            .styles(valueStyle)\r\n            .call(axisGenerator.tickSize(tickSize))\r\n            .append(\"text\")\r\n            .text(label || this.props.label)\r\n            .styles(labelStyle)\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"class\", \"yaxislabel\")\r\n            .attr(\"y\", labelOffset)\r\n            .attr(\"dy\", \".71em\")\r\n            .attr(\"text-anchor\", \"end\");\r\n\r\n        this.postSelect(style, hideAxisLine, height);\r\n    }\r\n\r\n    updateAxis(\r\n        align,\r\n        scale,\r\n        width,\r\n        height,\r\n        showGrid,\r\n        chartExtent,\r\n        hideAxisLine,\r\n        absolute,\r\n        type,\r\n        fmt,\r\n        label,\r\n        tickCount,\r\n        min,\r\n        max\r\n    ) {\r\n        const yformat = this.yformat(fmt);\r\n        const axis = align === \"left\" ? axisLeft : axisRight;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const tickSize = showGrid && this.props.isInnerAxis ? -chartExtent : 5;\r\n\r\n        const axisGenerator = this.generator(\r\n            type,\r\n            absolute,\r\n            yformat,\r\n            axis,\r\n            scale,\r\n            height,\r\n            tickCount,\r\n            min,\r\n            max\r\n        );\r\n\r\n        // Transition the existing axis\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\".yaxis\")\r\n            .transition()\r\n            .duration(this.props.transition)\r\n            .ease(easeSinOut)\r\n            .call(axisGenerator.tickSize(tickSize));\r\n\r\n        this.updateLabel(label);\r\n\r\n        this.postSelect(style, hideAxisLine, height);\r\n    }\r\n\r\n    updateLabel(label) {\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\".yaxislabel\")\r\n            .text(label);\r\n    }\r\n\r\n    render() {\r\n        return <g />;\r\n    }\r\n}\r\n\r\nYAxis.defaultProps = {\r\n    id: \"yaxis\", // id referred to by the chart\r\n    align: \"left\", // left or right of the chart\r\n    min: 0, // range\r\n    max: 1,\r\n    showGrid: false,\r\n    hideAxisLine: false,\r\n    type: \"linear\", // linear, log, or power\r\n    absolute: false, // Display scale always positive\r\n    format: \".2s\", // Format string for d3.format\r\n    labelOffset: 0, // Offset the label position\r\n    transition: 100, // Axis transition time\r\n    width: 80,\r\n    style: defaultStyle\r\n};\r\n\r\nYAxis.propTypes = {\r\n    /**\r\n     * A name for the axis which can be used by a chart to reference the axis.\r\n     * This is used by the ChartRow to match charts to this axis.\r\n     */\r\n    id: PropTypes.string.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * Show or hide this axis\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * The label to be displayed alongside the axis.\r\n     */\r\n    label: PropTypes.string,\r\n\r\n    /**\r\n     * The scale type: linear, power, or log.\r\n     */\r\n    type: PropTypes.oneOf([\"linear\", \"power\", \"log\"]),\r\n\r\n    /**\r\n     * Minimum value, which combined with \"max\", define the scale of the axis.\r\n     */\r\n    min: PropTypes.number.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * Maximum value, which combined with \"min\", define the scale of the axis.\r\n     */\r\n    max: PropTypes.number.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * A d3 scale for the y-axis which you can use to transform your data in the y direction.\r\n     * If omitted, the scale will be automatically computed based on the max and min props.\r\n     */\r\n    yScale: PropTypes.func,\r\n\r\n    /**\r\n     * Render all ticks on the axis as positive values.\r\n     */\r\n    absolute: PropTypes.bool, // eslint-disable-line\r\n\r\n    /**\r\n     * Object specifying the CSS by which the axis can be styled. The object can contain:\r\n     * \"label\", \"values\", \"axis\" and \"ticks\". Each of these is an inline CSS style applied\r\n     * to the axis label, axis values, axis line and ticks respectively.\r\n     *\r\n     * Note that these are passed into d3's styling, so are regular CSS property names\r\n     * and not React's camel case names (e.g. \"stroke-dasharray\" not strokeDasharray).\r\n     */\r\n    style: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        axis: PropTypes.object, // eslint-disable-line\r\n        values: PropTypes.object, // esline-disable-line\r\n        ticks: PropTypes.object // esline-disable-line\r\n    }),\r\n\r\n    /**\r\n     * Render a horizontal grid by extending the axis ticks across the chart area. Note that this\r\n     * can only be applied to an inner axis (one next to a chart). If you have multiple axes then\r\n     * this can't be used on the outer axes. Also, if you have an axis on either side of the chart\r\n     * then you can use this, but the UX not be ideal.\r\n     */\r\n    showGrid: PropTypes.bool,\r\n\r\n    /**\r\n     * Render the axis line. This is a nice option of you are also using `showGrid` as you may not\r\n     * want both the vertical axis line and the extended ticks.\r\n     */\r\n    hideAxisLine: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition time for moving from one scale to another\r\n     */\r\n    transition: PropTypes.number,\r\n\r\n    /**\r\n     * The width of the axis\r\n     */\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    /**\r\n     * Offset the axis label from its default position. This allows you to\r\n     * fine tune the label location, which may be necessary depending on the\r\n     * scale and how much room the tick labels take up. Maybe positive or\r\n     * negative.\r\n     */\r\n    labelOffset: PropTypes.number,\r\n\r\n    /**\r\n     * If a string, the d3.format for the axis labels (e.g. `format=\\\"$,.2f\\\"`).\r\n     * If a function, that function will be called with each tick value and\r\n     * should generate a formatted string for that value to be used as the label\r\n     * for that tick (e.g. `function (n) { return Number(n).toFixed(2) }`).\r\n     */\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * If the chart should be rendered to with the axis on the left or right.\r\n     * If you are using the axis in a ChartRow, you do not need to provide this.\r\n     */\r\n    align: PropTypes.string,\r\n\r\n    /**\r\n     * [Internal] The scale supplied by the ChartRow\r\n     */\r\n    scale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number,\r\n\r\n    /**\r\n     * The number of ticks\r\n     */\r\n    tickCount: PropTypes.number\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/**\r\n *\r\n * The `<Charts>` element is a grouping for charts within a row.\r\n * It takes no props. Each chart within the group will be overlaid\r\n * on top of each other.\r\n *\r\n * Here is an example of two line charts within a `<Charts>` group:\r\n *\r\n * ```xml\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis/>\r\n *         <Charts>\r\n *             <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\r\n *             <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\r\n *         </Charts>\r\n *         <YAxis/>\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n *\r\n * ## Making your own chart\r\n *\r\n * Anything within this grouping is considered a chart, meaning it will have\r\n * certain props injected into it. As a result you can easily implement your own chart\r\n * by simply expecting to have these props available and rendering as such.\r\n *\r\n * For your own chart, the render() method should return a SVG group `<g>` at the\r\n * top level, and then your chart rendering within that.\r\n *\r\n * In addition to any props you add to your chart, the following props are passed into\r\n * each chart automatically:\r\n *\r\n * #### timeScale\r\n *\r\n * A d3 scale for the time axis which you can use to transform your data in the x direction\r\n *\r\n * #### yScale\r\n *\r\n * A d3 scale for the y-axis which you can use to transform your data in the y direction\r\n *\r\n * #### width\r\n *\r\n * A the width your chart will render into\r\n */\r\nexport default class Charts extends React.Component {\r\n    render() {\r\n        return `${this.constructor.name} elements are for configuration only\r\nand should not be rendered`;\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport merge from \"merge\";\r\n\r\nconst defaultBoxStyle = {\r\n    fill: \"#FEFEFE\",\r\n    stroke: \"#DDD\",\r\n    opacity: 0.8\r\n};\r\n\r\nconst defaultTextStyle = {\r\n    fontSize: 11,\r\n    textAnchor: \"left\",\r\n    fill: \"#b0b0b0\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nconst defaultTextStyleCentered = {\r\n    fontSize: 11,\r\n    textAnchor: \"middle\",\r\n    fill: \"#bdbdbd\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nfunction mergeStyles(style, isCentered) {\r\n    return {\r\n        boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\r\n        labelStyle: merge(\r\n            true,\r\n            isCentered ? defaultTextStyleCentered : defaultTextStyle,\r\n            style.label ? style.label : {}\r\n        )\r\n    };\r\n}\r\n\r\n/**\r\n * Renders a list of values in svg\r\n *\r\n *      +----------------+\r\n *      | Max 100 Gbps   |\r\n *      | Avg 26 Gbps    |\r\n *      +----------------+\r\n */\r\nconst ValueList = props => {\r\n    const { align, style, width, height } = props;\r\n    const { boxStyle, labelStyle } = mergeStyles(style, align === \"center\");\r\n\r\n    if (!props.values.length) {\r\n        return <g />;\r\n    }\r\n\r\n    const values = props.values.map((item, i) => {\r\n        if (align === \"left\") {\r\n            return (\r\n                <g key={i}>\r\n                    <text x={10} y={5} dy={`${(i + 1) * 1.2}em`} style={labelStyle}>\r\n                        <tspan style={{ fontWeight: 700 }}>{`${item.label}: `}</tspan>\r\n                        <tspan>{`${item.value}`}</tspan>\r\n                    </text>\r\n                </g>\r\n            );\r\n        }\r\n\r\n        const posx = parseInt(props.width / 2, 10);\r\n        return (\r\n            <g key={i}>\r\n                <text x={posx} y={5} dy={`${(i + 1) * 1.2}em`} style={labelStyle}>\r\n                    <tspan style={{ fontWeight: 700 }}>{`${item.label}: `}</tspan>\r\n                    <tspan>{`${item.value}`}</tspan>\r\n                </text>\r\n            </g>\r\n        );\r\n    });\r\n\r\n    const box = <rect style={boxStyle} x={0} y={0} width={width} height={height} />;\r\n\r\n    return (\r\n        <g>\r\n            {box}\r\n            {values}\r\n        </g>\r\n    );\r\n};\r\n\r\nValueList.defaultProps = {\r\n    align: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    pointerEvents: \"none\",\r\n    style: { fill: \"#FEFEFE\", stroke: \"#DDD\", opacity: 0.8 }\r\n};\r\n\r\nValueList.propTypes = {\r\n    /**\r\n     * Where to position the label, either \"left\" or \"center\" within the box\r\n     */\r\n    align: PropTypes.oneOf([\"center\", \"left\"]),\r\n\r\n    /**\r\n     * An array of label value pairs to render\r\n     */\r\n    values: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string, // eslint-disable-line\r\n            value: PropTypes.oneOfType([\r\n                // eslint-disable-line\r\n                PropTypes.number,\r\n                PropTypes.string\r\n            ])\r\n        })\r\n    ).isRequired,\r\n\r\n    /**\r\n     * CSS object to be applied to the ValueList surrounding box and the label (text).\r\n     */\r\n    style: PropTypes.object, // eslint-disable-line\r\n\r\n    /**\r\n     * The width of the rectangle to render into\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the rectangle to render into\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default ValueList;\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport merge from \"merge\";\r\n\r\nconst defaultBoxStyle = {\r\n    fill: \"#FEFEFE\",\r\n    stroke: \"#DDD\",\r\n    opacity: 0.8\r\n};\r\n\r\nconst defaultTextStyle = {\r\n    fontSize: 11,\r\n    textAnchor: \"left\",\r\n    fill: \"#b0b0b0\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nconst defaultTextStyleCentered = {\r\n    fontSize: 11,\r\n    textAnchor: \"middle\",\r\n    fill: \"#bdbdbd\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nfunction mergeStyles(style, isCentered) {\r\n    return {\r\n        boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\r\n        labelStyle: merge(\r\n            true,\r\n            isCentered ? defaultTextStyleCentered : defaultTextStyle,\r\n            style.label ? style.label : {}\r\n        )\r\n    };\r\n}\r\n\r\n/**\r\n * Renders a simple label surrounded by a box within in svg\r\n *\r\n *      +----------------+\r\n *      | My label       |\r\n *      |                |\r\n *      +----------------+\r\n */\r\n\r\nconst Label = ({ label, style, align, width, height }) => {\r\n    const { boxStyle, labelStyle } = mergeStyles(style, align === \"center\");\r\n\r\n    const posx = align === \"center\" ? parseInt(width / 2, 10) : 10;\r\n\r\n    const text = (\r\n        <text x={posx} y={5} dy=\"1.2em\" style={labelStyle}>\r\n            {label}\r\n        </text>\r\n    );\r\n\r\n    const box = <rect x={0} y={0} style={boxStyle} width={width} height={height} />;\r\n\r\n    return (\r\n        <g>\r\n            {box}\r\n            {text}\r\n        </g>\r\n    );\r\n};\r\n\r\nLabel.defaultProps = {\r\n    align: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nLabel.propTypes = {\r\n    /**\r\n     * Where to position the label, either \"left\" or \"center\" within the box\r\n     */\r\n    align: PropTypes.oneOf([\"center\", \"left\"]),\r\n\r\n    /**\r\n     * The label to render\r\n     */\r\n    label: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The style of the label. This is the inline CSS applied directly\r\n     * to the label box\r\n     */\r\n    style: PropTypes.object, // eslint-disable-line\r\n\r\n    /**\r\n     * The width of the rectangle to render into\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the rectangle to render into\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default Label;\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport \"moment-duration-format\";\r\n\r\nimport ValueList from \"./ValueList\";\r\nimport Label from \"./Label\";\r\n\r\nexport default class TimeMarker extends React.Component {\r\n    renderLine(posx) {\r\n        return (\r\n            <line\r\n                style={this.props.infoStyle.line}\r\n                x1={posx}\r\n                y1={0}\r\n                x2={posx}\r\n                y2={this.props.height}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderTimeMarker(d) {\r\n        const textStyle = {\r\n            fontSize: 11,\r\n            textAnchor: \"left\",\r\n            fill: \"#bdbdbd\"\r\n        };\r\n\r\n        let dateStr = `${d}`;\r\n        if (this.props.timeFormat === \"day\") {\r\n            const formatter = timeFormat(\"%d\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"month\") {\r\n            const formatter = timeFormat(\"%B\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"year\") {\r\n            const formatter = timeFormat(\"%Y\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"relative\") {\r\n            dateStr = moment.duration(+d).format();\r\n        } else if (_.isString(this.props.timeFormat)) {\r\n            const formatter = timeFormat(this.props.timeFormat);\r\n            dateStr = formatter(d);\r\n        } else if (_.isFunction(this.props.timeFormat)) {\r\n            dateStr = this.props.timeFormat(d);\r\n        }\r\n\r\n        return (\r\n            <text x={0} y={0} dy=\"1.2em\" style={textStyle}>\r\n                {dateStr}\r\n            </text>\r\n        );\r\n    }\r\n\r\n    renderInfoBox(posx) {\r\n        const w = this.props.infoWidth;\r\n\r\n        const infoBoxProps = {\r\n            align: \"left\",\r\n            style: {\r\n                box: this.props.infoStyle.box,\r\n                label: this.props.infoStyle.label\r\n            },\r\n            width: this.props.infoWidth,\r\n            height: this.props.infoHeight\r\n        };\r\n\r\n        if (this.props.infoValues) {\r\n            const infoBox = _.isString(this.props.infoValues) ? (\r\n                <Label {...infoBoxProps} label={this.props.infoValues} />\r\n            ) : (\r\n                <ValueList {...infoBoxProps} values={this.props.infoValues} />\r\n            );\r\n\r\n            if (posx + 10 + w < this.props.width - 50) {\r\n                return (\r\n                    <g transform={`translate(${posx + 10},${5})`}>\r\n                        {this.props.showTime ? this.renderTimeMarker(this.props.time) : null}\r\n                        <g transform={`translate(0,${this.props.showTime ? 20 : 0})`}>{infoBox}</g>\r\n                    </g>\r\n                );\r\n            }\r\n            return (\r\n                <g transform={`translate(${posx - w - 10},${5})`}>\r\n                    {this.props.showTime ? this.renderTimeMarker(this.props.time) : null}\r\n                    <g transform={`translate(0,${this.props.showTime ? 20 : 0})`}>{infoBox}</g>\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        const posx = this.props.timeScale(this.props.time);\r\n        if (posx) {\r\n            return (\r\n                <g>\r\n                    {this.props.showLine ? this.renderLine(posx) : null}\r\n                    {this.props.showInfoBox ? this.renderInfoBox(posx) : null}\r\n                </g>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nTimeMarker.propTypes = {\r\n    /**\r\n     * Show or hide this chart\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * The time, expressed as a Javascript `Date` object, to display the marker\r\n     */\r\n    time: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * The values to show in the info box. This is either an array of\r\n     * objects, with each object specifying the label and value\r\n     * to be shown in the info box, or a simple string label\r\n     */\r\n    infoValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string, // eslint-disable-line\r\n                value: PropTypes.string // eslint-disable-line\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * The style of the info box and connecting lines. This is an\r\n     * object of the form { line, box, dot }. Line, box and dot\r\n     * are themselves objects representing inline CSS for each of\r\n     * the pieces of the info marker.\r\n     */\r\n    infoStyle: PropTypes.shape({\r\n        line: PropTypes.object, // eslint-disable-line\r\n        box: PropTypes.object, // eslint-disable-line\r\n        dot: PropTypes.object // eslint-disable-line\r\n    }),\r\n\r\n    /**\r\n     * The width of the hover info box\r\n     */\r\n    infoWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the hover info box\r\n     */\r\n    infoHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Display the info box at all. If you don't have any values to show and just\r\n     * want a line and a time (for example), you can set this to false.\r\n     */\r\n    showInfoBox: PropTypes.bool,\r\n\r\n    /**\r\n     * You can show the info box without the corresponding time marker. Why would\r\n     * you do this? I don't know. Actually, I do. You might use the ChartContainer\r\n     * tracker mechanism to show the line across multiple rows, then add a TimeMarker\r\n     * selectively to each row.\r\n     */\r\n    showLine: PropTypes.bool,\r\n\r\n    /**\r\n     * You can hide the time displayed above the info box. You might do this because\r\n     * it is already displayed elsewhere in your UI. Or maybe you just don't like it.\r\n     */\r\n    showTime: PropTypes.bool,\r\n\r\n    /**\r\n     * The time format used for display of the time above the info box.\r\n     */\r\n    timeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n     */\r\n    timeScale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The width supplied by the surrounding ChartContainer\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nTimeMarker.defaultProps = {\r\n    visible: true,\r\n    showInfoBox: true,\r\n    showLine: true,\r\n    showTime: true,\r\n    infoStyle: {\r\n        line: {\r\n            stroke: \"#999\",\r\n            cursor: \"crosshair\",\r\n            pointerEvents: \"none\"\r\n        },\r\n        box: {\r\n            fill: \"white\",\r\n            opacity: 0.9,\r\n            stroke: \"#999\",\r\n            pointerEvents: \"none\"\r\n        },\r\n        dot: {\r\n            fill: \"#999\"\r\n        }\r\n    },\r\n    infoWidth: 90,\r\n    infoHeight: 25\r\n};\r\n","/**\r\n *  Copyright (c) 2015, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\n\r\nexport default class ScaleInterpolator {\r\n    constructor(transition, ease, observer) {\r\n        this.id = _.uniqueId(\"scaler\");\r\n        this.ease = ease;\r\n        this.transitionTime = transition;\r\n        this.observer = observer;\r\n\r\n        this.sourceScale = null;\r\n        this.targetScale = null;\r\n        this.cachedScaler = null;\r\n        this.cacheKey = null;\r\n    }\r\n\r\n    update() {\r\n        let animationTime = 0;\r\n\r\n        if (!this.initialTimestamp) {\r\n            this.initialTimestamp = window.performance.now();\r\n        } else {\r\n            animationTime = window.performance.now() - this.initialTimestamp;\r\n        }\r\n\r\n        const animationPosition = this.transitionTime\r\n            ? Math.min(animationTime / this.transitionTime, 1.0)\r\n            : 1.0;\r\n\r\n        if (!this.targetScale) {\r\n            return;\r\n        }\r\n\r\n        if (this.observer) {\r\n            const func1 = this.sourceScale;\r\n            const func2 = this.targetScale;\r\n            const te = this.ease(animationPosition);\r\n            const scaler = x => {\r\n                const a = func1(x);\r\n                const b = func2(x);\r\n                return a + (b - a) * te;\r\n            };\r\n            this.observer(scaler);\r\n        }\r\n\r\n        if (animationPosition < 1.0) {\r\n            // keep animating\r\n            setTimeout(() => this.update(), 20);\r\n        } else {\r\n            // reset\r\n            this.sourceScale = this.targetScale;\r\n            this.targetScale = null;\r\n            this.initialTimestamp = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n   * A new (or initial) scale is set on the interpolator\r\n   */\r\n    setScale(key, scale) {\r\n        // Initial scale\r\n        if (!this.sourceScale) {\r\n            this.sourceScale = scale;\r\n            return;\r\n        }\r\n\r\n        //\r\n        //  If there was already a scale, and a new scale is set\r\n        // the this begins an animation across between the two\r\n        // scales, assuming a transition time is provided. To do\r\n        // this we set the new scale as the target and reset the\r\n        // t to 0. (if there's no transition, jump to t = 1)\r\n        //\r\n\r\n        if (key !== this.cacheKey) {\r\n            this.targetScale = scale;\r\n            this.cachedScaler = null;\r\n            this.initialTimestamp = null;\r\n            setTimeout(() => this.update(), 0);\r\n        }\r\n\r\n        this.cacheKey = key;\r\n    }\r\n\r\n    /**\r\n   * Returns a scaler, which is a function that scales the value\r\n   * supplied to it. This return the scaler corresponding to the\r\n   * source scale. Note that if a target scale is defined and the\r\n   * interpolator is animating towards that target, the observer\r\n   * callback will be called with the transitional scaler that can\r\n   * be used to scale data to the intermediate state.\r\n   */\r\n    scaler() {\r\n        if (_.isNull(this.cachedScaler)) {\r\n            this.cachedScaler = v => this.sourceScale(v);\r\n        }\r\n        return this.cachedScaler;\r\n    }\r\n\r\n    /**\r\n   * Returns the d3 scale. It will return the target scale if present\r\n   * otherwise the source scale. Note: this is the d3 internal scale. To\r\n   * scale values, use the scaler.\r\n   */\r\n    latestScale() {\r\n        return this.targetScale ? this.targetScale : this.sourceScale;\r\n    }\r\n\r\n    /**\r\n   * Returns the transition, as set in the constructor\r\n   */\r\n    transition() {\r\n        return this.transitionTime;\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { easeSinOut } from \"d3-ease\";\r\nimport { scaleLinear, scaleLog, scalePow } from \"d3-scale\";\r\nimport { areComponentsEqual } from \"react-hot-loader\";\r\n\r\nimport Brush from \"./Brush\";\r\nimport YAxis from \"./YAxis\";\r\nimport Charts from \"./Charts\";\r\nimport MultiBrush from \"./MultiBrush\";\r\nimport TimeMarker from \"./TimeMarker\";\r\nimport ScaleInterpolator from \"../js/interpolators\";\r\n\r\nfunction createScale(yaxis, type, min, max, y0, y1) {\r\n    let scale;\r\n    if (_.isUndefined(min) || _.isUndefined(max)) {\r\n        scale = null;\r\n    } else if (type === \"linear\") {\r\n        scale = scaleLinear()\r\n            .domain([min, max])\r\n            .range([y0, y1])\r\n            .nice();\r\n    } else if (type === \"log\") {\r\n        const base = yaxis.props.logBase || 10;\r\n        scale = scaleLog()\r\n            .base(base)\r\n            .domain([min, max])\r\n            .range([y0, y1]);\r\n    } else if (type === \"power\") {\r\n        const power = yaxis.props.powerExponent || 2;\r\n        scale = scalePow()\r\n            .exponent(power)\r\n            .domain([min, max])\r\n            .range([y0, y1]);\r\n    }\r\n    return scale;\r\n}\r\n\r\n/**\r\n * A ChartRow is a container for a set of YAxis and multiple charts\r\n * which are overlaid on each other in a central canvas.\r\n *\r\n * Here is an example where a single `<ChartRow>` is defined within\r\n * the `<ChartContainer>`. Of course you can have any number of rows.\r\n *\r\n * For this row we specify the one prop `height` as 200 pixels high.\r\n *\r\n * Within the `<ChartRow>` we add:\r\n *\r\n * * `<YAxis>` elements for axes to the left of the chart\r\n * * `<Chart>` block containing our central chart area\r\n * * `<YAxis>` elements for our axes to the right of the charts\r\n *\r\n * ```\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis />\r\n *         <YAxis />\r\n *         <Charts>\r\n *             charts...\r\n *        </Charts>\r\n *         <YAxis />\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n */\r\nexport default class ChartRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // id of clipping rectangle we will generate and use for each child\r\n        // chart. Lives in state to ensure just one clipping rectangle and\r\n        // id per chart row instance; we don't want a fresh id generated on\r\n        // each render.\r\n        const clipId = _.uniqueId(\"clip_\");\r\n        const clipPathURL = `url(#${clipId})`;\r\n        this.state = {\r\n            clipId,\r\n            clipPathURL\r\n        };\r\n        this.mounted = true;\r\n    }\r\n\r\n    isChildYAxis = child =>\r\n        areComponentsEqual(child.type, YAxis) ||\r\n        (_.has(child.props, \"min\") && _.has(child.props, \"max\"));\r\n\r\n    updateScales(props) {\r\n        const axisMargin = props.axisMargin;\r\n        const innerHeight = +props.height - axisMargin * 2;\r\n        const rangeTop = axisMargin;\r\n        const rangeBottom = innerHeight - axisMargin;\r\n        React.Children.forEach(props.children, child => {\r\n            if (child === null) return;\r\n            if (this.isChildYAxis(child)) {\r\n                const { id, max, min, transition = 0, type = \"linear\" } = child.props;\r\n                if (!_.has(this.scaleMap, id)) {\r\n                    // If necessary, initialize a ScaleInterpolator for this y-axis.\r\n                    // When the yScale changes, we will update this interpolator.\r\n                    this.scaleMap[id] = new ScaleInterpolator(transition, easeSinOut, s => {\r\n                        const yAxisScalerMap = this.state.yAxisScalerMap;\r\n                        yAxisScalerMap[id] = s;\r\n                        if (this.mounted) this.setState(yAxisScalerMap);\r\n                    });\r\n                }\r\n                // Get the vertical scale for this y-axis.\r\n                let scale;\r\n                if (_.has(child.props, \"yScale\")) {\r\n                    // If the yScale prop is passed explicitly, use that.\r\n                    scale = child.props.yScale;\r\n                } else {\r\n                    // Otherwise, compute the scale based on the max and min props.\r\n                    scale = createScale(child, type, min, max, rangeBottom, rangeTop);\r\n                }\r\n\r\n                // Update the scale on the interpolator for this y-axis.\r\n                const cacheKey = `${type}-${min}-${max}-${rangeBottom}-${rangeTop}`;\r\n                this.scaleMap[id].setScale(cacheKey, scale);\r\n            }\r\n        });\r\n\r\n        // Update the state with the newly interpolated scaler for each y-axis.\r\n        const scalerMap = {};\r\n        _.forEach(this.scaleMap, (interpolator, id) => {\r\n            scalerMap[id] = interpolator.scaler();\r\n        });\r\n\r\n        if (this.mounted) this.setState({ yAxisScalerMap: scalerMap });\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Our chart scales are driven off a mapping between id of the axis\r\n        // and the scale that axis represents. Depending on the transition time,\r\n        // this scale will animate over time. The controller of this animation is\r\n        // the ScaleInterpolator. We create new Scale Interpolators here for each\r\n        // axis id.\r\n        this.scaleMap = {};\r\n        this.updateScales(this.props);\r\n    }\r\n\r\n    /**\r\n     * When we get changes to the row's props we update our map of\r\n     * axis scales.\r\n     */\r\n    componentWillReceiveProps(nextProps) {\r\n        this.updateScales(nextProps);\r\n    }\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n    render() {\r\n        const { paddingLeft, paddingRight } = this.props;\r\n\r\n        const axes = []; // Contains all the yAxis elements used in the render\r\n        const chartList = []; // Contains all the Chart elements used in the render\r\n        // Dimensions\r\n        const innerHeight = +this.props.height - this.props.axisMargin * 2;\r\n\r\n        //\r\n        // Build a map of elements that occupy left or right slots next to the\r\n        // chart.\r\n        //\r\n        // If an element has both and id and a min/max range, then we consider\r\n        // it to be a y axis. For those we calculate a d3 scale that can be\r\n        // reference by a chart. That scale will also be available to the axis\r\n        // when it renders.\r\n        //\r\n        // For this row, we will need to know how many axis slots we are using.\r\n        //\r\n\r\n        const yAxisMap = {}; // Maps axis id -> axis element\r\n        const leftAxisList = []; // Ordered list of left axes ids\r\n        const rightAxisList = []; // Ordered list of right axes ids\r\n        let alignLeft = true;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (areComponentsEqual(child.type, Charts)) {\r\n                alignLeft = false;\r\n            } else {\r\n                const id = child.props.id;\r\n                // Check to see if we think this 'axis' is actually an axis\r\n                if (this.isChildYAxis(child)) {\r\n                    const yaxis = child;\r\n\r\n                    if (yaxis.props.id && yaxis.props.visible !== false) {\r\n                        // Relate id to the axis\r\n                        yAxisMap[yaxis.props.id] = yaxis;\r\n                    }\r\n\r\n                    // Columns counts\r\n                    if (alignLeft) {\r\n                        leftAxisList.push(id);\r\n                    } else {\r\n                        rightAxisList.push(id);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Since we'll be building the left axis items from the inside to the outside\r\n        leftAxisList.reverse();\r\n\r\n        //\r\n        // Push each axis onto the axes, transforming each into its\r\n        // column location\r\n        //\r\n\r\n        let transform;\r\n        let id;\r\n        let props;\r\n        let axis;\r\n        let posx = 0;\r\n\r\n        // Space used by columns on left and right of charts\r\n        const leftWidth = _.reduce(this.props.leftAxisWidths, (a, b) => a + b, 0);\r\n        const rightWidth = _.reduce(this.props.rightAxisWidths, (a, b) => a + b, 0);\r\n        const chartWidth = this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        posx = leftWidth;\r\n        for (\r\n            let leftColumnIndex = 0;\r\n            leftColumnIndex < this.props.leftAxisWidths.length;\r\n            leftColumnIndex += 1\r\n        ) {\r\n            const colWidth = this.props.leftAxisWidths[leftColumnIndex];\r\n            posx -= colWidth;\r\n            if (colWidth > 0 && leftColumnIndex < leftAxisList.length) {\r\n                id = leftAxisList[leftColumnIndex];\r\n                if (_.has(yAxisMap, id)) {\r\n                    transform = `translate(${posx + paddingLeft},0)`;\r\n\r\n                    // Additional props for left aligned axes\r\n                    props = {\r\n                        width: colWidth,\r\n                        height: innerHeight,\r\n                        chartExtent: chartWidth,\r\n                        isInnerAxis: leftColumnIndex === 0,\r\n                        align: \"left\",\r\n                        scale: this.scaleMap[id].latestScale()\r\n                    };\r\n\r\n                    // Cloned left axis\r\n                    axis = React.cloneElement(yAxisMap[id], props);\r\n\r\n                    axes.push(\r\n                        <g key={`y-axis-left-${leftColumnIndex}`} transform={transform}>\r\n                            {axis}\r\n                        </g>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        posx = this.props.width - rightWidth - paddingRight;\r\n        for (\r\n            let rightColumnIndex = 0;\r\n            rightColumnIndex < this.props.rightAxisWidths.length;\r\n            rightColumnIndex += 1\r\n        ) {\r\n            const colWidth = this.props.rightAxisWidths[rightColumnIndex];\r\n            if (colWidth > 0 && rightColumnIndex < rightAxisList.length) {\r\n                id = rightAxisList[rightColumnIndex];\r\n                if (_.has(yAxisMap, id)) {\r\n                    transform = `translate(${posx + paddingLeft},0)`;\r\n\r\n                    // Additional props for right aligned axes\r\n                    props = {\r\n                        width: colWidth,\r\n                        height: innerHeight,\r\n                        chartExtent: chartWidth,\r\n                        //showGrid: this.props.showGrid,\r\n                        isInnerAxis: rightColumnIndex === 0,\r\n                        align: \"right\",\r\n                        scale: this.scaleMap[id].latestScale()\r\n                    };\r\n\r\n                    // Cloned right axis\r\n                    axis = React.cloneElement(yAxisMap[id], props);\r\n\r\n                    axes.push(\r\n                        <g key={`y-axis-right-${rightColumnIndex}`} transform={transform}>\r\n                            {axis}\r\n                        </g>\r\n                    );\r\n                }\r\n            }\r\n\r\n            posx += colWidth;\r\n        }\r\n\r\n        //\r\n        // Push each chart onto the chartList, transforming each to the right\r\n        // of the left axis slots and specifying its width. Each chart is passed\r\n        // its time and y-scale. The y-scale is looked up in scaleMap, whose\r\n        // current value is stored in the component state.\r\n        //\r\n\r\n        const chartTransform = `translate(${leftWidth + paddingLeft},0)`;\r\n\r\n        let keyCount = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (areComponentsEqual(child.type, Charts)) {\r\n                const charts = child;\r\n                React.Children.forEach(charts.props.children, chart => {\r\n                    if (!_.has(chart.props, \"visible\") || chart.props.visible) {\r\n                        let scale = null;\r\n                        if (_.has(this.state.yAxisScalerMap, chart.props.axis)) {\r\n                            scale = this.state.yAxisScalerMap[chart.props.axis];\r\n                        }\r\n\r\n                        let ytransition = null;\r\n                        if (_.has(this.scaleMap, chart.props.axis)) {\r\n                            ytransition = this.scaleMap[chart.props.axis];\r\n                        }\r\n\r\n                        const chartProps = {\r\n                            key: keyCount,\r\n                            width: chartWidth,\r\n                            height: innerHeight,\r\n                            timeScale: this.props.timeScale,\r\n                            timeFormat: this.props.timeFormat\r\n                        };\r\n\r\n                        if (scale) {\r\n                            chartProps.yScale = scale;\r\n                        }\r\n\r\n                        if (ytransition) {\r\n                            chartProps.transition = ytransition;\r\n                        }\r\n\r\n                        chartList.push(React.cloneElement(chart, chartProps));\r\n                        keyCount += 1;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        //\r\n        // Push each child Brush on to the brush list.  We need brushed to be\r\n        // rendered last (on top) of everything else in the Z order, both for\r\n        // visual correctness and to ensure that the brush gets mouse events\r\n        // before anything underneath\r\n        //\r\n\r\n        const brushList = [];\r\n        const multiBrushList = [];\r\n        keyCount = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (\r\n                areComponentsEqual(child.type, Brush) ||\r\n                areComponentsEqual(child.type, MultiBrush)\r\n            ) {\r\n                const brushProps = {\r\n                    key: `brush-${keyCount}`,\r\n                    width: chartWidth,\r\n                    height: innerHeight,\r\n                    timeScale: this.props.timeScale\r\n                };\r\n                if (areComponentsEqual(child.type, Brush)) {\r\n                    brushList.push(React.cloneElement(child, brushProps));\r\n                } else {\r\n                    multiBrushList.push(React.cloneElement(child, brushProps));\r\n                }\r\n            }\r\n            keyCount += 1;\r\n        });\r\n\r\n        const charts = (\r\n            <g transform={chartTransform} key=\"event-rect-group\">\r\n                <g key=\"charts\" clipPath={this.state.clipPathURL}>\r\n                    {chartList}\r\n                </g>\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Clipping\r\n        //\r\n        const clipper = (\r\n            <defs>\r\n                <clipPath id={this.state.clipId}>\r\n                    <rect\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        style={{ strokeOpacity: 0.0 }}\r\n                        width={chartWidth}\r\n                        height={innerHeight}\r\n                    />\r\n                </clipPath>\r\n            </defs>\r\n        );\r\n\r\n        //\r\n        // Brush\r\n        //\r\n        const brushes = (\r\n            <g transform={chartTransform} key=\"brush-group\">\r\n                {brushList}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Multi Brush\r\n        //\r\n        const multiBrushes = (\r\n            <g transform={chartTransform} key=\"multi-brush-group\">\r\n                {multiBrushList}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // TimeMarker used as a tracker\r\n        //\r\n        let tracker;\r\n        if (this.props.trackerTime) {\r\n            const timeFormat = this.props.trackerTimeFormat || this.props.timeFormat;\r\n            const timeMarkerProps = {\r\n                timeFormat,\r\n                showLine: false,\r\n                showTime: this.props.trackerShowTime,\r\n                time: this.props.trackerTime,\r\n                timeScale: this.props.timeScale,\r\n                width: chartWidth,\r\n                infoStyle: this.props.trackerStyle\r\n            };\r\n            if (this.props.trackerInfoValues) {\r\n                timeMarkerProps.infoWidth = this.props.trackerInfoWidth;\r\n                timeMarkerProps.infoHeight = this.props.trackerInfoHeight;\r\n                timeMarkerProps.infoValues = this.props.trackerInfoValues;\r\n                timeMarkerProps.timeFormat = this.props.trackerTimeFormat;\r\n            }\r\n            const trackerStyle = {\r\n                pointerEvents: \"none\"\r\n            };\r\n            const trackerTransform = `translate(${leftWidth + paddingLeft},0)`;\r\n\r\n            tracker = (\r\n                <g key=\"tracker-group\" style={trackerStyle} transform={trackerTransform}>\r\n                    <TimeMarker {...timeMarkerProps} />\r\n                </g>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <g>\r\n                {clipper}\r\n                {axes}\r\n                {charts}\r\n                {brushes}\r\n                {multiBrushes}\r\n                {tracker}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nChartRow.defaultProps = {\r\n    trackerTimeFormat: \"%b %d %Y %X\",\r\n    enablePanZoom: false,\r\n    height: 100,\r\n    axisMargin: 5,\r\n    visible: true\r\n};\r\n\r\nChartRow.propTypes = {\r\n    /**\r\n     * The height of the row.\r\n     */\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    /**\r\n     * The vertical margin between the top and bottom of the row\r\n     * height and the top and bottom of the range of the chart.\r\n     */\r\n    axisMargin: PropTypes.number,\r\n\r\n    /**\r\n     * Show or hide this row\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * Should the time be shown on top of the tracker info box\r\n     */\r\n    trackerShowTime: PropTypes.bool,\r\n\r\n    /**\r\n     * The width of the tracker info box\r\n     */\r\n    trackerInfoWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the tracker info box\r\n     */\r\n    trackerInfoHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Info box value or values to place next to the tracker line.\r\n     * This is either an array of objects, with each object\r\n     * specifying the label (a string) and value (also a string)\r\n     * to be shown in the info box, or a simple string label.\r\n     */\r\n    trackerInfoValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string, // eslint-disable-line\r\n                value: PropTypes.string // eslint-disable-line\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * Specify the title for the chart row\r\n     */\r\n    title: PropTypes.string,\r\n\r\n    /**\r\n     * Specify the height of the title\r\n     * Default value is 28 pixels\r\n     */\r\n    titleHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the styling of the chart row's title\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Specify the styling of the box behind chart row's title\r\n     */\r\n    titleBoxStyle: PropTypes.object,\r\n\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    leftAxisWidths: PropTypes.arrayOf(PropTypes.number),\r\n    rightAxisWidths: PropTypes.arrayOf(PropTypes.number),\r\n    width: PropTypes.number,\r\n    timeScale: PropTypes.func,\r\n    trackerTimeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    timeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    trackerTime: PropTypes.instanceOf(Date)\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Internal component which provides the top level event catcher for the charts.\r\n * This is a higher order component. It wraps a tree of SVG elements below it,\r\n * passed in as this.props.children, and catches events that they do not handle.\r\n *\r\n * The EventHandler is responsible for pan and zoom events as well as other click\r\n * and hover actions.\r\n */\r\nexport default class EventHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isPanning: false,\r\n            initialPanBegin: null,\r\n            initialPanEnd: null,\r\n            initialPanPosition: null\r\n        };\r\n\r\n        this.handleScrollWheel = this.handleScrollWheel.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.eventHandlerRef.addEventListener(\"wheel\", this.handleScrollWheel, { passive: false });\r\n    }\r\n\r\n    // get the event mouse position relative to the event rect\r\n    getOffsetMousePosition(e) {\r\n        const offset = getElementOffset(this.eventRect);\r\n        const x = e.pageX - offset.left;\r\n        const y = e.pageY - offset.top;\r\n        return [Math.round(x), Math.round(y)];\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleScrollWheel(e) {\r\n        if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        const SCALE_FACTOR = 0.001;\r\n        let scale = 1 + e.deltaY * SCALE_FACTOR;\r\n        if (scale > 3) {\r\n            scale = 3;\r\n        }\r\n        if (scale < 0.1) {\r\n            scale = 0.1;\r\n        }\r\n\r\n        const xy = this.getOffsetMousePosition(e);\r\n\r\n        const begin = this.props.scale.domain()[0].getTime();\r\n        const end = this.props.scale.domain()[1].getTime();\r\n        const center = this.props.scale.invert(xy[0]).getTime();\r\n\r\n        let beginScaled = center - parseInt((center - begin) * scale, 10);\r\n        let endScaled = center + parseInt((end - center) * scale, 10);\r\n\r\n        // Duration constraint\r\n        let duration = (end - begin) * scale;\r\n\r\n        if (this.props.minDuration) {\r\n            const minDuration = parseInt(this.props.minDuration, 10);\r\n            if (duration < this.props.minDuration) {\r\n                beginScaled = center - ((center - begin) / (end - begin)) * minDuration;\r\n                endScaled = center + ((end - center) / (end - begin)) * minDuration;\r\n            }\r\n        }\r\n\r\n        if (this.props.minTime && this.props.maxTime) {\r\n            const maxDuration = this.props.maxTime.getTime() - this.props.minTime.getTime();\r\n            if (duration > maxDuration) {\r\n                duration = maxDuration;\r\n            }\r\n        }\r\n\r\n        // Range constraint\r\n        if (this.props.minTime && beginScaled < this.props.minTime.getTime()) {\r\n            beginScaled = this.props.minTime.getTime();\r\n            endScaled = beginScaled + duration;\r\n        }\r\n\r\n        if (this.props.maxTime && endScaled > this.props.maxTime.getTime()) {\r\n            endScaled = this.props.maxTime.getTime();\r\n            beginScaled = endScaled - duration;\r\n        }\r\n\r\n        const newBegin = new Date(beginScaled);\r\n        const newEnd = new Date(endScaled);\r\n\r\n        const newTimeRange = new TimeRange(newBegin, newEnd);\r\n\r\n        if (this.props.onZoom) {\r\n            this.props.onZoom(newTimeRange);\r\n        }\r\n    }\r\n\r\n    handleMouseDown(e) {\r\n        if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        if (e.button === 2) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        if (this.props.enableDragZoom) {\r\n            const offsetxy = this.getOffsetMousePosition(e);\r\n            this.setState({\r\n                isDragging: true,\r\n                initialDragZoom: offsetxy[0],\r\n                currentDragZoom: offsetxy[0]\r\n            });\r\n        }\r\n\r\n        if (this.props.enablePanZoom) {\r\n            const x = e.pageX;\r\n            const y = e.pageY;\r\n            const xy0 = [Math.round(x), Math.round(y)];\r\n\r\n            const begin = this.props.scale.domain()[0].getTime();\r\n            const end = this.props.scale.domain()[1].getTime();\r\n\r\n            this.setState({\r\n                isPanning: true,\r\n                initialPanBegin: begin,\r\n                initialPanEnd: end,\r\n                initialPanPosition: xy0\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        if (!this.props.onMouseClick && !this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        e.stopPropagation();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        const offsetxy = this.getOffsetMousePosition(e);\r\n\r\n        const x = e.pageX;\r\n        const isPanning =\r\n            this.state.initialPanPosition && Math.abs(x - this.state.initialPanPosition[0]) > 2;\r\n        const isDragging =\r\n            this.state.initialDragZoom && Math.abs(offsetxy[0] - this.state.initialDragZoom) > 2;\r\n\r\n        if (this.props.onMouseClick && !isPanning && !isDragging) {\r\n            this.props.onMouseClick(offsetxy[0], offsetxy[1]);\r\n        }\r\n\r\n        if (this.props.enableDragZoom) {\r\n            if (isDragging) {\r\n                const start = this.props.scale.invert(this.state.initialDragZoom).getTime();\r\n                const end = this.props.scale.invert(this.state.currentDragZoom).getTime();\r\n\r\n                let newBegin = parseInt(start, 10);\r\n                let newEnd = parseInt(end, 10);\r\n\r\n                if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n                    newBegin = this.props.minTime.getTime();\r\n                }\r\n\r\n                if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n                    newEnd = this.props.maxTime.getTime();\r\n                }\r\n\r\n                const newTimeRange = new TimeRange([newBegin, newEnd].sort());\r\n                if (this.props.onZoom) {\r\n                    this.props.onZoom(newTimeRange);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                isDragging: false,\r\n                initialDragZoom: null,\r\n                initialPanEnd: null,\r\n                currentDragZoom: null\r\n            });\r\n        }\r\n\r\n        if (this.props.enablePanZoom) {\r\n            this.setState({\r\n                isPanning: false,\r\n                initialPanBegin: null,\r\n                initialPanEnd: null,\r\n                initialPanPosition: null\r\n            });\r\n        }\r\n    }\r\n\r\n    handleMouseOut(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.props.onMouseOut) {\r\n            this.props.onMouseOut();\r\n        }\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const offsetxy = this.getOffsetMousePosition(e);\r\n        if (this.state.isDragging) {\r\n            this.setState({\r\n                currentDragZoom: offsetxy[0]\r\n            });\r\n        }\r\n        if (this.state.isPanning) {\r\n            const xy0 = this.state.initialPanPosition;\r\n            const timeOffset =\r\n                this.props.scale.invert(xy[0]).getTime() -\r\n                this.props.scale.invert(xy0[0]).getTime();\r\n\r\n            let newBegin = parseInt(this.state.initialPanBegin - timeOffset, 10);\r\n            let newEnd = parseInt(this.state.initialPanEnd - timeOffset, 10);\r\n            const duration = parseInt(this.state.initialPanEnd - this.state.initialPanBegin, 10);\r\n\r\n            if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n                newBegin = this.props.minTime.getTime();\r\n                newEnd = newBegin + duration;\r\n            }\r\n\r\n            if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n                newEnd = this.props.maxTime.getTime();\r\n                newBegin = newEnd - duration;\r\n            }\r\n\r\n            const newTimeRange = new TimeRange(newBegin, newEnd);\r\n            if (this.props.onZoom) {\r\n                this.props.onZoom(newTimeRange);\r\n            }\r\n        } else if (this.props.onMouseMove) {\r\n            const mousePosition = this.getOffsetMousePosition(e);\r\n            if (this.props.onMouseMove) {\r\n                this.props.onMouseMove(mousePosition[0], mousePosition[1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleContextMenu(e) {\r\n        var x = e.pageX;\r\n        var y = e.pageY;\r\n        if (this.props.onContextMenu) {\r\n            this.props.onContextMenu(x, y);\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    render() {\r\n        const cursor = this.state.isPanning ? \"-webkit-grabbing\" : \"default\";\r\n        const handlers = {\r\n            onMouseDown: this.handleMouseDown,\r\n            onMouseMove: this.handleMouseMove,\r\n            onMouseOut: this.handleMouseOut,\r\n            onMouseUp: this.handleMouseUp,\r\n            onContextMenu: this.handleContextMenu\r\n        };\r\n        return (\r\n            <g\r\n                pointerEvents=\"all\"\r\n                ref={c => {\r\n                    this.eventHandlerRef = c;\r\n                }}\r\n                {...handlers}\r\n            >\r\n                <rect\r\n                    key=\"handler-hit-rect\"\r\n                    ref={c => {\r\n                        this.eventRect = c;\r\n                    }}\r\n                    style={{ fill: \"#000\", opacity: 0.0, cursor }}\r\n                    x={0}\r\n                    y={0}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                />\r\n                {this.props.children}\r\n                {this.state.isDragging && (\r\n                    <rect\r\n                        style={{ opacity: 0.3, fill: \"grey\" }}\r\n                        x={Math.min(this.state.currentDragZoom, this.state.initialDragZoom)}\r\n                        y={0}\r\n                        width={Math.abs(this.state.currentDragZoom - this.state.initialDragZoom)}\r\n                        height={this.props.height}\r\n                        pointerEvents=\"none\"\r\n                    />\r\n                )}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nEventHandler.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    enablePanZoom: PropTypes.bool,\r\n    enableDragZoom: PropTypes.bool,\r\n    scale: PropTypes.func.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    maxTime: PropTypes.instanceOf(Date),\r\n    minTime: PropTypes.instanceOf(Date),\r\n    minDuration: PropTypes.number,\r\n    onZoom: PropTypes.func,\r\n    onMouseMove: PropTypes.func,\r\n    onMouseOut: PropTypes.func,\r\n    onMouseClick: PropTypes.func,\r\n    onContextMenu: PropTypes.func\r\n};\r\n\r\nEventHandler.defaultProps = {\r\n    enablePanZoom: false,\r\n    enableDragZoom: false\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\nimport { axisBottom } from \"d3-axis\";\r\nimport { select } from \"d3-selection\";\r\nimport \"d3-selection-multi\";\r\nimport { timeDay, utcDay, timeMonth, utcMonth, timeYear, utcYear } from \"d3-time\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport \"moment-duration-format\";\r\n\r\nfunction scaleAsString(scale) {\r\n    return `${scale.domain().toString()}-${scale.range().toString()}`;\r\n}\r\n\r\nconst defaultStyle = {\r\n    values: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default value color\r\n        fontWeight: 100,\r\n        fontSize: 11,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    ticks: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    },\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    }\r\n};\r\n\r\n/**\r\n * Renders a horizontal time axis. This is used internally by the ChartContainer\r\n * as a result of you specifying the timerange for the chart. Please see the API\r\n * docs for ChartContainer for more information.\r\n */\r\nexport default class TimeAxis extends React.Component {\r\n    componentDidMount() {\r\n        const { scale, format, showGrid, gridHeight } = this.props;\r\n        this.renderTimeAxis(scale, format, showGrid, gridHeight);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { scale, utc, format, showGrid, gridHeight } = nextProps;\r\n        if (\r\n            scaleAsString(this.props.scale) !== scaleAsString(scale) ||\r\n            this.props.utc !== utc ||\r\n            this.props.showGrid !== showGrid ||\r\n            this.props.gridHeight !== gridHeight\r\n        ) {\r\n            this.renderTimeAxis(scale, format, showGrid, gridHeight);\r\n        }\r\n    }\r\n\r\n    // Force the component not to update because d3 will control the\r\n    // DOM from this point down.\r\n    shouldComponentUpdate() {\r\n        // eslint-disable-line\r\n        return false;\r\n    }\r\n\r\n    mergeStyles(style) {\r\n        return {\r\n            valueStyle: merge(\r\n                true,\r\n                defaultStyle.values,\r\n                this.props.style.values ? this.props.style.values : {}\r\n            ),\r\n            tickStyle: merge(\r\n                true,\r\n                defaultStyle.ticks,\r\n                this.props.style.ticks ? this.props.style.ticks : {}\r\n            )\r\n        };\r\n    }\r\n\r\n    renderTimeAxis(scale, format, showGrid, gridHeight) {\r\n        let axis;\r\n\r\n        const tickSize = showGrid ? -gridHeight : 10;\r\n        const utc = this.props.utc;\r\n        const tickCount = this.props.tickCount;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const { tickStyle, valueStyle } = style;\r\n\r\n        if (tickCount > 0) {\r\n            if (format === \"day\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcDay : timeDay, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%d\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"month\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcMonth : timeMonth, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%B\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"year\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcYear : timeYear, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%Y\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"relative\") {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(d => moment.duration(+d).format())\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isString(format)) {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(timeFormat(format))\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isFunction(format)) {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(format)\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickSize(0);\r\n            }\r\n        } else {\r\n            if (format === \"day\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcDay : timeDay, 1])\r\n                    .tickFormat(timeFormat(\"%d\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"month\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcMonth : timeMonth, 1])\r\n                    .tickFormat(timeFormat(\"%B\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"year\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcYear : timeYear, 1])\r\n                    .tickFormat(timeFormat(\"%Y\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"relative\") {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(d => moment.duration(+d).format())\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isString(format)) {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(timeFormat(format))\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isFunction(format)) {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(format)\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                axis = axisBottom(scale).tickSize(0);\r\n            }\r\n        }\r\n\r\n        // Remove the old axis from under this DOM node\r\n        select(ReactDOM.findDOMNode(this))\r\n            .selectAll(\"*\")\r\n            .remove(); // eslint-disable-line\r\n        //\r\n        // Draw the new axis\r\n        //\r\n        select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n            .append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .style(\"stroke\", \"none\")\r\n            .styles(valueStyle)\r\n            .call(axis.tickSize(tickSize));\r\n\r\n        if (this.props.angled) {\r\n            select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n                .select(\"g\")\r\n                .selectAll(\".tick\")\r\n                .select(\"text\")\r\n                .styles(valueStyle)\r\n                .style(\"text-anchor\", \"end\")\r\n                .attr(\"dx\", \"-1.2em\")\r\n                .attr(\"dy\", \"0em\")\r\n                .attr(\"transform\", function(d) {\r\n                    return \"rotate(-65)\";\r\n                });\r\n        } else {\r\n            select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n                .select(\"g\")\r\n                .selectAll(\".tick\")\r\n                .select(\"text\")\r\n                .styles(valueStyle);\r\n        }\r\n        select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"line\")\r\n            .styles(tickStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .select(\"path\")\r\n            .remove();\r\n    }\r\n\r\n    render() {\r\n        return <g />;\r\n    }\r\n}\r\n\r\nTimeAxis.defaultProps = {\r\n    showGrid: false,\r\n    style: defaultStyle,\r\n    angled: false\r\n};\r\n\r\nTimeAxis.propTypes = {\r\n    scale: PropTypes.func.isRequired,\r\n    showGrid: PropTypes.bool,\r\n    angled: PropTypes.bool,\r\n    gridHeight: PropTypes.number,\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    utc: PropTypes.bool,\r\n    style: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        values: PropTypes.object, // eslint-disable-line\r\n        axis: PropTypes.object // eslint-disable-line\r\n    }),\r\n    tickCount: PropTypes.number\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport invariant from \"invariant\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleTime, scaleUtc } from \"d3-scale\";\r\nimport { TimeRange } from \"pondjs\";\r\nimport { areComponentsEqual } from \"react-hot-loader\";\r\n\r\nimport Brush from \"./Brush\";\r\nimport MultiBrush from \"./MultiBrush\";\r\nimport ChartRow from \"./ChartRow\";\r\nimport Charts from \"./Charts\";\r\nimport EventHandler from \"./EventHandler\";\r\nimport TimeAxis from \"./TimeAxis\";\r\nimport TimeMarker from \"./TimeMarker\";\r\nimport Label from \"./Label\";\r\n\r\nconst defaultTimeAxisStyle = {\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\",\r\n        pointerEvents: \"none\"\r\n    }\r\n};\r\n\r\nconst defaultTitleStyle = {\r\n    fontWeight: 100,\r\n    fontSize: 14,\r\n    font: '\"Goudy Bookletter 1911\", sans-serif\"',\r\n    fill: \"#C0C0C0\"\r\n};\r\n\r\nconst defaultChartRowTitleLabelStyle = {\r\n    fontWeight: 100,\r\n    fontSize: 13,\r\n    font: '\"Goudy Bookletter 1911\", sans-serif\"',\r\n    fill: \"#000\"\r\n};\r\n\r\nconst defaultChartRowTitleBoxStyle = {\r\n    fill: \"white\",\r\n    stroke: \"none\"\r\n};\r\n\r\nconst defaultTrackerStyle = {\r\n    line: {\r\n        stroke: \"#999\",\r\n        cursor: \"crosshair\",\r\n        pointerEvents: \"none\"\r\n    },\r\n    box: {\r\n        fill: \"white\",\r\n        opacity: 0.9,\r\n        stroke: \"#999\",\r\n        pointerEvents: \"none\"\r\n    },\r\n    dot: {\r\n        fill: \"#999\"\r\n    }\r\n};\r\n\r\n/**\r\n * The `<ChartContainer>` is the outer most element of a chart and is\r\n * responsible for generating and arranging its sub-elements. Specifically,\r\n * it is a container for one or more `<ChartRows>` (each of which contains\r\n * charts, axes etc) and in addition it manages the overall time range of\r\n * the chart and so also is responsible for the time axis, which is always\r\n * shared by all the rows.\r\n *\r\n * Here is an example:\r\n *\r\n * ```xml\r\n * <ChartContainer timeRange={audSeries.timerange()} width=\"800\">\r\n *     <ChartRow>\r\n *         ...\r\n *     </ChartRow>\r\n *     <ChartRow>\r\n *         ...\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n */\r\nexport default class ChartContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTrackerChanged = this.handleTrackerChanged.bind(this);\r\n        this.handleTimeRangeChanged = this.handleTimeRangeChanged.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\r\n        this.handleZoom = this.handleZoom.bind(this);\r\n        this.saveSvgRef = this.saveSvgRef.bind(this);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleTrackerChanged(t) {\r\n        if (this.props.onTrackerChanged) {\r\n            this.props.onTrackerChanged(\r\n                t,\r\n                // Adjust the scaled time so that the result\r\n                // is the true x position relative to the whole chart\r\n                t => this.timeScale(t) + this.leftWidth\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Within the charts library the time range of the x axis is kept as a begin\r\n     * and end time (Javascript Date objects). But the interface is Pond based,\r\n     * so this callback returns a Pond TimeRange.\r\n     */\r\n    handleTimeRangeChanged(timerange) {\r\n        if (this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(timerange);\r\n        }\r\n    }\r\n\r\n    handleMouseMove(x, y) {\r\n        this.handleTrackerChanged(this.timeScale.invert(x));\r\n        if (this.props.onMouseMove) {\r\n            this.props.onMouseMove(x, y);\r\n        }\r\n    }\r\n\r\n    handleMouseOut(e) {\r\n        this.handleTrackerChanged(null);\r\n    }\r\n\r\n    handleContextMenu(x, y) {\r\n        if (this.props.onContextMenu) {\r\n            const t = this.props.scale ? this.props.scale.invert(x) : this.timeScale.invert(x);\r\n            this.props.onContextMenu(x, y, t);\r\n        }\r\n    }\r\n\r\n    handleBackgroundClick(x, y) {\r\n        if (this.props.onBackgroundClick) {\r\n            const t = this.props.scale ? this.props.scale.invert(x) : this.timeScale.invert(x);\r\n            this.props.onBackgroundClick(x, y, t);\r\n        }\r\n    }\r\n\r\n    handleZoom(timerange) {\r\n        if (this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(timerange);\r\n        }\r\n    }\r\n\r\n    saveSvgRef(c) {\r\n        this.svg = c;\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    render() {\r\n        const { padding = 0 } = this.props;\r\n        const { paddingLeft = padding, paddingRight = padding } = this.props;\r\n        const { paddingTop = padding, paddingBottom = padding } = this.props;\r\n\r\n        let { titleHeight = 28 } = this.props;\r\n        if (_.isUndefined(this.props.title)) {\r\n            titleHeight = 0;\r\n        }\r\n\r\n        const chartRows = [];\r\n        const chartRowTitles = [];\r\n        const leftAxisWidths = [];\r\n        const rightAxisWidths = [];\r\n\r\n        //\r\n        // How much room does the axes of all the charts take up on the right\r\n        // and left. The result is an array for left and right axis which\r\n        // contain the min column width needed to hold the axes widths at the\r\n        // pos for all rows.\r\n        //\r\n        // pos   1      0        <charts>     0        1        2\r\n        //     | Axis | Axis |   CHARTS    |  Axis  |                      Row 1\r\n        //            | Axis |   CHARTS    |  Axis  |  Axis  |  Axis |     Row 2\r\n        //     ...............              ..........................\r\n        //          left cols              right cols\r\n        //\r\n\r\n        React.Children.forEach(this.props.children, childRow => {\r\n            if (areComponentsEqual(childRow.type, ChartRow)) {\r\n                //\r\n                // Within this row, count the number of columns that will be\r\n                // left and right of the Charts tag, as well as the total number\r\n                // of Charts tags for error handling\r\n                //\r\n                let countLeft = 0;\r\n                let countCharts = 0;\r\n\r\n                let align = \"left\";\r\n\r\n                React.Children.forEach(childRow.props.children, child => {\r\n                    if (child === null) return;\r\n                    if (areComponentsEqual(child.type, Charts)) {\r\n                        countCharts += 1;\r\n                        align = \"right\";\r\n                    } else if (\r\n                        !areComponentsEqual(child.type, Brush) &&\r\n                        !areComponentsEqual(child.type, MultiBrush)\r\n                    ) {\r\n                        if (align === \"left\") {\r\n                            countLeft += 1;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (countCharts !== 1) {\r\n                    const msg = \"ChartRow should have one and only one <Charts> tag within it\";\r\n                    invariant(false, msg, childRow.constructor.name);\r\n                }\r\n\r\n                align = \"left\";\r\n                let pos = countLeft - 1;\r\n\r\n                React.Children.forEach(childRow.props.children, child => {\r\n                    if (child === null) return;\r\n                    if (\r\n                        areComponentsEqual(child.type, Charts) ||\r\n                        areComponentsEqual(child.type, Brush) ||\r\n                        areComponentsEqual(child.type, MultiBrush)\r\n                    ) {\r\n                        if (areComponentsEqual(child.type, Charts)) {\r\n                            align = \"right\";\r\n                            pos = 0;\r\n                        }\r\n                    } else {\r\n                        let width = Number(child.props.width) || 40;\r\n                        const visible = !_.has(child.props, \"visible\") || child.props.visible;\r\n                        if (!visible) width = 0;\r\n\r\n                        if (align === \"left\") {\r\n                            leftAxisWidths[pos] = leftAxisWidths[pos]\r\n                                ? Math.max(width, leftAxisWidths[pos])\r\n                                : width;\r\n                            pos -= 1;\r\n                        } else if (align === \"right\") {\r\n                            rightAxisWidths[pos] = rightAxisWidths[pos]\r\n                                ? Math.max(width, rightAxisWidths[pos])\r\n                                : width;\r\n                            pos += 1;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // Space used by columns on left and right of charts\r\n        const leftWidth = (this.leftWidth = _.reduce(leftAxisWidths, (a, b) => a + b, 0));\r\n        const rightWidth = (this.rightWidth = _.reduce(rightAxisWidths, (a, b) => a + b, 0));\r\n\r\n        //\r\n        // Time scale\r\n        //\r\n\r\n        let { timeAxisHeight = 35 } = this.props;\r\n        if (this.props.hideTimeAxis) {\r\n            timeAxisHeight = 0;\r\n        }\r\n\r\n        const timeAxisWidth =\r\n            this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        if (!this.props.timeRange) {\r\n            throw Error(\"Invalid timerange passed to ChartContainer\");\r\n        }\r\n\r\n        const timeScale = (this.timeScale = this.props.utc\r\n            ? scaleUtc()\r\n                  .domain(this.props.timeRange.toJSON())\r\n                  .range([0, timeAxisWidth])\r\n            : scaleTime()\r\n                  .domain(this.props.timeRange.toJSON())\r\n                  .range([0, timeAxisWidth]));\r\n\r\n        const chartsWidth = this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        let i = 0;\r\n        let yPosition = paddingTop;\r\n\r\n        // Chart title\r\n        const transform = `translate(${leftWidth + paddingLeft},${yPosition})`;\r\n        const titleStyle = merge(\r\n            true,\r\n            defaultTitleStyle,\r\n            this.props.titleStyle ? this.props.titleStyle : {}\r\n        );\r\n        const title = this.props.title ? (\r\n            <g transform={transform}>\r\n                <Label\r\n                    align=\"center\"\r\n                    label={this.props.title}\r\n                    style={{ label: titleStyle, box: { fill: \"none\", stroke: \"none\" } }}\r\n                    width={chartsWidth}\r\n                    height={titleHeight}\r\n                />\r\n            </g>\r\n        ) : (\r\n            <g />\r\n        );\r\n\r\n        const trackerStyle = merge(\r\n            true,\r\n            defaultTrackerStyle,\r\n            this.props.trackerStyle ? this.props.trackerStyle : {}\r\n        );\r\n\r\n        //yPosition += titleHeight;\r\n        let chartsHeight = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (areComponentsEqual(child.type, ChartRow)) {\r\n                const chartRow = child;\r\n                const rowKey = `chart-row-row-${i}`;\r\n                const firstRow = i === 0;\r\n                const isVisible = child.props.visible;\r\n                const props = {\r\n                    timeScale,\r\n                    paddingLeft,\r\n                    paddingRight,\r\n                    leftAxisWidths,\r\n                    rightAxisWidths,\r\n                    width: this.props.width,\r\n                    minTime: this.props.minTime,\r\n                    maxTime: this.props.maxTime,\r\n                    transition: this.props.transition,\r\n                    enablePanZoom: this.props.enablePanZoom,\r\n                    minDuration: this.props.minDuration,\r\n                    showGrid: this.props.showGrid,\r\n                    timeFormat: this.props.format,\r\n                    trackerShowTime: firstRow,\r\n                    trackerTime: this.props.trackerPosition,\r\n                    trackerTimeFormat: this.props.format,\r\n                    trackerStyle: trackerStyle,\r\n                    onTimeRangeChanged: this.handleTimeRangeChanged,\r\n                    onTrackerChanged: this.handleTrackerChanged\r\n                };\r\n\r\n                let { titleHeight = 28 } = child.props;\r\n                if (_.isUndefined(child.props.title)) {\r\n                    titleHeight = 0;\r\n                }\r\n\r\n                const transform = `translate(${-leftWidth - paddingLeft},${yPosition +\r\n                    titleHeight})`;\r\n                if (isVisible) {\r\n                    chartRows.push(\r\n                        <g transform={transform} key={rowKey}>\r\n                            {React.cloneElement(chartRow, props)}\r\n                        </g>\r\n                    );\r\n\r\n                    if (!_.isUndefined(child.props.title)) {\r\n                        const rowTitleKey = `chart-row-row-title-${i}`;\r\n\r\n                        const titleLabelStyle = merge(\r\n                            true,\r\n                            defaultChartRowTitleLabelStyle,\r\n                            child.props.titleStyle ? child.props.titleStyle : {}\r\n                        );\r\n                        const titleBoxStyle = merge(\r\n                            true,\r\n                            defaultChartRowTitleBoxStyle,\r\n                            child.props.titleBoxStyle ? child.props.titleBoxStyle : {}\r\n                        );\r\n                        const titleTransform = `translate(${-leftWidth -\r\n                            paddingLeft},${yPosition})`;\r\n                        const title = (\r\n                            <g transform={titleTransform} key={rowTitleKey}>\r\n                                <Label\r\n                                    align=\"left\"\r\n                                    label={child.props.title}\r\n                                    style={{\r\n                                        label: titleLabelStyle,\r\n                                        box: titleBoxStyle\r\n                                    }}\r\n                                    width={props.width}\r\n                                    height={titleHeight}\r\n                                />\r\n                            </g>\r\n                        );\r\n\r\n                        chartRowTitles.push(title);\r\n                    }\r\n\r\n                    const height = parseInt(child.props.height, 10) + titleHeight;\r\n                    yPosition += height;\r\n                    chartsHeight += height;\r\n                }\r\n            }\r\n            i += 1;\r\n        });\r\n\r\n        // Hover tracker line\r\n        let tracker;\r\n        if (\r\n            this.props.trackerPosition &&\r\n            this.props.timeRange.contains(this.props.trackerPosition)\r\n        ) {\r\n            tracker = (\r\n                <g\r\n                    key=\"tracker-group\"\r\n                    style={{ pointerEvents: \"none\" }}\r\n                    transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}\r\n                >\r\n                    <TimeMarker\r\n                        width={chartsWidth}\r\n                        height={chartsHeight}\r\n                        showInfoBox={!!this.props.trackerValues}\r\n                        time={this.props.trackerPosition}\r\n                        timeScale={timeScale}\r\n                        timeFormat={this.props.format}\r\n                        infoWidth={this.props.trackerHintWidth}\r\n                        infoHeight={this.props.trackerHintHeight}\r\n                        infoValues={this.props.trackerValues}\r\n                        infoStyle={trackerStyle}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n\r\n        //\r\n        // TimeAxis\r\n        //\r\n\r\n        let timeAxisStyle;\r\n        if (this.props.hideTimeAxis) {\r\n            timeAxisStyle = {\r\n                axis: {\r\n                    display: \"none\"\r\n                }\r\n            };\r\n        } else {\r\n            timeAxisStyle = merge(\r\n                true,\r\n                defaultTimeAxisStyle.axis,\r\n                this.props.timeAxisStyle.axis ? this.props.timeAxisStyle.axis : {}\r\n            );\r\n        }\r\n\r\n        const timeAxis = (\r\n            <g\r\n                transform={`translate(${leftWidth + paddingLeft},${paddingTop +\r\n                    titleHeight +\r\n                    chartsHeight})`}\r\n            >\r\n                <line\r\n                    x1={-leftWidth}\r\n                    y1={0.5}\r\n                    x2={chartsWidth + rightWidth}\r\n                    y2={0.5}\r\n                    style={timeAxisStyle}\r\n                />\r\n                <TimeAxis\r\n                    scale={timeScale}\r\n                    utc={this.props.utc}\r\n                    angled={this.props.timeAxisAngledLabels}\r\n                    style={this.props.timeAxisStyle}\r\n                    format={this.props.format}\r\n                    showGrid={this.props.showGrid}\r\n                    gridHeight={chartsHeight}\r\n                    tickCount={this.props.timeAxisTickCount}\r\n                />\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Event handler\r\n        //\r\n\r\n        const rows = (\r\n            <g transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}>\r\n                <EventHandler\r\n                    key=\"event-handler\"\r\n                    width={chartsWidth}\r\n                    height={chartsHeight + timeAxisHeight}\r\n                    scale={timeScale}\r\n                    enablePanZoom={this.props.enablePanZoom}\r\n                    enableDragZoom={this.props.enableDragZoom}\r\n                    minDuration={this.props.minDuration}\r\n                    minTime={this.props.minTime}\r\n                    maxTime={this.props.maxTime}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseMove={this.handleMouseMove}\r\n                    onMouseClick={this.handleBackgroundClick}\r\n                    onContextMenu={this.handleContextMenu}\r\n                    onZoom={this.handleZoom}\r\n                >\r\n                    {chartRows}\r\n                </EventHandler>\r\n            </g>\r\n        );\r\n\r\n        const rowTitles = (\r\n            <g transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}>\r\n                {chartRowTitles}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Final render of the ChartContainer is composed of a number of\r\n        // chartRows, a timeAxis and the tracker indicator\r\n        //\r\n\r\n        const svgWidth = this.props.width;\r\n        const svgHeight = chartsHeight + timeAxisHeight + paddingTop + paddingBottom + titleHeight;\r\n\r\n        const svgStyle = merge(\r\n            true,\r\n            { display: \"block\" },\r\n            this.props.style ? this.props.style : {}\r\n        );\r\n\r\n        return this.props.showGridPosition === \"over\" ? (\r\n            <svg width={svgWidth} height={svgHeight} style={svgStyle} ref={this.saveSvgRef}>\r\n                {title}\r\n                {rows}\r\n                {tracker}\r\n                {timeAxis}\r\n                {rowTitles}\r\n            </svg>\r\n        ) : (\r\n            <svg\r\n                width={svgWidth}\r\n                height={svgHeight}\r\n                style={{ display: \"block\" }}\r\n                ref={this.saveSvgRef}\r\n            >\r\n                {title}\r\n                {timeAxis}\r\n                {rows}\r\n                {rowTitles}\r\n                {tracker}\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nChartContainer.propTypes = {\r\n    /**\r\n     * A [Pond TimeRange](https://esnet-pondjs.appspot.com/#/timerange) representing the\r\n     * begin and end time of the chart.\r\n     */\r\n    timeRange: PropTypes.instanceOf(TimeRange).isRequired,\r\n\r\n    /**\r\n     * Should the time axis use a UTC scale or local\r\n     */\r\n    utc: PropTypes.bool,\r\n\r\n    /**\r\n     * Children of the ChartContainer should be ChartRows.\r\n     */\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\r\n        .isRequired,\r\n\r\n    /**\r\n     * The width of the chart. This library also includes a <Resizable> component\r\n     * that can be wrapped around a \\<ChartContainer\\>. The purpose of this is to\r\n     * inject a width prop into the ChartContainer so that it will fit the\r\n     * surrounding element. This is very handy when you need the chart to resize\r\n     * based on a responsive layout.\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * Constrain the timerange to not move back in time further than this Date.\r\n     */\r\n    minTime: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * Constrain the timerange to not move forward in time than this Date. A\r\n     * common example is setting this to the current time or the end time\r\n     * of a fixed set of data.\r\n     */\r\n    maxTime: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * Boolean to turn on interactive pan and zoom behavior for the chart.\r\n     */\r\n    enablePanZoom: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean to turn on interactive drag to zoom behavior for the chart.\r\n     */\r\n    enableDragZoom: PropTypes.bool,\r\n\r\n    /**\r\n     * If this is set the timerange of the chart cannot be zoomed in further\r\n     * than this duration, in milliseconds. This might be determined by the\r\n     * resolution of your data.\r\n     */\r\n    minDuration: PropTypes.number,\r\n\r\n    /**\r\n     * Provides several options as to the format of the time axis labels.\r\n     *\r\n     * In general the time axis will generate an appropriate time scale based\r\n     * on the timeRange prop and there is no need to set this.\r\n     *\r\n     * However, some options exist:\r\n     *\r\n     *  - setting format to \"day\", \"month\" or \"year\" will show only ticks on those,\r\n     * and every one of those intervals. For example maybe you are showing a bar\r\n     * chart for October 2014 then setting the format to \"day\" will insure that a\r\n     * label is placed for each and every day\r\n     *\r\n     *  - setting format to \"relative\" interprets the time as a duration. This\r\n     * is good for data that is specified relative to its start time, rather than\r\n     * as an actual date/time\r\n     *\r\n     *  - setting the format to a d3 format string will use that format\r\n     *\r\n     *  - supplying a function for format will cause that function to be called\r\n     * whenever rendering a time\r\n     */\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * Time in milliseconds to transition from one Y-scale to the next\r\n     */\r\n    transition: PropTypes.number,\r\n\r\n    /**\r\n     * Show grid lines for each time marker\r\n     */\r\n    showGrid: PropTypes.bool,\r\n\r\n    /**\r\n     * Defines whether grid is overlayed (\"over\"( or underlayed (\"under\")\r\n     * with respect to the charts\r\n     */\r\n    showGridPosition: PropTypes.oneOf([\"over\", \"under\"]),\r\n\r\n    /**\r\n     * Defines how to style the SVG\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The width of the tracker info box\r\n     */\r\n    trackerHintWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the tracker info box\r\n     */\r\n    trackerHintHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Info box value or values to place next to the tracker line.\r\n     * This is either an array of objects, with each object\r\n     * specifying the label and value to be shown in the info box,\r\n     * or a simple string label.\r\n     */\r\n    trackerValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string,\r\n                value: PropTypes.string\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * A Date specifying the position of the tracker line on the chart. It is\r\n     * common to take this from the onTrackerChanged callback so that the tracker\r\n     * followers the user's cursor, but it could be modified to snap to a point or\r\n     * to the nearest minute, for example.\r\n     */\r\n    trackerPosition: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * The style of the time marker. This is an object of the form { line, box, dot }.\r\n     * Line, box and dot are themselves objects representing inline CSS for each of\r\n     * the pieces of the info marker.\r\n     *\r\n     * When we use the TimeMarker as a tracker, we can style the box and dot as well.\r\n     */\r\n    trackerStyle: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        line: PropTypes.object, // eslint-disable-line\r\n        box: PropTypes.object, // eslint-disable-line\r\n        dot: PropTypes.object // eslint-disable-line\r\n    }),\r\n\r\n    /**\r\n     * Will be called when the user hovers over a chart. The callback will\r\n     * be called with the timestamp (a Date object) of the position hovered\r\n     * over as well as the current time axis' time scale. The timestamp may\r\n     * be used as the trackerPosition (see above), or to provide information\r\n     * about the time hovered over within the greater page. The time scale\r\n     * may be used to translate the timestamp into an x coordinate, which\r\n     * can then be used to position arbitrary components in sync with the\r\n     * current tracker position.\r\n     * Commonly we might do something like this:\r\n     * ```\r\n     *   <ChartContainer\r\n     *     onTrackerChanged={(tracker) => this.setState({tracker})}\r\n     *     trackerPosition={this.state.tracker}\r\n     *     ... />\r\n     * ```\r\n     */\r\n    onTrackerChanged: PropTypes.func,\r\n\r\n    /**\r\n     * This will be called if the user pans and/or zooms the chart. The callback\r\n     * will be called with the new TimeRange. This can be fed into the timeRange\r\n     * prop as well as used elsewhere on the greater page. Typical use might look\r\n     * like this:\r\n     * ```\r\n     *   <ChartContainer\r\n     *     onTimeRangeChanged={(timerange) => this.setState({timerange})}\r\n     *     timeRange={this.state.timerange}\r\n     *     ... />\r\n     * ```\r\n     */\r\n    onTimeRangeChanged: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the size of the chart changes\r\n     */\r\n    onChartResize: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user clicks the background plane of the chart. This is\r\n     * useful when deselecting elements.\r\n     */\r\n    onBackgroundClick: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user context-clicks the chart\r\n     */\r\n    onContextMenu: PropTypes.func,\r\n\r\n    /**\r\n     * Props for handling the padding\r\n     */\r\n    padding: PropTypes.number,\r\n    paddingLeft: PropTypes.number,\r\n    paddingRight: PropTypes.number,\r\n    paddingTop: PropTypes.number,\r\n    paddingBottom: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the title for the chart\r\n     */\r\n    title: PropTypes.string,\r\n\r\n    /**\r\n     * Specify the height of the title\r\n     * Default value is 28 pixels\r\n     */\r\n    titleHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the styling of the chart's title\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Object specifying the CSS by which the `TimeAxis` can be styled. The object can contain:\r\n     * \"values\" (the time labels), \"axis\" (the main horizontal line) and \"ticks\" (which may\r\n     * optionally extend the height of all chart rows using the `showGrid` prop. Each of these\r\n     * is an inline CSS style applied to the axis label, axis values, axis line and ticks\r\n     * respectively.\r\n     *\r\n     * Note that \"ticks\" and \"values\" are passed into d3's styles, so they are regular CSS property names\r\n     * and not React's camel case names (e.g. \"stroke-dasharray\" not \"strokeDasharray\"). \"axis\" is a\r\n     * regular React rendered SVG line, so it uses camel case.\r\n     */\r\n    timeAxisStyle: PropTypes.shape({\r\n        axis: PropTypes.object,\r\n        values: PropTypes.object,\r\n        ticks: PropTypes.object\r\n    }),\r\n\r\n    /**\r\n     * Height of the time axis\r\n     * Default value is 35 pixels\r\n     */\r\n    timeAxisHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the number of ticks\r\n     * The default ticks for quantitative scales are multiples of 2, 5 and 10.\r\n     * So, while you can use this prop to increase or decrease the tick count, it will always return multiples of 2, 5 and 10.\r\n     */\r\n    timeAxisTickCount: PropTypes.number,\r\n\r\n    /**\r\n     * Angle the time axis labels\r\n     */\r\n    timeAxisAngledLabels: PropTypes.bool,\r\n\r\n    /**\r\n     * Prop to hide time axis if required\r\n     */\r\n    hideTimeAxis: PropTypes.bool\r\n};\r\n\r\nChartContainer.defaultProps = {\r\n    width: 800,\r\n    padding: 0,\r\n    enablePanZoom: false,\r\n    enableDragZoom: false,\r\n    utc: false,\r\n    showGrid: false,\r\n    showGridPosition: \"over\",\r\n    timeAxisStyle: defaultTimeAxisStyle,\r\n    titleStyle: defaultTitleStyle,\r\n    trackerStyle: defaultTrackerStyle,\r\n    hideTimeAxis: false\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * This takes a single child and inserts a prop 'width' on it that is the\r\n * current width of the this container. This is handy if you want to surround\r\n * a chart or other svg diagram and have this drive the chart width.\r\n */\r\nexport default class Resizable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { width: 500 };\r\n    console.log(this.props.width);\r\n    // console.log(this.props.parent.width);\r\n    // console.log(this.props.parent);\r\n    // console.log(this.props.parent.innerWidth);\r\n    this.state = { width: this.props.width };\r\n    // this.state = { width: \"100%\" };\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    // console.log(\"got resize mount\");\r\n    this.handleResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n  //TEMPORARY SOLUTION FOR GETTING RESIZE TO WORK\r\n  handleResize() {\r\n    // console.log(this.container)\r\n    // console.log(this.container.width);\r\n    console.log(this.props.width);\r\n    if (this.container) {\r\n      // console.log(this.props.parent.width);\r\n      this.setState({\r\n        // width: this.container.width,\r\n        // width: this.container.offsetWidth,\r\n        // width: this.props.width,\r\n        width: 0.8 * window.innerWidth,\r\n        // width: 0.8 * window.innerWidth,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const child = React.Children.only(this.props.children);\r\n    const childElement = this.state.width\r\n      ? React.cloneElement(child, { width: this.state.width })\r\n      : null;\r\n    return (\r\n      <div\r\n        ref={(c) => {\r\n          this.container = c;\r\n        }}\r\n        {...this.props}\r\n      >\r\n        {childElement}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResizable.propTypes = {\r\n  children: PropTypes.node,\r\n  // parent: PropTypes.any,\r\n  width: PropTypes.number,\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeSeries, Event } from \"pondjs\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n/**\r\n * Renders an event view that shows the supplied set of events along a time axis.\r\n * The events should be supplied as a Pond TimeSeries.\r\n * That series may contain regular TimeEvents, TimeRangeEvents\r\n * or IndexedEvents.\r\n */\r\nexport default class EventChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: null,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Continues a hover event on a specific bar of the bar chart.\r\n   */\r\n  onMouseOver(e, event) {\r\n    if (this.props.onMouseOver) {\r\n      this.props.onMouseOver(event);\r\n    }\r\n    this.setState({ hover: event });\r\n  }\r\n\r\n  /**\r\n   * Handle mouse leave and calls onMouseLeave callback if one is provided\r\n   */\r\n  onMouseLeave() {\r\n    if (this.props.onMouseLeave) {\r\n      this.props.onMouseLeave(this.state.hover);\r\n    }\r\n    this.setState({ hover: null });\r\n  }\r\n\r\n  /**\r\n   * Handle click will call the onSelectionChange callback if one is provided\r\n   * as a prop. It will be called with the event selected.\r\n   */\r\n  handleClick(e, event) {\r\n    e.stopPropagation();\r\n    if (this.props.onSelectionChange) {\r\n      this.props.onSelectionChange(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { series, textOffsetX, textOffsetY, hoverMarkerWidth } = this.props;\r\n    const scale = this.props.timeScale;\r\n    const eventMarkers = [];\r\n\r\n    // Create and array of markers, one for each event\r\n    let i = 0;\r\n    for (const event of series.events()) {\r\n      const begin = event.begin();\r\n      const end = event.end();\r\n      const beginPos = scale(begin) >= 0 ? scale(begin) : 0;\r\n      const endPos =\r\n        scale(end) <= this.props.width ? scale(end) : this.props.width;\r\n\r\n      const transform = `translate(${beginPos},0)`;\r\n      const isHover = this.state.hover\r\n        ? Event.is(event, this.state.hover)\r\n        : false;\r\n      // console.log()\r\n      let state;\r\n      if (isHover) {\r\n        state = \"hover\";\r\n      } else {\r\n        state = \"normal\";\r\n      }\r\n\r\n      let barNormalStyle = {};\r\n      let barStyle = {};\r\n      if (this.props.style) {\r\n        barNormalStyle = this.props.style(event, \"normal\");\r\n        barStyle = this.props.style(event, state);\r\n      }\r\n\r\n      let label = \"\";\r\n      if (this.props.label) {\r\n        if (_.isString(this.props.label)) {\r\n          label = this.props.label;\r\n        } else if (_.isFunction(this.props.label)) {\r\n          label = this.props.label(event);\r\n        }\r\n      }\r\n\r\n      const x = this.props.spacing;\r\n      const y = 0;\r\n      let width = endPos - beginPos - 2 * this.props.spacing;\r\n      width = width < 0 ? 0 : width;\r\n      const height = this.props.size;\r\n\r\n      const eventLabelStyle = {\r\n        fontWeight: 100,\r\n        fontSize: 11,\r\n      };\r\n\r\n      let text = null;\r\n      // if (true) {\r\n      //   if (isHover) {\r\n      //     text = (\r\n      //       //   <Tooltip title={label}>\r\n      //       <g>\r\n      //         {/* <rect\r\n      //           className=\"eventchart-marker\"\r\n      //           x={x}\r\n      //           y={y + 10}\r\n      //           // y={y}\r\n      //           width={width}\r\n      //           height={height + 4}\r\n      //           style={merge(true, barNormalStyle, { pointerEvents: \"none\" })}\r\n      //         /> */}\r\n      //         <text\r\n      //           style={{\r\n      //             pointerEvents: \"none\",\r\n      //             fill: \"#444\",\r\n      //             ...eventLabelStyle,\r\n      //           }}\r\n      //           x={8 + textOffsetX}\r\n      //           y={15 + textOffsetY}\r\n      //         >\r\n      //           {label}\r\n      //         </text>\r\n      //       </g>\r\n      //       //   </Tooltip>\r\n      //     );\r\n      //   }\r\n\r\n      eventMarkers.push(\r\n        <Tooltip title={this.props.label(event)}>\r\n          <g\r\n            transform={transform}\r\n            key={i}\r\n            onClick={(e) => this.handleClick(e, event)}\r\n            onMouseLeave={() => this.onMouseLeave()}\r\n            onMouseOver={(e) => this.onMouseOver(e, event)}\r\n          >\r\n            <circle\r\n              cx={x}\r\n              cy={y + 5}\r\n              r={5}\r\n              style={barStyle}\r\n              // style = {{fill: \"red\"}}\r\n            />\r\n            <rect\r\n              className=\"eventchart-marker\"\r\n              x={x}\r\n              y={y + 4}\r\n              width={width}\r\n              height={2}\r\n              // height={height}\r\n              style={barStyle}\r\n              // onClick={e => this.handleClick(e, event)}\r\n              // onMouseLeave={() => this.onMouseLeave()}\r\n              // onMouseOver={e => this.onMouseOver(e, event)}\r\n            />\r\n            <circle\r\n              cx={x + width}\r\n              cy={y + 5}\r\n              r={5}\r\n              style={barStyle}\r\n              // style = {{fill: \"red\"}}\r\n            />\r\n            {text}\r\n          </g>\r\n        </Tooltip>\r\n      );\r\n\r\n      i += 1;\r\n    }\r\n\r\n    return <g>{eventMarkers}</g>;\r\n  }\r\n}\r\n\r\nEventChart.defaultProps = {\r\n  visible: true,\r\n  size: 30,\r\n  spacing: 0,\r\n  textOffsetX: 0,\r\n  textOffsetY: 0,\r\n  hoverMarkerWidth: 5,\r\n};\r\n\r\nEventChart.propTypes = {\r\n  /**\r\n   * Show or hide this chart\r\n   */\r\n  visible: PropTypes.bool,\r\n\r\n  /**\r\n   * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries) data to visualize\r\n   */\r\n  series: PropTypes.instanceOf(TimeSeries).isRequired,\r\n\r\n  // events: PropTypes.instanceOf()\r\n  /**\r\n   * Set hover label text\r\n   * When label is function callback it will be called with current event.\r\n   */\r\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n  /**\r\n   * The height in pixels for the event bar\r\n   */\r\n  size: PropTypes.number,\r\n\r\n  /**\r\n   * The distance in pixels to inset the event bar from its actual timerange\r\n   */\r\n  spacing: PropTypes.number,\r\n\r\n  /**\r\n   * Marker width on hover\r\n   */\r\n  hoverMarkerWidth: PropTypes.number,\r\n\r\n  /**\r\n   * Hover text offset position X\r\n   */\r\n  textOffsetX: PropTypes.number,\r\n\r\n  /**\r\n   * Hover text offset position Y\r\n   */\r\n  textOffsetY: PropTypes.number,\r\n\r\n  /**\r\n   * A function that should return the style of the event box\r\n   */\r\n  style: PropTypes.func,\r\n\r\n  /**\r\n   * Event selection on click. Will be called with selected event.\r\n   */\r\n  onSelectionChange: PropTypes.func,\r\n\r\n  /**\r\n   * Mouse leave at end of hover event\r\n   */\r\n  onMouseLeave: PropTypes.func,\r\n\r\n  /**\r\n   * Mouse over event callback\r\n   */\r\n  onMouseOver: PropTypes.func,\r\n\r\n  /**\r\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n   */\r\n  timeScale: PropTypes.func,\r\n\r\n  /**\r\n   * [Internal] The width supplied by the surrounding ChartContainer\r\n   */\r\n  width: PropTypes.number,\r\n};\r\n","// import {v4 as uuid} from 'uuid';\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\r\nimport { useStoreState } from \"../hooks\";\r\nimport { Text } from \"evergreen-ui\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport EventInfoDisplay from \"./Timeline/EventInfoDisplay\";\r\nimport type { EventRowValues } from \"../model/map_data\";\r\n// https://codesandbox.io/s/l28vmvp2n9?from-embed\r\n\r\nimport ChartContainer from \"./TimeSeries/components/ChartContainer\";\r\n// import ChartContainer from  \"react-timeseries-charts\";\r\nimport Charts from \"./TimeSeries/components/Charts\";\r\nimport Resizable from \"./TimeSeries/components/Resizable\";\r\n// import { Resizable } from \"react-timeseries-charts\";\r\nimport ChartRow from \"./TimeSeries/components/ChartRow\";\r\nimport YAxis from \"./TimeSeries/components/YAxis\";\r\nimport EventChart from \"./TimeSeries/components/EventChart\";\r\nimport Baseline from \"./TimeSeries/components/Baseline\";\r\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { EventLevel } from \"../model/enums\";\r\nimport \"../css/timeline.css\";\r\nimport { convertTypeAcquisitionFromJson } from \"typescript\";\r\ninterface Seperator {\r\n  pos: number;\r\n  // pos: string;\r\n  name: string;\r\n  // count: number;\r\n}\r\n\r\nconst Timeline = function () {\r\n  const time_series = useStoreState((state) => state.map_data.timeline_series);\r\n  const timeline_offset = \"6em\";\r\n  const event_rows: EventRowValues[] = useStoreState(\r\n    (state) => state.map_data.event_spreadsheet\r\n  );\r\n  const initial_width = 2000;\r\n  const timeline_container = useRef<HTMLDivElement | null>(null);\r\n  const [eventInfo, setEventInfo] =\r\n    useState<EventRowValues | undefined>(undefined);\r\n  const [resizeWidth, setResizeWidth] = useState(initial_width);\r\n  const [selectedEvent, setSelectedEvent] =\r\n    useState<TimeSeries | undefined>(undefined);\r\n  // const [timeSeriesCount, setTimeSeriesCount] = useState(0);\r\n  const [seperators, setSeperators] = useState<Seperator[]>([]);\r\n  const theme = useTheme();\r\n  const row_height = 15;\r\n  // const row_height = 20;\r\n  const start_date = new Date(1763, 0, 1);\r\n  const end_date = new Date(2020, 0, 1);\r\n  const is_sm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  // const data_loaded = useStoreState((state) => state.map_data.loaded);\r\n  // const [width, setWidth] = useState(window.innerWidth);\r\n  function sum(acc: number, val: number) {\r\n    return acc + val;\r\n  }\r\n\r\n  useEffect(() => {\r\n    let tot = 0;\r\n    Object.values(time_series).forEach((f) => {\r\n      tot += f.length;\r\n    });\r\n    console.log(tot);\r\n    let seperators: Seperator[] = [];\r\n    let keys = Object.keys(time_series);\r\n\r\n    let test = 0;\r\n    if (tot > 0) {\r\n      let top = 1.0;\r\n      Object.values(time_series).forEach((f, i) => {\r\n        console.log(f.length / tot);\r\n        top -= f.length / tot;\r\n        console.log(top);\r\n        test += f.length / tot;\r\n        let sep = {\r\n          pos: top,\r\n          name: keys[i],\r\n        } as Seperator;\r\n        seperators.push(sep);\r\n      });\r\n      setSeperators(seperators);\r\n      console.log(seperators);\r\n      console.log(test);\r\n    }\r\n  }, [time_series]);\r\n  useEffect(() => {}, [seperators]);\r\n  const timelineSection = {\r\n    // height: 'fit-content',\r\n    height: 200,\r\n    // height\r\n    width: \"100%\",\r\n    borderTop: `1px solid ${theme.palette.primary.main}`,\r\n    display: is_sm ? \"inline-flex\" : \"none\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {\r\n    let test = timeline_container?.current?.style?.width;\r\n    console.log(test);\r\n    let test_number = parseInt(test ?? \"2000\");\r\n    console.log(test_number);\r\n    setResizeWidth(parseInt(test ?? \"2000\"));\r\n  }, [timeline_container]);\r\n  const linesContainer = {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    zIndex: -1,\r\n    opacity: 1.0,\r\n    textAlign: \"right\",\r\n  } as React.CSSProperties;\r\n\r\n  const seperatorText = {\r\n    fontSize: \"12px\",\r\n    position: \"absolute\",\r\n    // color: \"lightgrey\",\r\n    fontFamily: theme.typography.fontFamily,\r\n    color: theme.palette.primary.main,\r\n    textAlilgn: \"right\",\r\n  } as React.CSSProperties;\r\n\r\n  const historicalEventsText = {\r\n    fontSize: \"9px\",\r\n    position: \"absolute\",\r\n    color: theme.palette.primary.main,\r\n  } as React.CSSProperties;\r\n\r\n  const timeAxis = {\r\n    axis: {\r\n      stroke: theme.palette.primary.main,\r\n    },\r\n  };\r\n\r\n  let timerange = new TimeRange(start_date, end_date);\r\n  const make_series = (\r\n    series: TimeSeries[],\r\n    theme: Theme,\r\n    row_height: number\r\n  ) => {\r\n    let test = series.map(function (ev, i) {\r\n      let base_style = {\r\n        fill: theme.palette.primary.main,\r\n        opacity: 1.0,\r\n      };\r\n\r\n      function style_func(s: any, state: any) {\r\n        // console.log(state);\r\n        let style: any;\r\n\r\n        switch (state) {\r\n          case \"hover\":\r\n            style = {\r\n              fill: theme.palette.primary.light,\r\n              opacity: 1.0,\r\n              fontFamily: theme.typography.fontFamily,\r\n            };\r\n            break;\r\n          case \"selected\":\r\n            style = {\r\n              fill: theme.palette.primary.dark,\r\n              opacity: 1.0,\r\n              fontFamily: theme.typography.fontFamily,\r\n            };\r\n            break;\r\n          default:\r\n            style = base_style;\r\n        }\r\n        // e.data().first().get(\"title\"));\r\n        if (s.data().first().get(\"title\") === selectedEvent) {\r\n          console.log(\"got selected\");\r\n          style = {\r\n            fill: theme.palette.primary.light,\r\n            opacity: 1.0,\r\n            fontFamily: theme.typography.fontFamily,\r\n          };\r\n        }\r\n        return style;\r\n      }\r\n      function label_func(e: any) {\r\n        return e.data().first().get(\"title\");\r\n      }\r\n      function handle_click(e: any) {\r\n        console.log(e.data().first().get(\"title\"));\r\n        let title = e.data().first().get(\"title\");\r\n        let found_row = event_rows.filter((r) => r.title === title)[0];\r\n\r\n        setEventInfo(found_row);\r\n        setSelectedEvent(title);\r\n        console.log(getAllFuncs(e));\r\n      }\r\n      return (\r\n        <ChartRow\r\n          height={`${row_height}`}\r\n          style={{ fill: \"#f1a340\" }}\r\n          key={i}\r\n          axisMargin={1}\r\n        >\r\n          <Charts>\r\n            <EventChart\r\n              series={ev}\r\n              size={row_height}\r\n              label={(e: any) => label_func(e)}\r\n              onSelectionChange={(e: any) => handle_click(e)}\r\n              textOffsetY={-5}\r\n              style={style_func}\r\n            ></EventChart>\r\n          </Charts>\r\n        </ChartRow>\r\n      );\r\n    });\r\n    return test;\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0} style={timelineSection}>\r\n      <Grid item xs={2}>\r\n        {/* <div></div> */}\r\n        {/* <Text style={historicalEventsText}>\r\n          <span> HISTORICAL EVENTS</span>\r\n        </Text>\r\n        <EventInfoDisplay info={eventInfo}></EventInfoDisplay> */}\r\n        <EventInfoDisplay info={eventInfo}></EventInfoDisplay>\r\n      </Grid>\r\n      <Grid item xs={10} style={{ paddingTop: \".25em\" }}>\r\n        <div style={{ position: \"relative\", height: \"200px\" }}>\r\n          <div style={linesContainer}>\r\n            {seperators.map((sep, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    // borderTop: `1px solid ${theme.palette.primary.main}`,\r\n                    textAlign: \"right\",\r\n                    top: `${sep.pos * 100}%`,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      borderTop: `1px solid ${theme.palette.primary.main}`,\r\n                      top: `${sep.pos * 100}%`,\r\n                      position: \"relative\",\r\n                      marginLeft: timeline_offset,\r\n                    }}\r\n                  ></div>\r\n                  <div\r\n                    style={{\r\n                      width: 100,\r\n                      marginLeft: \"-6em\",\r\n                    }}\r\n                  >\r\n                    {/* <div style={{ width: 100, marginLeft: timeline_offset }}> */}\r\n                    <Text key={i} style={seperatorText}>\r\n                      {sep.name.toUpperCase()}\r\n                    </Text>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div\r\n            style={{ height: \"100%\", width: \"1000\", marginLeft: \"6em\" }}\r\n            ref={timeline_container}\r\n          >\r\n            <Resizable width={resizeWidth}>\r\n              <ChartContainer\r\n                timeRange={timerange}\r\n                enablePanZoom={false}\r\n                showGrid={true}\r\n                timeAxisStyle={timeAxis}\r\n                timeAxisTickCount={5}\r\n              >\r\n                {make_series(time_series.national, theme, row_height)}\r\n                {make_series(time_series.state, theme, row_height)}\r\n                {make_series(time_series.city, theme, row_height)}\r\n                {make_series(time_series.international, theme, row_height)}\r\n                {make_series(time_series.NA, theme, row_height)}\r\n              </ChartContainer>\r\n            </Resizable>\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n\r\nfunction getAllFuncs(toCheck: any) {\r\n  var props: any[] = [];\r\n  var obj = toCheck;\r\n  do {\r\n    props = props.concat(Object.getOwnPropertyNames(obj));\r\n  } while ((obj = Object.getPrototypeOf(obj)));\r\n\r\n  return props.sort().filter(function (e, i, arr) {\r\n    if (e != arr[i + 1] && typeof toCheck[e] == \"function\") return true;\r\n  });\r\n}\r\n","import React from \"react\"; // we need this to make JSX compile\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { Heading } from \"evergreen-ui\";\r\ntype SelectorSectionProps = {\r\n  title: string;\r\n  children: JSX.Element;\r\n};\r\n\r\n//wraps header and selection widgets\r\nexport const SelectorSection = ({ title, children }: SelectorSectionProps) => {\r\n  const theme = useTheme();\r\n  const container = {\r\n    height: \"100%\",\r\n    paddingLeft: \".25em\",\r\n    paddingRight: \".25em\",\r\n    minHeight: \"6rem\",\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    marginRight: \"1em\",\r\n    maxWidth: \"fit-content\",\r\n  } as React.CSSProperties;\r\n\r\n  const headerContainer = {\r\n    borderBottom: `1px solid ${theme.palette.primary.main}`,\r\n    paddingBottom: \".1em\",\r\n    height: \"20%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignContent: \"center\",\r\n  } as React.CSSProperties;\r\n\r\n  const header = {\r\n    color: theme.palette.primary.main,\r\n    marginTop: 0,\r\n    marginBottom: \"auto\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div style={container}>\r\n      <div style={headerContainer}>\r\n        <Heading size={300} style={header}>\r\n          {title}\r\n        </Heading>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorSection;\r\n","import { Heading, Text } from \"evergreen-ui\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useStoreActions, useStoreState } from \"../../../hooks\";\r\nimport { useState, useEffect } from \"react\";\r\nimport type { FilterOption } from \"../../../model/types\";\r\nimport { FilterState, FilterGroup } from \"../../../model/enums\";\r\n\r\nimport React from \"react\";\r\n\r\n//Containers a selection of grid units and header\r\nexport type SelectorGroupProps = {\r\n  title: string | null;\r\n  size: number;\r\n  children?: JSX.Element | JSX.Element[];\r\n  filter: FilterOption;\r\n};\r\n\r\nconst SelectorGroup = ({ title, children, filter }: SelectorGroupProps) => {\r\n  const theme = useTheme();\r\n  const set_filter = useStoreActions(\r\n    (actions) => actions.map_data.thunk_set_filter\r\n  );\r\n  const active_group_filter = useStoreState(\r\n    (state) => state.map_data?.group_filter\r\n  );\r\n  const [hovered, SetHovered] = useState(false);\r\n  const [active, setActive] = useState(FilterState.DEFAULT);\r\n\r\n  useEffect(() => {\r\n    // console.log(active_group_filter);\r\n    // dbb!()\r\n    // console.log(active_group_filter === filter);\r\n    if (active_group_filter === filter) {\r\n      setActive(FilterState.SOLO);\r\n    }\r\n    if (active_group_filter === FilterGroup.NONE) {\r\n      setActive(FilterState.DEFAULT);\r\n    }\r\n    // if (active_group_filter )\r\n    switch (active_group_filter) {\r\n      case filter:\r\n        setActive(FilterState.SOLO);\r\n        break;\r\n      case FilterGroup.NONE:\r\n        setActive(FilterState.DEFAULT);\r\n        break;\r\n      default:\r\n        setActive(FilterState.DEACTIVATED);\r\n        break;\r\n    }\r\n    // console.log(active);\r\n  }, [active_group_filter, hovered]);\r\n\r\n  const set_style = (fs: FilterState, hovered: boolean) => {\r\n    const base_style = {\r\n      height: \"fit-content\",\r\n      textDecoration: \"underline\",\r\n      marginTop: \"auto\",\r\n      marginBottom: \"auto\",\r\n      paddingRight: \"1em\",\r\n      fontFamily: theme.typography.fontFamily,\r\n      // color: theme.colorShades.main_0,\r\n      color: theme.palette.primary.main,\r\n    };\r\n    switch (fs) {\r\n      case FilterState.SOLO:\r\n        base_style.color = theme.palette.primary.light;\r\n        break;\r\n      case FilterState.DEACTIVATED:\r\n        base_style.color = theme.palette.primary.dark;\r\n        // base_style.color = \"yellow\";\r\n        break;\r\n      case FilterState.DEFAULT:\r\n        base_style.color = theme.palette.primary.main;\r\n\r\n        // base_style.color = \"green\";\r\n        break;\r\n    }\r\n    if (hovered) {\r\n      base_style.color = theme.palette.primary.light;\r\n    }\r\n    return base_style;\r\n  };\r\n\r\n  const groupStyle = {\r\n    fontFamily: theme.typography.fontFamily,\r\n    textDecoration: \"underline\",\r\n    color: hovered ? theme.palette.primary.light : theme.palette.primary.main,\r\n  } as React.CSSProperties;\r\n\r\n  const childContainer = {\r\n    marginTop: title !== null ? \".25em\" : 0,\r\n  } as React.CSSProperties;\r\n\r\n  const headerAndChild = {\r\n    height: \"fit-content\",\r\n    marginTop: \"auto\",\r\n    marginBottom: \"auto\",\r\n    paddingRight: \"1em\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n  return (\r\n    <div style={headerAndChild}>\r\n      <div\r\n        onMouseUp={() => set_filter(filter)}\r\n        onMouseEnter={() => SetHovered(true)}\r\n        onMouseLeave={() => SetHovered(false)}\r\n      >\r\n        <Text>\r\n          {/* <Heading size={100} style={groupStyle}> */}\r\n          <Heading size={100} style={set_style(active, hovered)}>\r\n            {title}\r\n          </Heading>\r\n        </Text>\r\n      </div>\r\n      <div style={childContainer}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorGroup;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\ntype SelectorParentProps = {\r\n  columns?: number;\r\n  children?: JSX.Element | JSX.Element[];\r\n  // children?: (title: string) => React.ReactElement[]\r\n};\r\n\r\n//places grid unit selectors into a grid layout\r\nconst SelectorParent = ({ children, columns }: SelectorParentProps) => {\r\n  const test = \"ddd  \";\r\n  const theme = useTheme();\r\n  const padding = \"0.25em 0em 0em .25em\";\r\n  const selectorGroup = {\r\n    padding: padding,\r\n    height: \"100%\",\r\n    borderRight: `1px dashed ${theme.palette.primary.main}`,\r\n    maxWidth: \"fit-content\",\r\n  } as React.CSSProperties;\r\n\r\n  //if only has 1 group add no borders\r\n  const noSiblings = {\r\n    padding: padding,\r\n    height: \"100%\",\r\n    maxWidth: \"fit-content\",\r\n  } as React.CSSProperties;\r\n\r\n  //1px dashed border for first widget group\r\n  const selectorGroupFirst = {\r\n    padding: padding,\r\n    height: \"100%\",\r\n    borderRight: `1px dashed ${theme.palette.primary.main}`,\r\n    maxWidth: \"fit-content\",\r\n  } as React.CSSProperties;\r\n\r\n  //1px dashes border right for last widget group\r\n  const selectorGroupLast = {\r\n    padding: padding,\r\n    height: \"100%\",\r\n    maxWidth: \"fit-content\",\r\n    // borderLeft: `1px dashed ${theme.palette.primary.main}`,\r\n  } as React.CSSProperties;\r\n\r\n  const child_count = Array.isArray(children) ? children.length : 1;\r\n\r\n  const gridContainer = {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr \".repeat(child_count),\r\n    maxWidth: \"fit-content\",\r\n  } as React.CSSProperties;\r\n\r\n  //assign style based on index\r\n  const group_style = (ind: number, chil: JSX.Element | JSX.Element[]) => {\r\n    if (Array.isArray(chil)) {\r\n      if (ind == 0) {\r\n        return selectorGroupFirst;\r\n      }\r\n      if (ind == chil.length - 1) {\r\n        return selectorGroupLast;\r\n      } else {\r\n        return selectorGroup;\r\n      }\r\n    } else {\r\n      return noSiblings;\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <Grid container spacing={0} direction=\"row\" style={clusterContainer}>\r\n    <div style={gridContainer}>\r\n      {children\r\n        ? React.Children.map<React.ReactNode, React.ReactNode>(\r\n            children,\r\n            (child, index) => {\r\n              if (React.isValidElement(child)) {\r\n                return <div style={group_style(index, children)}>{child}</div>;\r\n              }\r\n            }\r\n          )\r\n        : null}\r\n      {/* </Grid> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorParent;\r\n","import React, { useState, useEffect } from \"react\"; // we need this to make JSX compile\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport \"../../../css/App.css\";\r\nimport { getRandomNumber } from \"../../../utils\";\r\nimport { useStoreState } from \"../../../hooks\";\r\ntype UnitProps = {\r\n  color: number;\r\n  is_active_filter?: boolean;\r\n};\r\n\r\nexport const GridUnit = ({ color, is_active_filter }: UnitProps) => {\r\n  const theme = useTheme();\r\n  const size = 12;\r\n  const [hover, setHover] = useState(false);\r\n  const mounted = true;\r\n  const data_loaded = useStoreState((state) => state.map_data.loaded);\r\n  const duration = getRandomNumber(0.5, 4);\r\n  const containerStyle = {\r\n    display: \"block\",\r\n    // display: data_loaded ? \"block\" : \"none\",\r\n    animation: data_loaded ? `fadein ${duration}s normal` : \"\",\r\n    animationIterationCound: 1,\r\n    marginTop: \"auto\",\r\n  } as React.CSSProperties;\r\n\r\n  useEffect(() => {}, [mounted]);\r\n\r\n  const match_color = (ind: number) => {\r\n    let col: any;\r\n    switch (ind) {\r\n      case -2:\r\n        col = blue[500];\r\n        break;\r\n      case -1:\r\n        col = blue[100];\r\n        break;\r\n      case 0:\r\n        col = theme.palette.primary.main;\r\n        break;\r\n      case 1:\r\n        // col = blue[300];\r\n        col = theme.palette.primary.light;\r\n        break;\r\n      case 2:\r\n        // col = blue[400];\r\n        col = theme.palette.secondary.dark;\r\n        break;\r\n      case 3:\r\n        col = theme.palette.secondary.main;\r\n        break;\r\n      case 4:\r\n        col = theme.palette.primary.dark;\r\n        break;\r\n    }\r\n    return col;\r\n  };\r\n\r\n  const boxStyle = (is_active_filter?: boolean) => {\r\n    if (is_active_filter) {\r\n      // console.log(\"GOT ACTIVE FILTER~~\");\r\n      return {\r\n        width: `${size}px`,\r\n        height: `${size}px`,\r\n        backgroundColor: match_color(color),\r\n        marginTop: \"auto\",\r\n        marginBottom: \"3px\",\r\n        marginRight: \"3px\",\r\n        outline: \"1px solid #ffcb06\",\r\n        opacity: 1,\r\n      } as React.CSSProperties;\r\n    } else {\r\n      if (color == -2) {\r\n        return {\r\n          width: `${size}px`,\r\n          height: `${size}px`,\r\n          backgroundColor: match_color(color),\r\n          marginTop: \"auto\",\r\n          marginBottom: \"3px\",\r\n          marginRight: \"3px\",\r\n          opacity: 0.5,\r\n        } as React.CSSProperties;\r\n      } else {\r\n        return {\r\n          width: `${size}px`,\r\n          height: `${size}px`,\r\n          backgroundColor: match_color(color),\r\n          marginTop: \"auto\",\r\n          marginBottom: \"3px\",\r\n          marginRight: \"3px\",\r\n          opacity: 1.0,\r\n        } as React.CSSProperties;\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div\r\n        style={boxStyle(is_active_filter)}\r\n        onMouseEnter={() => setHover(true)}\r\n        onMouseLeave={() => setHover(false)}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridUnit;\r\n","export function getRandomNumber(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.random() * (max - min) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","import GridUnit from \"./GridUnit\";\r\nimport { useStoreActions, useStoreState } from \"../../../hooks\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FilterOption } from \"../../../model/types\";\r\ninterface GridChunkProps {\r\n  count: number;\r\n  filter: FilterOption;\r\n  // filter: FilterOption,\r\n  base_color: number;\r\n}\r\n\r\nfunction roundToStep(value: number, step: number) {\r\n  const val = Math.round(value / step) * step;\r\n  let num_cols = val / step;\r\n  const max_num_rows = step;\r\n\r\n  if (value !== undefined && value !== null) {\r\n    let test_arrs = Array.from(Array(num_cols).keys()).map(\r\n      (k: number, i: number) => {\r\n        let num_units = 0;\r\n        if (i == num_cols - 1) {\r\n          num_units = max_num_rows - Math.abs(value - val);\r\n        } else {\r\n          num_units = step;\r\n        }\r\n        const col_data: any = {\r\n          count: num_units,\r\n        };\r\n        return col_data;\r\n      }\r\n    );\r\n    return test_arrs;\r\n  }\r\n}\r\n\r\nconst GridChunk = ({ count, filter, base_color }: GridChunkProps) => {\r\n  const rowContainer = {} as React.CSSProperties;\r\n\r\n  const chunkContainer = {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n  } as React.CSSProperties;\r\n\r\n  const cur_state_filters = useStoreState((state) => state.map_data.filter);\r\n  const set_filter = useStoreActions(\r\n    (actions) => actions.map_data.thunk_set_filter\r\n  );\r\n  const set_row_color = (\r\n    cur_filters: FilterOption[],\r\n    is_hovered: boolean,\r\n    base_color: number\r\n  ) => {\r\n    if (cur_filters.some((f) => f === filter)) {\r\n      // if (cur_filter_val === filter) {\r\n      return 4;\r\n    }\r\n    if (cur_filters.some((f) => f === null)) {\r\n      return base_color;\r\n    } else {\r\n      return is_hovered ? -1 : base_color;\r\n    }\r\n  };\r\n  const [hovered, setHovered] = useState(false);\r\n  useEffect(() => {}, [cur_state_filters]);\r\n\r\n  useEffect(() => {}, [hovered]);\r\n\r\n  const adjust_width = (base_style: React.CSSProperties, num_cols: number) => {\r\n    base_style.width = 15 * num_cols;\r\n    return base_style;\r\n  };\r\n\r\n  let group_columns: any = roundToStep(count, 3);\r\n  const to_chunk = (col_list?: any[]) => {\r\n    if (col_list) {\r\n      return (\r\n        <div\r\n          style={chunkContainer}\r\n          onMouseUp={() => set_filter(filter)}\r\n          // onMouseUp = {()=>set_filter(filter)}\r\n          onMouseEnter={() => setHovered(!hovered)}\r\n          onMouseLeave={() => setHovered(!hovered)}\r\n        >\r\n          {Array.from(Array(col_list.length).keys()).map((r: number) => {\r\n            // console.log(col_list);\r\n            let cur_col: any = col_list[r];\r\n            return (\r\n              <div style={rowContainer} key={r}>\r\n                {Array.from(Array(cur_col.count).keys()).map(\r\n                  (i: number, c: any) => {\r\n                    // console.log(cur_col.count);\r\n                    return (\r\n                      <GridUnit\r\n                        color={set_row_color(\r\n                          cur_state_filters,\r\n                          hovered,\r\n                          base_color\r\n                        )}\r\n                        is_active_filter={cur_state_filters.some(\r\n                          (f) => f === filter\r\n                        )}\r\n                        key={i}\r\n                      />\r\n                    );\r\n                  }\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <>{to_chunk(group_columns)}</>;\r\n};\r\n\r\nexport default GridChunk;\r\n","// import Grid from '@material-ui/core/Grid';\r\nimport { Paragraph, Text } from \"evergreen-ui\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from \"./Containers/SelectorGroup\";\r\nimport SelectorParent from \"./Containers/SelectorParent\";\r\nimport GridChunk from \"./Grid/GridChunk\";\r\nimport GridUnit from \"./Grid/GridUnit\";\r\nimport { useStoreState } from \"../../hooks\";\r\nimport { AuthorDisciplineFilter, FilterGroup } from \"../../model/enums\";\r\n\r\nfunction to_author_enum(\r\n  discipline: string,\r\n  year: string\r\n): AuthorDisciplineFilter {\r\n  const filter_string = discipline + \"_\" + year;\r\n  const filter_enum =\r\n    AuthorDisciplineFilter[\r\n      filter_string as unknown as keyof typeof AuthorDisciplineFilter\r\n    ];\r\n  return filter_enum;\r\n}\r\n\r\nconst YearDiscipline = () => {\r\n  const theme = useTheme();\r\n  const year_data = useStoreState(\r\n    (state) => state.map_data?.computed_student_stats?.year\r\n  );\r\n  // const year_data = useStoreState((state) => state.map_data?.map_stats?.year);\r\n  console.log(year_data);\r\n\r\n  const chunksContainer = {\r\n    // position: 'relative',\r\n    // marginTop: ''\r\n    display: \"flex\",\r\n    height: \"51px\",\r\n  } as React.CSSProperties;\r\n\r\n  const disciplineStyle = {\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"8pt\",\r\n    justifyContent: \"space-between\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n  const rowContainer = {\r\n    display: \"flex\",\r\n    fontSize: \"8pt\",\r\n    height: 20,\r\n    marginTop: -4,\r\n  } as React.CSSProperties;\r\n  const legendContainer = {\r\n    display: \"flex\",\r\n    fontSize: \"8pt\",\r\n    height: 20,\r\n    marginTop: -4,\r\n    paddingTop: \".25em\",\r\n  } as React.CSSProperties;\r\n  //TODO: SAFTER TYPING FOR year_breakdown fields\r\n  const make_year_chunks = (year: string, year_breakdown?: any) => {\r\n    console.log(year_breakdown);\r\n    if (year_breakdown) {\r\n      return (\r\n        <div style={chunksContainer}>\r\n          <GridChunk\r\n            base_color={0}\r\n            count={year_breakdown.ARCHITECTURE ?? 0}\r\n            filter={to_author_enum(\"ARCHITECTURE\", year)}\r\n          />\r\n          <GridChunk\r\n            base_color={1}\r\n            count={year_breakdown.ARTDESIGN ?? 0}\r\n            filter={to_author_enum(\"ARTDESIGN\", year)}\r\n          />\r\n          <GridChunk\r\n            base_color={2}\r\n            count={year_breakdown.LANDSCAPE ?? 0}\r\n            filter={to_author_enum(\"LANDSCAPE\", year)}\r\n          />\r\n          <GridChunk\r\n            base_color={3}\r\n            count={year_breakdown.OTHER ?? 0}\r\n            filter={to_author_enum(\"OTHER\", year)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <SelectorParent>\r\n        <SelectorGroup title={null} size={3} filter={FilterGroup.NONE}>\r\n          <div style={legendContainer}>\r\n            <GridUnit color={0} />\r\n            <Paragraph style={disciplineStyle}>ARCHITECTURE</Paragraph>\r\n          </div>\r\n          <div style={rowContainer}>\r\n            <GridUnit color={1} />\r\n            <Text style={disciplineStyle}>\r\n              <Paragraph style={disciplineStyle}>LANDSCAPE </Paragraph>\r\n            </Text>\r\n          </div>\r\n          <div style={rowContainer}>\r\n            <GridUnit color={2} />\r\n            <Paragraph style={disciplineStyle}>ART + DESIGN</Paragraph>\r\n          </div>\r\n          <div style={rowContainer}>\r\n            <GridUnit color={3} />\r\n            <Paragraph style={disciplineStyle}>OTHER</Paragraph>\r\n          </div>\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"2016\"}\r\n          size={3}\r\n          filter={FilterGroup.STUDENTS_2016}\r\n        >\r\n          {make_year_chunks(\"2016\", year_data[\"2016\"])}\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"2018\"}\r\n          size={3}\r\n          filter={FilterGroup.STUDENTS_2018}\r\n        >\r\n          {make_year_chunks(\"2018\", year_data[\"2018\"])}\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"2020\"}\r\n          size={3}\r\n          filter={FilterGroup.STUDENTS_2020}\r\n        >\r\n          {make_year_chunks(\"2020\", year_data[\"2020\"])}\r\n        </SelectorGroup>\r\n      </SelectorParent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default YearDiscipline;\r\n","// import Grid from '@material-ui/core/Grid';\r\nimport { Link, Paragraph, Text, Icon, ArrowRightIcon } from \"evergreen-ui\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from \"./Containers/SelectorGroup\";\r\nimport SelectorParent from \"./Containers/SelectorParent\";\r\nimport { useStoreActions, useStoreState } from \"../../hooks\";\r\nimport GridChunk from \"./Grid/GridChunk\";\r\nimport {\r\n  AuthorDisciplineFilter,\r\n  MapSubTopic,\r\n  ThemeCategoryFilter,\r\n  FilterGroup,\r\n} from \"../../model/enums\";\r\n\r\ninterface GridChunkProps {\r\n  count: number;\r\n  rows: number;\r\n  cols: number;\r\n  filter: MapSubTopic | AuthorDisciplineFilter | ThemeCategoryFilter | null;\r\n}\r\n\r\nconst Themes = () => {\r\n  const theme = useTheme();\r\n  const total_count = 35;\r\n  const theme_stats = useStoreState(\r\n    (state) => state.map_data?.map_stats?.theme\r\n  );\r\n  // const theme_stats = map_stats.theme;\r\n  return (\r\n    <>\r\n      <SelectorParent>\r\n        <SelectorGroup\r\n          title={\"Equity\"}\r\n          size={4}\r\n          filter={FilterGroup.EQUITY_THEME}\r\n        >\r\n          <GridChunk\r\n            count={theme_stats.EQUITY}\r\n            filter={ThemeCategoryFilter.EQUITY}\r\n            base_color={0}\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Access\"}\r\n          size={4}\r\n          filter={FilterGroup.ACCESS_THEME}\r\n        >\r\n          <GridChunk\r\n            count={theme_stats.ACCESS}\r\n            filter={ThemeCategoryFilter.ACCESS}\r\n            base_color={0}\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Diversity\"}\r\n          size={4}\r\n          filter={FilterGroup.DIVERISTY_THEME}\r\n        >\r\n          <GridChunk\r\n            count={theme_stats.DIVERSITY}\r\n            filter={ThemeCategoryFilter.DIVERSITY}\r\n            base_color={0}\r\n          />\r\n        </SelectorGroup>\r\n      </SelectorParent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Themes;\r\n","import { useStoreActions, useStoreState } from \"../../../hooks\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport { useState, useEffect } from \"react\";\r\nimport GridUnit from \"./GridUnit\";\r\nimport { MapSubTopic } from \"../../../model/enums\";\r\nimport { FilterOption } from \"../../../model/types\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\ninterface GridRowProps {\r\n  count: number;\r\n  filter: FilterOption;\r\n  icon: JSX.Element;\r\n}\r\nfunction filterToToolTip(filter: FilterOption): string {\r\n  let tooltip_title;\r\n  switch (filter) {\r\n    case MapSubTopic.BUILDINGS:\r\n      tooltip_title = \"Buildings\";\r\n      break;\r\n    case MapSubTopic.TRANSPORTATION:\r\n      tooltip_title = \"Transportation\";\r\n      break;\r\n    case MapSubTopic.INFRASTR:\r\n      tooltip_title = \"Infrastructure\";\r\n      break;\r\n    case MapSubTopic.PROPERTY:\r\n      tooltip_title = \"Property\";\r\n      break;\r\n    case MapSubTopic.URBANDEV:\r\n      tooltip_title = \"Urban Development\";\r\n      break;\r\n    case MapSubTopic.WORK:\r\n      tooltip_title = \"Work\";\r\n      break;\r\n    case MapSubTopic.GREENSPACE:\r\n      tooltip_title = \"Greenspace\";\r\n      break;\r\n    case MapSubTopic.POLLUTION:\r\n      tooltip_title = \"Pollution\";\r\n      break;\r\n    case MapSubTopic.HYDROLOGY:\r\n      tooltip_title = \"Hydrology\";\r\n      break;\r\n    case MapSubTopic.GOVERMENT:\r\n      tooltip_title = \"Government\";\r\n      break;\r\n    case MapSubTopic.POLICY:\r\n      tooltip_title = \"Policy\";\r\n      break;\r\n    case MapSubTopic.CIVICENG:\r\n      tooltip_title = \"Civic Engagment\";\r\n      break;\r\n    case MapSubTopic.EDUCATION:\r\n      tooltip_title = \"Education\";\r\n      break;\r\n    case MapSubTopic.HEALTHSAFETY:\r\n      tooltip_title = \"Health\";\r\n      break;\r\n    case MapSubTopic.RACEGEN:\r\n      tooltip_title = \"Race and Gender\";\r\n      break;\r\n    default:\r\n      tooltip_title = \"Default\";\r\n  }\r\n  return tooltip_title;\r\n}\r\nconst GridRow = ({ count, icon, filter }: GridRowProps) => {\r\n  const theme = useTheme();\r\n  const [hovered, setHovered] = useState(false);\r\n  const real_filter = useStoreState((state) => state.map_data.filter);\r\n  const thunk_set_filter = useStoreActions(\r\n    (actions) => actions.map_data.thunk_set_filter\r\n  );\r\n  useEffect(() => {}, [real_filter]);\r\n  useEffect(() => {}, [hovered]);\r\n\r\n  const set_row_color = (cur_filters: FilterOption[], is_hovered: boolean) => {\r\n    if (cur_filters.some((f) => f == filter)) {\r\n      return 4;\r\n    } else {\r\n      return is_hovered ? 4 : 0;\r\n    }\r\n  };\r\n  //T:SET ICON COLOR ON HOVER\r\n  const set_icon_color = (is_active_filter: boolean, is_hovered: boolean) => {\r\n    return is_hovered ? blue[100] : theme.palette.primary;\r\n  };\r\n\r\n  const rowGrid = {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <div\r\n      style={rowGrid}\r\n      onMouseEnter={() => setHovered(!hovered)}\r\n      onMouseLeave={() => setHovered(!hovered)}\r\n      onMouseUp={() => {\r\n        thunk_set_filter(filter);\r\n      }}\r\n    >\r\n      {Array.from(Array(count)).map((r, i) => {\r\n        console.log(count);\r\n        return (\r\n          <GridUnit\r\n            key={i}\r\n            color={set_row_color(real_filter, hovered)}\r\n            is_active_filter={real_filter.some((f) => f == filter)}\r\n          ></GridUnit>\r\n        );\r\n      })}\r\n      {<Tooltip title={filterToToolTip(filter)}>{icon}</Tooltip>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridRow;\r\n","// import Grid from '@material-ui/core/Grid';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from \"./Containers/SelectorGroup\";\r\nimport SelectorParent from \"./Containers/SelectorParent\";\r\nimport GridRow from \"./Grid/GridRow\";\r\nimport { useEffect } from \"react\";\r\nimport { MapSubTopic, FilterGroup } from \"../../model/enums\";\r\n\r\n// import {}\r\n// https://material-ui.com/components/material-icons/\r\n\r\nimport {\r\n  LightbulbIcon,\r\n  HomeIcon,\r\n  ChartIcon,\r\n  BriefcaseIcon,\r\n  TreeIcon,\r\n  SymbolCrossIcon,\r\n  PeopleIcon,\r\n} from \"evergreen-ui\";\r\n\r\nimport {\r\n  DirectionsBus,\r\n  Apartment,\r\n  Opacity,\r\n  Gavel,\r\n  AccountBalance,\r\n  VolumeUp,\r\n  School,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { useStoreState } from \"../../hooks\";\r\n\r\nconst MapLens = () => {\r\n  const theme = useTheme();\r\n  const tag_stats = useStoreState(\r\n    (state) => state.map_data?.computed_student_stats?.subtopic\r\n    // (state) => state.map_data?.map_stats?.subtopic\r\n  );\r\n  useEffect(() => {\r\n    console.log(tag_stats);\r\n  }, [tag_stats]);\r\n  //TODO: FIX REDUNDANT FILTER/TOPIC\r\n  return (\r\n    <>\r\n      <SelectorParent columns={5}>\r\n        <SelectorGroup\r\n          title={\"Built\"}\r\n          size={2}\r\n          filter={FilterGroup.BUILT_TOPIC}\r\n        >\r\n          <GridRow\r\n            filter={MapSubTopic.INFRASTR}\r\n            count={tag_stats.BE?.ENERGY}\r\n            icon={\r\n              <LightbulbIcon color={theme.palette.primary.main} size={12} />\r\n            }\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.BUILDINGS}\r\n            count={tag_stats.BE?.HOUSING}\r\n            icon={<Apartment color={\"primary\"} style={{ fontSize: \"12pt\" }} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.TRANSPORTATION}\r\n            count={tag_stats.BE?.TRANSPORTATION}\r\n            icon={\r\n              <DirectionsBus\r\n                fontSize=\"small\"\r\n                color={\"primary\"}\r\n                style={{ fontSize: \"12pt\" }}\r\n              />\r\n            }\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Economic\"}\r\n          size={3}\r\n          filter={FilterGroup.ECONOMIC_TOPIC}\r\n        >\r\n          <GridRow\r\n            filter={MapSubTopic.PROPERTY}\r\n            count={tag_stats.EE?.COSTOFLIVING}\r\n            icon={<HomeIcon color={theme.palette.primary.main} size={12} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.URBANDEV}\r\n            count={tag_stats.EE?.URBANDEV}\r\n            icon={<ChartIcon color={theme.palette.primary.main} size={12} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.WORK}\r\n            count={tag_stats.EE?.WORK}\r\n            icon={\r\n              <BriefcaseIcon color={theme.palette.primary.main} size={12} />\r\n            }\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Natural\"}\r\n          size={2}\r\n          filter={FilterGroup.NATURAL_TOPIC}\r\n        >\r\n          <GridRow\r\n            filter={MapSubTopic.GREENSPACE}\r\n            count={tag_stats.NE?.GREENSPACE}\r\n            icon={<TreeIcon color={theme.palette.primary.main} size={12} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.POLLUTION}\r\n            count={tag_stats.NE?.POLLUTION}\r\n            icon={<ChartIcon color={theme.palette.primary.main} size={12} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.HYDROLOGY}\r\n            count={tag_stats.NE?.HYDROLOGY}\r\n            icon={<Opacity color={\"primary\"} style={{ fontSize: \"12pt\" }} />}\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Political\"}\r\n          size={3}\r\n          filter={FilterGroup.POLITICAL_TOPIC}\r\n        >\r\n          <GridRow\r\n            filter={MapSubTopic.GOVERMENT}\r\n            count={tag_stats.PE?.GOVERMENT}\r\n            icon={\r\n              <AccountBalance color={\"primary\"} style={{ fontSize: \"12pt\" }} />\r\n            }\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.POLICY}\r\n            count={tag_stats.PE?.POLICY}\r\n            icon={<Gavel color={\"primary\"} style={{ fontSize: \"12pt\" }} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.CIVICENG}\r\n            count={tag_stats.PE?.CIVICENG}\r\n            icon={<VolumeUp color={\"primary\"} style={{ fontSize: \"12pt\" }} />}\r\n          />\r\n        </SelectorGroup>\r\n        <SelectorGroup\r\n          title={\"Social\"}\r\n          size={2}\r\n          filter={FilterGroup.SOCIAL_TOPIC}\r\n        >\r\n          <GridRow\r\n            filter={MapSubTopic.EDUCATION}\r\n            count={tag_stats.SE?.EDUCATION}\r\n            icon={<School color={\"primary\"} style={{ fontSize: \"12pt\" }} />}\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.HEALTHSAFETY}\r\n            count={tag_stats.SE?.HEALTHSAFETY}\r\n            icon={\r\n              <SymbolCrossIcon color={theme.palette.primary.main} size={12} />\r\n            }\r\n          ></GridRow>\r\n          <GridRow\r\n            filter={MapSubTopic.RACEGEN}\r\n            count={tag_stats.SE?.RACEGEN}\r\n            icon={<PeopleIcon color={theme.palette.primary.main} size={12} />}\r\n          />\r\n        </SelectorGroup>\r\n      </SelectorParent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapLens;\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport SelectorSection from \"./SelectorSection\";\r\nimport { Link, Paragraph, Text, Icon, ArrowRightIcon } from \"evergreen-ui\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport YearDiscipline from \"./Selectors/YearDiscipline\";\r\nimport Themes from \"./Selectors/Themes\";\r\nimport MapLens from \"./Selectors/MapLens\";\r\nimport \"../css/toolbar.css\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst Toolbar = () => {\r\n  const theme = useTheme();\r\n  const is_sm = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  const toolbarContainer = {\r\n    height: \"fit-content\",\r\n    // height: '100%',\r\n    // justifyContent: \"space-between\",\r\n    minHeight: \"6rem\",\r\n    maxHeight: \"17rem\",\r\n    display: is_sm ? \"inline-flex\" : \"none\",\r\n  } as React.CSSProperties;\r\n\r\n  const instructions_paragraph = {\r\n    fontFamily: theme.typography.fontFamily,\r\n    color: theme.palette.primary.main,\r\n    fontSize: \"9pt\",\r\n    lineHeight: \"12pt\",\r\n  };\r\n\r\n  const SelectorContainer = withStyles({\r\n    root: {\r\n      // padding: 0,\r\n      height: \"100%\",\r\n      // border: `1px solid ${theme.palette.primary.main}`,\r\n      // paddingLeft: \".5em\",\r\n      paddingRight: \".1em\",\r\n    },\r\n  })(Grid);\r\n\r\n  return (\r\n    <Grid container spacing={0} style={toolbarContainer}>\r\n      <SelectorContainer item xs={12} sm={12} md={6} lg={2} xl={2}>\r\n        <SelectorSection title=\"SELECT & FILTER\">\r\n          <Text style={instructions_paragraph}>\r\n            <Paragraph size={300} style={instructions_paragraph}>\r\n              Click on titles to view main categories. Click on rectangle blocks\r\n              to filter by subcategories.\r\n            </Paragraph>\r\n          </Text>\r\n        </SelectorSection>\r\n      </SelectorContainer>\r\n      <SelectorContainer item xs={12} sm={12} md={6} lg={3} xl={4}>\r\n        <SelectorSection title=\"YEAR & DISCIPLINE\">\r\n          <YearDiscipline></YearDiscipline>\r\n        </SelectorSection>\r\n      </SelectorContainer>\r\n      <SelectorContainer item xs={12} sm={12} md={6} lg={3} xl={3}>\r\n        <SelectorSection title=\"TOPICS\">\r\n          <MapLens></MapLens>\r\n        </SelectorSection>\r\n      </SelectorContainer>\r\n      <SelectorContainer item xs={12} sm={12} md={6} lg={3} xl={2}>\r\n        <SelectorSection title=\"THEMES\">\r\n          <Themes></Themes>\r\n        </SelectorSection>\r\n      </SelectorContainer>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n\r\n//     {/* <Grid item xs = {3} style = {gridSect}>\r\n//         <div style = {{paddingRight: '2em'}}>\r\n\r\n//         {/* <SelectorSection title = \" f \"> */}\r\n//         <Text>\r\n\r\n//         <Link style = {linkStyle} >WAYS TO EXPEREINCE THIS\r\n//             <Icon icon = {ArrowRightIcon} size  = {9}/>\r\n//         </Link>\r\n//         <Paragraph style = {instructions_paragraph}>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC,\r\n//             making it over 2000 years old.\r\n//         </Paragraph>\r\n//         </Text>\r\n// </div>\r\n//     {/* </SelectorSection> */}\r\n// </Grid> */}\r\n","import { useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Text } from \"evergreen-ui\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport \"../css/App.css\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nfunction Title() {\r\n  const theme = useTheme();\r\n  const is_md = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const titleHeader = {\r\n    fontSize: \"xxx-large\",\r\n    fontFamily: theme.typography.fontFamily,\r\n  } as React.CSSProperties;\r\n\r\n  const titleSubHeader = {\r\n    fontSize: \"xx-large\",\r\n    fontFamily: theme.typography.fontFamily,\r\n    paddingBottom: \"1em\",\r\n    paddingTop: \"1em\",\r\n  } as React.CSSProperties;\r\n  const titleContainer = {\r\n    paddingBottom: \"1em\",\r\n    paddingTop: \".5em\",\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0} style={titleContainer}>\r\n      <Grid item xs={2} style={{ display: is_md ? \"flex\" : \"none\" }}>\r\n        <div></div>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        <div style={titleContainer}>\r\n          <Text style={titleHeader}>DIY CARTOGRAPHY: </Text>\r\n        </div>\r\n        <div>\r\n          <Text style={titleSubHeader}>\r\n            MAPPING THE IMPACT OF URBAN DEVELOPMENT\r\n          </Text>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import { useEffect } from \"react\";\nimport \"./css/App.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Sidebar from \"./Components/Sidebar\";\nimport MapGallery from \"./Components/MapGallery\";\nimport Timeline from \"./Components/Timeline\";\nimport { useStoreActions } from \"./hooks\";\nimport Toolbar from \"./Components/Toolbar\";\nimport Title from \"./Components/Title\";\nimport { defaultTheme } from \"evergreen-ui\";\nimport { ThemeProvider } from \"evergreen-ui\";\nimport { merge } from \"lodash\";\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\n// const My\n\n// const test_data =\n// https://docs.google.com/spreadsheets/d/1-S8EkLYsknYoFWSynVeMQCi6Gf9PoV9A5ezzICXamJA/edit?usp=sharing\n// https://docs.google.com/spreadsheets/d/e/2PACX-1vShkIFNo43AJw8tdtdq4vsa40okE7v4IJbbXUOuIsLpnCYZMaQnPH9k3_YFhm814s2oa9VrVkQbzPNa/pubhtml\nconst App = () => {\n  const fetch_app_data = useStoreActions(\n    (actions) => actions.map_data.fetch_student_sheets\n  );\n  const fetch_event_spreadsheet = useStoreActions(\n    (actions) => actions.map_data.fetch_event_spreadsheet\n  );\n  const fetch_all_spreedsheets = useStoreActions(\n    (actions) => actions.map_data.request_all_spreadsheets\n  );\n  const myCustomTheme = merge({}, defaultTheme, {\n    typography: {\n      fontFamilies: {\n        display: \"Audimat\",\n        ui: \"Audimat\",\n        mono: \"Audimat\",\n      },\n    },\n  });\n  useEffect(() => {\n    fetch_event_spreadsheet();\n    fetch_app_data();\n    fetch_all_spreedsheets();\n  }, []);\n\n  return (\n    <ThemeProvider value={myCustomTheme}>\n      <Grid container spacing={0}>\n        <Grid item md={12} lg={12}>\n          <Toolbar />\n        </Grid>\n        <Grid\n          container\n          spacing={0}\n          style={{ paddingTop: \"1em\", paddingBottom: \"2em\" }}\n        >\n          <Grid item md={12} lg={12}>\n            <Title />\n          </Grid>\n          <Grid item md={12} lg={2}>\n            <Sidebar />\n          </Grid>\n          <Grid item md={12} lg={10}>\n            <MapGallery />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} style={{ height: \"25%\", padding: 0 }}>\n          <Timeline />\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n// import createMuiTheme from \"./custom_theme\";\r\n\r\n// export const theme = createMuiTheme;\r\n// main_0: \"#335761\",\r\n// main_1: \"#5794a5\",\r\n// main_2: \"#8ab4c0\",\r\n// main_3: \"#bcd4db\",\r\n// main_4: \"#ddeaed\",\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      dark: \"#335761\",\r\n      main: \"#5794a5\",\r\n      light: \"#bcd4db\",\r\n    },\r\n    //light\r\n    secondary: {\r\n      dark: \"#bcd4db\",\r\n      main: \"#ddeaed\",\r\n    },\r\n  },\r\n  //   cu\r\n  spacing: (factor) => `${0.25 * factor}rem`,\r\n  overrides: {\r\n    MuiGrid: {\r\n      root: {\r\n        margin: \"0px\",\r\n        // display: 'flex',\r\n      },\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"Audimat\",\r\n  },\r\n});\r\n// #8ab4c0 medium dark\r\n// #8ab4c0 medium dark\r\n// #bcd4db medium light\r\n// #ddeaed light\r\n\r\n// import { createMuiTheme } from \"@material-ui/core\";\r\n// export const theme = createMuiTheme({\r\n//     palette:{\r\n//         primary: {\r\n//             light: blue[100],\r\n//             //medium_light?\r\n//             main: blue[300],\r\n//             //medium_dark?\r\n//             dark: blue[700],\r\n//         }\r\n//     },\r\n//     }\r\n// })\r\n","//tutorial on fp-ts: https://dev.to/gcanti/getting-started-with-fp-ts-either-vs-validation-5eja\r\n// https://rlee.dev/practical-guide-to-fp-ts-part-5\r\n// https://github.com/zanza00/learn-fp-ts/blob/master/examples/taskeither/with-io-ts/src/example.ts\r\n// https://codesandbox.io/s/array-of-validators-vxgj6?from-embed=&file=/src/arrayOfValidators.ts:197-244\r\n// https://github.com/inato/fp-ts-cheatsheet\r\nimport { getSemigroup } from \"fp-ts/lib/NonEmptyArray\";\r\nimport { NonEmptyArray } from \"fp-ts/lib/NonEmptyArray\";\r\nimport { pipe } from \"fp-ts/lib/function\";\r\nimport { sequenceT } from \"fp-ts/lib/Apply\";\r\nimport { Predicate } from \"fp-ts/lib/function\";\r\nimport { sequence } from \"fp-ts/lib/Array\";\r\n// import { sequenceS } from \"fp-ts/lib/Apply\";\r\nimport * as A from \"fp-ts/lib/Array\";\r\nimport * as E from \"fp-ts/lib/Either\";\r\nimport type { RawStudentRowValues } from \"./sub_models/sheet_data_models\";\r\nimport { fold } from \"fp-ts/lib/Either\";\r\nimport { ActionCreator, ThunkCreator } from \"easy-peasy\";\r\n\r\nimport {\r\n  Either,\r\n  left,\r\n  right,\r\n  mapLeft,\r\n  getApplicativeValidation,\r\n} from \"fp-ts/lib/Either\";\r\n\r\nfunction lift<E, A>(\r\n  check: (a: A) => Either<E, A>\r\n): (a: A) => Either<NonEmptyArray<E>, A> {\r\n  return (a) =>\r\n    pipe(\r\n      check(a),\r\n      mapLeft((a) => [a])\r\n    );\r\n}\r\n\r\nconst minLength = (\r\n  s: RawStudentRowValues\r\n): Either<string, RawStudentRowValues> =>\r\n  s.title.length >= 100 ? right(s) : left(\"at least 6 characters\");\r\n\r\nconst minLengthV = lift(minLength);\r\n\r\nexport function validate_student_row(\r\n  row: RawStudentRowValues\r\n): Either<NonEmptyArray<string>, RawStudentRowValues> {\r\n  let test = pipe(\r\n    sequenceT(getApplicativeValidation(getSemigroup<string>()))(\r\n      minLengthV(row as RawStudentRowValues)\r\n    ),\r\n    E.map((a) => row)\r\n  );\r\n  //   let t2 = fold(replyUnauthorized(test), replyToken(test));\r\n  return test;\r\n}\r\n\r\nexport type ValidationError = NonEmptyArray<string>;\r\n\r\nexport type ValidationResult<T> = E.Either<ValidationError, T>;\r\n\r\nexport type ValidationsResult<T> = E.Either<ValidationError, T>;\r\n\r\nexport interface Validator<T> {\r\n  (x: T): ValidationResult<T>;\r\n}\r\n\r\nconst applicativeV = E.getApplicativeValidation(getSemigroup<string>());\r\n\r\nexport const validateStudentData: (\r\n  validations: Array<Validator<RawStudentRowValues>>,\r\n  value: RawStudentRowValues\r\n  //   value: unknown\r\n) => ValidationsResult<RawStudentRowValues> = (validations, value) =>\r\n  validations.length\r\n    ? pipe(\r\n        sequence(applicativeV)(validations.map((afb) => afb(value))),\r\n        E.map(() => value as RawStudentRowValues)\r\n      )\r\n    : E.right(value as RawStudentRowValues);\r\n\r\nconst stringLengthPredicate: Predicate<RawStudentRowValues> = (v) =>\r\n  v.title.length > 4;\r\n//   typeof v === \"string\" && v.length > 4;\r\n\r\nexport const lengthAtLeastFour: Validator<RawStudentRowValues> =\r\n  E.fromPredicate(stringLengthPredicate, () => [\r\n    \"value must be a string of at least 5 characters\",\r\n  ]);\r\n\r\nconst requiredLetterPredicate: Predicate<RawStudentRowValues> = (v) =>\r\n  v.title.includes(\"t\");\r\n// typeof v == RawStudentRowValues && v.i\r\n\r\nexport const hasLetterT: Validator<RawStudentRowValues> = E.fromPredicate(\r\n  requiredLetterPredicate,\r\n  () => ['value must be a string that includes the letter \"t\"']\r\n);\r\n\r\nexport function handle_validation(\r\n  row: RawStudentRowValues,\r\n  validators: Validator<RawStudentRowValues>[],\r\n  on_error: ActionCreator<ValidationError>,\r\n  on_success: ThunkCreator<RawStudentRowValues>\r\n) {\r\n  let test = validateStudentData(validators, row);\r\n  console.log(\"got to test validate func\");\r\n  const on_error_container = (n: ValidationError) => {\r\n    on_error(n);\r\n    console.error(\"got error\");\r\n    console.log(n);\r\n  };\r\n  const on_sucess_container = (n: RawStudentRowValues) => {\r\n    on_success(n);\r\n    // actions.my_test_action(n);\r\n    console.log(\"got good\");\r\n    console.log(n);\r\n  };\r\n  let validation_sequence = E.bimap(on_error_container, on_sucess_container);\r\n  validation_sequence(test);\r\n}\r\n\r\n// console.log(validateName(validations, \"sim\"));\r\n// {left: ['value must be a string that includes the letter \"t\"', 'value must be a string of at least 4 characters']}\r\n\r\n// console.log(validateName(validations, \"timmy\"));\r\n// {right: 'timmy'}\r\n\r\n// export interface RawStudentRowValues {\r\n//     title: string;\r\n//     info: string;\r\n//     author: string;\r\n//     topic: string;\r\n//     discipline: string;\r\n//     theme: string;\r\n//     series0101: string;\r\n//     series0102: string;\r\n//     series0201: string;\r\n//     series0202: string;\r\n//     series0301: string;\r\n//     series0302: string;\r\n//     // photo1: string;\r\n//     // photo2: string;\r\n//     // photo3: string;\r\n//     // photo4: string;\r\n//     // photo5: string;\r\n//     thumbnail: string;\r\n//     year: string;\r\n//     subtopic: string;\r\n//   }\r\n// console.log(validateName(validations, \"sim\"));\r\n// {left: ['value must be a string that includes the letter \"t\"', 'value must be a string of at least 4 characters']}\r\n\r\n// console.log(validateName(validations, \"timmy\"));\r\n// {right: 'timmy'}\r\n\r\n// function replyUnauthorized(\r\n//   val: E.Either<NonEmptyArray<string>, RawStudentRowValues>\r\n// ): (error: Error) => string {\r\n//   return (error) => \"it was unauthorized\";\r\n// }\r\n\r\n// function replyToken(\r\n//   val: E.Either<NonEmptyArray<string>, RawStudentRowValues>\r\n// ): (token: string) => RawStudentRowValues {\r\n//   return (token) => token;\r\n// }\r\n","import {\r\n  Action,\r\n  action,\r\n  thunk,\r\n  Thunk,\r\n  debug,\r\n  Computed,\r\n  computed,\r\n} from \"easy-peasy\";\r\nimport GetSheetDone from \"get-sheet-done\";\r\nimport { NonEmptyArray } from \"fp-ts/lib/NonEmptyArray\";\r\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\";\r\nimport { pipe } from \"fp-ts/lib/function\";\r\nimport { Either, mapLeft } from \"fp-ts/lib/Either\";\r\nimport {\r\n  AuthorDisciplineFilter,\r\n  MapSubTopic,\r\n  ThemeCategoryFilter,\r\n  EventLevel,\r\n  GalleryFilterType,\r\n  FilterGroup,\r\n  Topic,\r\n} from \"./enums\";\r\nimport type { MapStats } from \"./sub_models/student_stats\";\r\nimport type { RawStudentRowValues } from \"./sub_models/sheet_data_models\";\r\nimport type { FilterOption } from \"./types\";\r\nimport {\r\n  handle_validation,\r\n  lengthAtLeastFour,\r\n  ValidationError,\r\n} from \"./validation\";\r\n\r\n/**\r\n  tags can not be an object due to the Gallery Image API,\r\n  but it will accept an array of any type. So we get around \r\n  this by putting our metadata object \r\n  into an array. There\r\n  will never be more than one metadata object.\r\n*/\r\n\r\n// seperate out time range events from single date events\r\n\r\nexport interface GalleryImage {\r\n  src: string;\r\n  thumbnail: string;\r\n  isSelected: boolean;\r\n  caption: string;\r\n  thumbnailWidth: number;\r\n  thumbnailHeight: number;\r\n  tags: MapMetadata[];\r\n}\r\n\r\nexport interface MapMetadata {\r\n  discipline: AuthorDisciplineFilter;\r\n  subtopic: MapSubTopic;\r\n  theme: ThemeCategoryFilter;\r\n  year: any;\r\n}\r\n\r\n//TODO: EXPLAIN WHY THIS IS NECESSARY\r\nexport interface YearSection {\r\n  years: string[];\r\n  discipline: string[];\r\n}\r\n\r\n/**\r\n * Generic GoogleSheet with type argument \r\n   which we use only when fetching our sheets.\r\n   Currently te\r\n */\r\n//TODO: FILLOUT TYPES\r\nexport interface GoolgeSheet<T> {\r\n  data: Array<T>;\r\n  title: string;\r\n  updated: string;\r\n}\r\n\r\nexport interface Student {\r\n  author: string;\r\n  year: string;\r\n  title: string;\r\n  info: string;\r\n  discipline: AuthorDisciplineFilter;\r\n  topic: Topic;\r\n  subtopic: MapSubTopic;\r\n  theme: ThemeCategoryFilter;\r\n  gallery_images: GalleryImage[];\r\n  lightbox_images: GalleryImage[];\r\n}\r\n\r\nexport interface LightBoxContent {\r\n  images: PhotoInfo[];\r\n  description: string;\r\n  author: string;\r\n  title: string;\r\n}\r\n\r\nexport interface PhotoInfo {\r\n  source: string;\r\n  kind: string;\r\n}\r\n\r\nexport interface EventRowValues {\r\n  start: Date;\r\n  end: Date;\r\n  title: string;\r\n  info: string;\r\n  tags: string;\r\n  category: EventLevel;\r\n}\r\n//TODO: REMOVE THIS\r\nexport interface EventData {\r\n  title: string;\r\n}\r\n\r\nexport interface TimelineData {\r\n  national: TimeSeries[];\r\n  state: TimeSeries[];\r\n  city: TimeSeries[];\r\n  international: TimeSeries[];\r\n  NA: TimeSeries[];\r\n}\r\n\r\n//TODO: REMOVE\r\nexport interface FilterObj {\r\n  filter_type: GalleryFilterType;\r\n  filter: FilterOption;\r\n}\r\n\r\nexport interface FilterResult {\r\n  filter_func: any;\r\n  filters: FilterOption[];\r\n}\r\n\r\nexport interface MapDataModel {\r\n  //STATEFUL UI DATA (TOOLBAR)\r\n  doc_key: string;\r\n  filter: FilterOption[];\r\n  group_filter: FilterGroup;\r\n  filter_function: any;\r\n  loaded: boolean;\r\n  active_lightbox: LightBoxContent;\r\n  students: Student[];\r\n\r\n  //TIMELINE\r\n  timeline_series: TimelineData;\r\n\r\n  //GALLERY\r\n  all_images: GalleryImage[];\r\n  active_images: GalleryImage[];\r\n  gallery_images: GalleryImage[];\r\n\r\n  //COMPUTED FROM EXTERNAL DATA\r\n  computed_active_images: Computed<MapDataModel, GalleryImage[]>;\r\n  test_gallery_images: Computed<MapDataModel, GalleryImage[]>;\r\n  computed_student_stats: Computed<MapDataModel, MapStats>;\r\n  map_stats: MapStats | undefined;\r\n\r\n  //THUNKS - FETCH EXTERNAL\r\n  fetch_event_spreadsheet: Thunk<MapDataModel>;\r\n  fetch_student_sheets: Thunk<MapDataModel>;\r\n  request_all_spreadsheets: Thunk<MapDataModel>;\r\n\r\n  //THUNKS - UI\r\n  thunk_set_filter: Thunk<MapDataModel, FilterOption>;\r\n  process_student: Thunk<MapDataModel, RawStudentRowValues>;\r\n  process_raw_student_sheets: Thunk<MapDataModel, RawStudentRowValues[][]>;\r\n\r\n  //STORE RAW GOOGLE SHEETS INFO FOR DEBUGGING\r\n  raw_student_sheets: RawStudentRowValues[][];\r\n  map_spreadsheet: RawStudentRowValues[];\r\n  event_spreadsheet: EventRowValues[];\r\n  add_student_sheet_raw_data: Action<MapDataModel, RawStudentRowValues[]>;\r\n  set_event_spreadsheet: Action<MapDataModel, EventRowValues[]>;\r\n\r\n  //VALIDATION\r\n  validation_errors: ValidationError[];\r\n\r\n  //SETTERS\r\n  add_valid_student: Action<MapDataModel, Student>;\r\n  set_group_filter: Action<MapDataModel, FilterGroup>;\r\n  set_filter_function: Action<MapDataModel, any>;\r\n  set_map_spreadsheet: Action<MapDataModel, RawStudentRowValues[]>;\r\n  set_map_stats: Action<MapDataModel, MapStats>;\r\n  set_all_images: Action<MapDataModel, GalleryImage[]>;\r\n  set_gallery_images: Action<MapDataModel, GalleryImage[]>;\r\n  set_active_images: Action<MapDataModel, GalleryImage[]>;\r\n  set_timeline_series: Action<MapDataModel, TimelineData>;\r\n  set_active_filter: Action<MapDataModel, FilterOption[]>;\r\n  reset_gallery: Action<MapDataModel>;\r\n  set_lightbox_content: Action<MapDataModel, GalleryImage>;\r\n  set_loaded: Action<MapDataModel, boolean>;\r\n  filter_gallery_2: Action<MapDataModel, FilterResult>;\r\n  set_validation_errors: Action<MapDataModel, ValidationError[]>;\r\n  add_validation_error: Action<MapDataModel, ValidationError>;\r\n}\r\n\r\n//______________________\r\ntype ImagePromise = Promise<HTMLImageElement>;\r\n\r\nconst empty_nat: TimeSeries[] = [];\r\nconst empty_state: TimeSeries[] = [];\r\nconst empty_city: TimeSeries[] = [];\r\nconst empty_international: TimeSeries[] = [];\r\nconst empty_NA: TimeSeries[] = [];\r\nconst DOC_KEY = \"1-S8EkLYsknYoFWSynVeMQCi6Gf9PoV9A5ezzICXamJA\";\r\n\r\nconst initial_empty_timeline: TimelineData = {\r\n  national: empty_nat,\r\n  state: empty_state,\r\n  city: empty_city,\r\n  international: empty_international,\r\n  NA: empty_NA,\r\n};\r\n\r\nconst empty_photo: PhotoInfo[] = [];\r\n\r\nconst lb_initial: LightBoxContent = {\r\n  images: empty_photo,\r\n  description: \"default\",\r\n  title: \"string\",\r\n  author: \"some author\",\r\n};\r\n\r\nconst init_map_stats: MapStats = {\r\n  year: {},\r\n  subtopic: {},\r\n  theme: {},\r\n};\r\n\r\nconst row_to_student = (\r\n  row: RawStudentRowValues,\r\n  gallery_images: GalleryImage[]\r\n): Student => {\r\n  let student: Student = {\r\n    author: row.author,\r\n    year: row.year,\r\n    title: row.title,\r\n    info: row.info,\r\n    discipline:\r\n      AuthorDisciplineFilter[\r\n        row.discipline as unknown as keyof typeof AuthorDisciplineFilter\r\n      ],\r\n    topic: Topic[row.topic as unknown as keyof typeof Topic],\r\n    theme:\r\n      ThemeCategoryFilter[\r\n        row.theme as unknown as keyof typeof ThemeCategoryFilter\r\n      ],\r\n    subtopic: MapSubTopic[row.subtopic as unknown as keyof typeof MapSubTopic],\r\n    gallery_images: gallery_images,\r\n    lightbox_images: gallery_images,\r\n  };\r\n  console.log(student.subtopic);\r\n  return student;\r\n};\r\n\r\nfunction create_gallery_images_for_student(\r\n  single_row: RawStudentRowValues,\r\n  series_number: string\r\n): GalleryImage {\r\n  const keyTyped = series_number as keyof typeof single_row;\r\n  let gallery_image = {\r\n    src: single_row[keyTyped],\r\n    // src: single_row.series0101,\r\n    thumbnail: single_row[keyTyped],\r\n    // thumbnail: single_row.thumbnail,\r\n    isSelected: false,\r\n    //TODO: SET UP CAPTIONS\r\n    caption: \"Im in this other file\",\r\n    thumbnailWidth: 95,\r\n    thumbnailHeight: 174,\r\n    tags: [\r\n      {\r\n        discipline:\r\n          AuthorDisciplineFilter[\r\n            single_row.discipline as unknown as keyof typeof AuthorDisciplineFilter\r\n          ],\r\n        subtopic:\r\n          MapSubTopic[\r\n            // (single_row.tags + \"_\" +\r\n            single_row.subtopic as unknown as keyof typeof MapSubTopic\r\n          ],\r\n        theme:\r\n          ThemeCategoryFilter[\r\n            single_row.theme as unknown as keyof typeof ThemeCategoryFilter\r\n          ],\r\n        year: single_row.year,\r\n      },\r\n    ],\r\n  };\r\n  // );\r\n  return gallery_image;\r\n}\r\n\r\nconst map_data: MapDataModel = {\r\n  doc_key: \"1-S8EkLYsknYoFWSynVeMQCi6Gf9PoV9A5ezzICXamJA\",\r\n  filter: [],\r\n  students: [],\r\n  group_filter: FilterGroup.NONE,\r\n  active_images: [],\r\n  filter_function: (gi: GalleryImage) => true,\r\n  computed_active_images: computed((state) => {\r\n    console.log(state.filter_function);\r\n    let active = state.test_gallery_images.filter(state.filter_function);\r\n    console.log(active);\r\n    return active;\r\n  }),\r\n  raw_student_sheets: [],\r\n  gallery_images: [],\r\n  all_images: [],\r\n  timeline_series: initial_empty_timeline,\r\n  loaded: false,\r\n  active_lightbox: lb_initial,\r\n  map_spreadsheet: [],\r\n  map_stats: init_map_stats,\r\n  event_spreadsheet: [],\r\n  validation_errors: [],\r\n  //creates a new student\r\n  add_valid_student: action((state, payload) => {\r\n    state.students.push(payload);\r\n  }),\r\n  add_student_sheet_raw_data: action((state, payload) => {\r\n    state.raw_student_sheets.push(payload);\r\n  }),\r\n  computed_student_stats: computed((state) => {\r\n    function topic_to_array_of_subtopics(topic: Topic): MapSubTopic[] {\r\n      let topic_subtopics: MapSubTopic[] = [];\r\n      switch (topic) {\r\n        case Topic.BE:\r\n          topic_subtopics = [\r\n            MapSubTopic.INFRASTR,\r\n            MapSubTopic.BUILDINGS,\r\n            MapSubTopic.TRANSPORTATION,\r\n          ];\r\n          break;\r\n        case Topic.EE:\r\n          topic_subtopics = [\r\n            MapSubTopic.WORK,\r\n            MapSubTopic.PROPERTY,\r\n            MapSubTopic.URBANDEV,\r\n          ];\r\n          break;\r\n        case Topic.NE:\r\n          topic_subtopics = [\r\n            MapSubTopic.GREENSPACE,\r\n            MapSubTopic.POLLUTION,\r\n            MapSubTopic.HYDROLOGY,\r\n          ];\r\n          break;\r\n        case Topic.PE:\r\n          topic_subtopics = [\r\n            MapSubTopic.CIVICENG,\r\n            MapSubTopic.GOVERMENT,\r\n            MapSubTopic.POLICY,\r\n          ];\r\n          // topic_subtopics = [MapSubTopic.CIVICENG, MapSubTopic.GOV, MapSubTopic.POLICY];\r\n          break;\r\n        case Topic.SE:\r\n          topic_subtopics = [\r\n            MapSubTopic.EDUCATION,\r\n            MapSubTopic.HEALTHSAFETY,\r\n            MapSubTopic.RACEGEN,\r\n          ];\r\n          break;\r\n      }\r\n      return topic_subtopics;\r\n    }\r\n    function object_values_to_array_lengths(obj: any): any {\r\n      let keys = Object.keys(obj);\r\n      keys.forEach((key) => {\r\n        obj[key] = obj[key].length;\r\n      });\r\n      return obj;\r\n    }\r\n    function get_year_breakdown(students: Student[]) {\r\n      let year_groups = groupBy(state.students, \"year\");\r\n      var new_obj = {};\r\n      for (const [key, value] of Object.entries(year_groups)) {\r\n        let test = groupBy(value as Student[], \"discipline\");\r\n        test = object_values_to_array_lengths(test);\r\n        (new_obj as any)[key] = test;\r\n        console.log(new_obj);\r\n      }\r\n      return new_obj;\r\n    }\r\n    const discipline_stats = get_year_breakdown(state.students);\r\n    const theme_stats = object_values_to_array_lengths(\r\n      groupBy(state.students, \"theme\")\r\n    );\r\n    function get_topic_breakdown(students: Student[]) {\r\n      let topic_groups = groupBy(state.students, \"topic\");\r\n      var student_map_stats = {};\r\n      for (const [key, value] of Object.entries(topic_groups)) {\r\n        let subtopic_group = groupBy(value as Student[], \"subtopic\");\r\n        let all_subtopics = topic_to_array_of_subtopics(\r\n          Topic[key as unknown as keyof typeof Topic]\r\n        );\r\n\r\n        subtopic_group = object_values_to_array_lengths(subtopic_group);\r\n        all_subtopics.forEach((st) => {\r\n          if (!(st in subtopic_group)) {\r\n            (subtopic_group as any)[st] = 0;\r\n          }\r\n        });\r\n        (student_map_stats as any)[key] = subtopic_group;\r\n      }\r\n      return student_map_stats;\r\n    }\r\n\r\n    const subtopic_stats = get_topic_breakdown(state.students);\r\n    // console.log(test);\r\n    const final_obj = {\r\n      year: discipline_stats,\r\n      subtopic: subtopic_stats,\r\n      theme: theme_stats,\r\n    };\r\n\r\n    console.log(final_obj);\r\n    let year_groups = groupBy(state.students, \"year\");\r\n    console.log(year_groups);\r\n\r\n    // console.log(test_res);\r\n    // // let theme_stats = test_res as ThemeStats;\r\n    // let map_stats: MapStats = {\r\n    //   year: test_res,\r\n    //   tag: test_res,\r\n    //   theme: test_res,\r\n    // };\r\n    return final_obj;\r\n  }),\r\n  // async (actions, payload, { getState, getStoreState }) => {\r\n  process_student: thunk(async (actions, payload, { getState }) => {\r\n    let first_image = create_gallery_images_for_student(payload, \"series0101\");\r\n    let image_request = get_image(first_image);\r\n    image_request.then((res: HTMLImageElement) => {\r\n      first_image.thumbnailWidth = res.width * 0.1;\r\n      first_image.thumbnailHeight = res.height * 0.1;\r\n      let student = row_to_student(payload, [first_image]);\r\n      actions.add_valid_student(student);\r\n    });\r\n  }),\r\n  process_raw_student_sheets: thunk(async (actions, payload, { getState }) => {\r\n    const validations = [lengthAtLeastFour];\r\n    payload.forEach((sheet: RawStudentRowValues[]) => {\r\n      sheet.forEach((row: RawStudentRowValues) => {\r\n        handle_validation(\r\n          row,\r\n          validations,\r\n          actions.add_validation_error,\r\n          actions.process_student\r\n        );\r\n      });\r\n    });\r\n  }),\r\n  set_filter_function: action((state, payload) => {\r\n    console.log(\"setting filter func\");\r\n    state.filter_function = payload;\r\n  }),\r\n  test_gallery_images: computed((state) => {\r\n    let all_images: GalleryImage[] = [];\r\n    state.students.forEach((student) => {\r\n      all_images.push(...student.gallery_images);\r\n    });\r\n    return all_images;\r\n  }),\r\n  // add_validation_error: action(())\r\n  add_validation_error: action((state, payload) => {\r\n    state.validation_errors.push(payload);\r\n  }),\r\n  set_validation_errors: action((state, payload) => {\r\n    state.validation_errors = payload;\r\n  }),\r\n  request_all_spreadsheets: thunk(async (actions) => {\r\n    console.log(\"requesting all my spreadhsheets\");\r\n  }),\r\n  // resolve_event_spreadsheet: action((state, payload){\r\n  fetch_event_spreadsheet: thunk(async (actions) => {\r\n    get_sheet<EventRowValues>(DOC_KEY, 1)\r\n      .then((event_sheet: GoolgeSheet<EventRowValues>) => {\r\n        const typed_event_rows = type_event_rows(event_sheet.data);\r\n        actions.set_event_spreadsheet(typed_event_rows);\r\n        const timeline_series = make_time_series(typed_event_rows);\r\n        actions.set_timeline_series(timeline_series);\r\n      })\r\n      .catch((err: any) => {\r\n        console.error(`Error fetching DOC_KEY ${DOC_KEY}`);\r\n      });\r\n  }),\r\n  fetch_student_sheets: thunk(async (actions, _payload, { getState }) => {\r\n    let test_2016 = get_map_sheet(DOC_KEY, 2);\r\n    let student_sheet_requests = [test_2016];\r\n    // let student_sheet_requests = [test_2018, test_2020, test_2016];\r\n    Promise.all(student_sheet_requests).then(\r\n      (raw_student_rows: (void | RawStudentRowValues[])[]) => {\r\n        raw_student_rows.forEach((sheet_payload) => {\r\n          if (Array.isArray(sheet_payload)) {\r\n            actions.add_student_sheet_raw_data(\r\n              sheet_payload as RawStudentRowValues[]\r\n            );\r\n          } else {\r\n            console.error(\"did not get map row array\");\r\n          }\r\n        });\r\n        // const map_stats = generate_map_stats(map_data.maps);\r\n        // actions.set_map_stats(map_stats);\r\n        // actions.set_map_spreadsheet(map_data.maps);\r\n        // actions.set_loaded(true);\r\n        actions.process_raw_student_sheets(getState().raw_student_sheets);\r\n      }\r\n    );\r\n  }),\r\n  set_map_spreadsheet: action((state, map_rows) => {\r\n    state.map_spreadsheet = map_rows;\r\n  }),\r\n  set_map_stats: action((state, map_stats_obj) => {\r\n    state.map_stats = map_stats_obj;\r\n  }),\r\n  set_event_spreadsheet: action((state, event_rows) => {\r\n    state.event_spreadsheet = event_rows;\r\n  }),\r\n  set_all_images: action((state, payload) => {\r\n    state.all_images = payload;\r\n  }),\r\n  set_gallery_images: action((state, payload) => {\r\n    state.gallery_images = payload;\r\n  }),\r\n  set_active_images: action((state, payload) => {\r\n    state.active_images = payload;\r\n  }),\r\n  filter_gallery_2: action((state, filter_result) => {\r\n    if (arraysEqual(filter_result.filters, debug(state.filter))) {\r\n      state.filter = [];\r\n      state.active_images = state.gallery_images;\r\n      console.log(\"got the same filte \");\r\n    } else {\r\n      state.active_images = state.gallery_images.filter(\r\n        filter_result.filter_func\r\n      );\r\n      state.filter = filter_result.filters;\r\n    }\r\n  }),\r\n  set_timeline_series: action((state, timeline_series) => {\r\n    state.timeline_series = timeline_series;\r\n  }),\r\n  set_group_filter: action((state, group_filter) => {\r\n    console.log(\"setting group filter\", group_filter);\r\n    if (state.group_filter === group_filter) {\r\n      console.log(\"GOT SAME\");\r\n      state.group_filter = FilterGroup.NONE;\r\n      state.filter = [];\r\n    } else {\r\n      state.group_filter = group_filter;\r\n    }\r\n  }),\r\n  thunk_set_filter: thunk((actions, filter) => {\r\n    console.log(\"doing thunk set filter\");\r\n    let group_options = Object.values(FilterGroup);\r\n\r\n    if (group_options.includes(filter as FilterGroup)) {\r\n      let group_filter = get_group_filter(filter);\r\n      actions.set_filter_function(group_filter.filter_func);\r\n      actions.filter_gallery_2(group_filter);\r\n      actions.set_group_filter(filter as FilterGroup);\r\n    } else {\r\n      let single_filter = get_single_filter(filter);\r\n      actions.set_filter_function(single_filter.filter_func);\r\n      actions.filter_gallery_2(single_filter);\r\n    }\r\n  }),\r\n  reset_gallery: action((state) => {\r\n    state.active_images = state.gallery_images;\r\n  }),\r\n  set_active_filter: action((state, active_filter) => {\r\n    console.log(active_filter);\r\n    state.filter = active_filter;\r\n  }),\r\n  set_lightbox_content: action((state, item) => {\r\n    let source_row = state.map_spreadsheet.filter(\r\n      (r) => r.series0101 === item.src\r\n    )[0];\r\n\r\n    console.log(item);\r\n    let photo_sources: PhotoInfo[] = [];\r\n    Object.keys(source_row).forEach(function (k: string) {\r\n      if (k.startsWith(\"photo\")) {\r\n        const key = k as keyof typeof source_row;\r\n        const photo_info: PhotoInfo = {\r\n          source: source_row[key],\r\n          kind: k,\r\n        };\r\n        photo_sources.push(photo_info);\r\n      }\r\n    });\r\n    const info: LightBoxContent = {\r\n      images: photo_sources,\r\n      description: source_row.info,\r\n      title: source_row.title,\r\n      author: source_row.author,\r\n    };\r\n    state.active_lightbox = info;\r\n  }),\r\n  set_loaded: action((state, is_loaded) => {\r\n    state.loaded = is_loaded;\r\n  }),\r\n};\r\n\r\nfunction get_single_filter(f: FilterOption): FilterResult {\r\n  let filter_func: any;\r\n  if (Object.values(MapSubTopic).includes(f as MapSubTopic)) {\r\n    filter_func = function (val: GalleryImage) {\r\n      return val.tags[0].subtopic === f;\r\n    };\r\n  } else if (\r\n    Object.values(ThemeCategoryFilter).includes(f as ThemeCategoryFilter)\r\n  ) {\r\n    filter_func = function (val: GalleryImage) {\r\n      return val.tags[0].theme === f;\r\n    };\r\n  } else if (\r\n    Object.values(AuthorDisciplineFilter).includes(f as AuthorDisciplineFilter)\r\n  ) {\r\n    f = f as AuthorDisciplineFilter;\r\n    let discipline = f.split(\"_\")[0];\r\n    let year = f.split(\"_\")[1];\r\n    filter_func = function (val: GalleryImage) {\r\n      return val.tags[0].year === year && val.tags[0].discipline == discipline;\r\n    };\r\n  }\r\n  return {\r\n    filter_func: filter_func,\r\n    filters: [f],\r\n  } as FilterResult;\r\n}\r\n\r\n///END MODEL\r\n//TODO: RENAME\r\nfunction quick_get(group: FilterGroup, cat: keyof MapMetadata): FilterResult {\r\n  const filter_set = filter_group_to_set(group);\r\n  if (\r\n    // group instanceof\r\n    group == FilterGroup.STUDENTS_2016 ||\r\n    group == FilterGroup.STUDENTS_2018 ||\r\n    group == FilterGroup.STUDENTS_2020\r\n  ) {\r\n    let splits = get_year_discipline(filter_set as AuthorDisciplineFilter[]);\r\n    const filter_func = function (val: GalleryImage) {\r\n      return splits.years.includes(val.tags[0].year);\r\n      // splits.discipline.includes(val.tags[0].discipline)\r\n    };\r\n    return {\r\n      filter_func: filter_func,\r\n      filters: filter_set,\r\n    } as FilterResult;\r\n  } else {\r\n    const filter_func = function (val: GalleryImage) {\r\n      console.log(cat);\r\n      console.log(filter_set);\r\n      console.log(val.tags[0]);\r\n      console.log(val.tags[0][cat]);\r\n      console.log(filter_set.includes(val.tags[0][cat]));\r\n      return filter_set.includes(val.tags[0][cat]);\r\n      // return filter_set.includes(val.tags[0][cat]);\r\n    };\r\n    return {\r\n      filter_func: filter_func,\r\n      filters: filter_set,\r\n    } as FilterResult;\r\n  }\r\n}\r\n\r\nfunction get_group_filter(f: FilterOption): FilterResult {\r\n  let final_result = {\r\n    filter_func: \"aaa\",\r\n    filters: [],\r\n  } as FilterResult;\r\n\r\n  switch (f) {\r\n    case FilterGroup.ACCESS_THEME:\r\n      final_result = quick_get(\r\n        FilterGroup.ACCESS_THEME,\r\n        \"theme\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.EQUITY_THEME:\r\n      final_result = quick_get(\r\n        FilterGroup.EQUITY_THEME,\r\n        \"theme\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.DIVERISTY_THEME:\r\n      final_result = quick_get(\r\n        FilterGroup.DIVERISTY_THEME,\r\n        \"theme\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.STUDENTS_2016:\r\n      final_result = quick_get(\r\n        FilterGroup.STUDENTS_2016,\r\n        \"year\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.STUDENTS_2018:\r\n      final_result = quick_get(\r\n        FilterGroup.STUDENTS_2018,\r\n        \"year\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.STUDENTS_2020:\r\n      final_result = quick_get(\r\n        FilterGroup.STUDENTS_2020,\r\n        \"year\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.BUILT_TOPIC:\r\n      final_result = quick_get(\r\n        FilterGroup.BUILT_TOPIC,\r\n        \"subtopic\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.ECONOMIC_TOPIC:\r\n      final_result = quick_get(\r\n        FilterGroup.ECONOMIC_TOPIC,\r\n        \"subtopic\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.NATURAL_TOPIC:\r\n      final_result = quick_get(\r\n        FilterGroup.NATURAL_TOPIC,\r\n        \"subtopic\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.POLITICAL_TOPIC:\r\n      final_result = quick_get(\r\n        FilterGroup.POLITICAL_TOPIC,\r\n        \"subtopic\" as keyof MapMetadata\r\n      );\r\n      break;\r\n    case FilterGroup.SOCIAL_TOPIC:\r\n      final_result = quick_get(\r\n        FilterGroup.SOCIAL_TOPIC,\r\n        \"subtopic\" as keyof MapMetadata\r\n      );\r\n      break;\r\n  }\r\n  console.log(final_result);\r\n  return final_result;\r\n}\r\n\r\n// function generate_map_stats(map_rows: RawStudentRowValues[]): MapStats {\r\n//   const yd = generate_year_discpline_stats(map_rows);\r\n//   const td = generate_topic_stats(map_rows);\r\n//   const theme_stats = generate_theme_stats(map_rows);\r\n//   const map_stats: MapStats = {\r\n//     year: yd,\r\n//     tag: td,\r\n//     theme: theme_stats,\r\n//   };\r\n//   return map_stats;\r\n// }\r\n\r\nfunction make_time_series(rows: EventRowValues[]): TimelineData {\r\n  const categorized_events = groupBy(rows, \"category\");\r\n  console.log(categorized_events);\r\n  Object.keys(categorized_events).forEach((key) => {\r\n    console.log(key);\r\n    const value: EventRowValues[] = categorized_events[key];\r\n    const events = event_rows_to_time_range_events(value);\r\n    const series = time_range_events_to_time_series(events);\r\n    categorized_events[key] = series;\r\n    console.log(series);\r\n  });\r\n  console.log(categorized_events);\r\n  return categorized_events;\r\n}\r\n\r\nfunction event_rows_to_time_range_events(\r\n  rows: EventRowValues[]\r\n): TimeRangeEvent[] {\r\n  let all_events: TimeRangeEvent[] = [];\r\n  console.log(rows);\r\n  rows.forEach((event_row: EventRowValues) => {\r\n    const time_range = new TimeRange(event_row.start, event_row.end);\r\n    const data: EventData = {\r\n      title: event_row.title,\r\n    };\r\n    const time_range_event = new TimeRangeEvent(time_range, [data]);\r\n    all_events.push(time_range_event);\r\n  });\r\n  console.log(all_events);\r\n  return all_events;\r\n}\r\n\r\n//sorts events into rows so that rows don't contain overlapping time events\r\nfunction time_range_events_to_time_series(\r\n  events: TimeRangeEvent[]\r\n): TimeSeries[] {\r\n  let array_set: { [key: string]: any[] } = {};\r\n  let row_count = 0;\r\n  // for (let index = 0; index < events.length; index++) {\r\n  //   console.log(index);\r\n  //   const element = events[index];\r\n  //   if (Array.isArray(array_set[`row_${row_count}`]) == false) {\r\n  //     array_set[`row_${row_count}`] = [];\r\n  //   }\r\n  //   let test = array_set[`row_${row_count}`].every(\r\n  //     (d: TimeRangeEvent) =>\r\n  //       date_range_overlaps(\r\n  //         d.begin(),\r\n  //         d.end(),\r\n  //         element.begin(),\r\n  //         element.end()\r\n  //       ) == false\r\n  //   );\r\n  //   if (test) {\r\n  //     if (row_count > 0) {\r\n  //       array_set[`row_${row_count - 1}`].push(element);\r\n  //       // }\r\n  //     } else {\r\n  //       array_set[`row_${row_count}`].push(element);\r\n  //     }\r\n  //   } else {\r\n  //     row_count += 1;\r\n  //     array_set[`row_${row_count}`].push(element);\r\n  //   }\r\n  //   console.log(test);\r\n  //   console.log(array_set);\r\n  //   // if (\r\n  //   //   array_set[`row_${row_count}`].every(\r\n  //   //     (d: TimeRangeEvent) =>\r\n  //   //       date_range_overlaps(\r\n  //   //         d.begin(),\r\n  //   //         d.end(),\r\n  //   //         element.begin(),\r\n  //   //         element.end()\r\n  //   //       ) == false\r\n  //   //   )\r\n  //   // ) {\r\n  //   //   console.log(\"no overlap, going to push\");\r\n  //   //   array_set[`row_${row_count}`].push(element);\r\n  //   //   console.log(array_set);\r\n  //   // } else {\r\n  //   //   // console.log(\"GOT overlap, MAKE NEW ROW\");\r\n  //   //   // row_count += 1;\r\n  //   //   // array_set[`row_${row_count}`].push(element);\r\n  //   // }\r\n  //   // }\r\n  // }\r\n  // console.log(array_set);\r\n  let test_obj: any = {};\r\n  test_obj[0] = [];\r\n  (events as TimeRangeEvent[]).forEach(\r\n    (ev2: TimeRangeEvent, ind: number, array: TimeRangeEvent[]) => {\r\n      let row_count = 0;\r\n      if (\r\n        array.every((e3) => {\r\n          if (ev2 === e3) {\r\n            return true;\r\n          }\r\n          if (\r\n            date_range_overlaps(e3.begin(), e3.end(), ev2.begin(), ev2.end())\r\n          ) {\r\n            // console.log(\"ranges do overlap\");\r\n            return false;\r\n          } else {\r\n            // console.log(\"ranges do not overlap\");\r\n            return true;\r\n          }\r\n        })\r\n      ) {\r\n        test_obj[row_count].push(ev2);\r\n      } else {\r\n        row_count = row_count + 1;\r\n        test_obj[ind] = [ev2];\r\n      }\r\n    }\r\n  );\r\n  const sorted_events = Object.keys(test_obj).map((k) => {\r\n    test_obj[k] = test_obj[k].sort((a: any, b: any) => a.begin() - b.begin());\r\n  });\r\n  const row_arrays = Object.keys(sorted_events).map(\r\n    (k) =>\r\n      new TimeSeries({\r\n        name: \"test\",\r\n        events: test_obj[k],\r\n      })\r\n  );\r\n  return row_arrays;\r\n}\r\n\r\nfunction date_range_overlaps(\r\n  a_start: Date,\r\n  a_end: Date,\r\n  b_start: Date,\r\n  b_end: Date\r\n) {\r\n  if (a_start < b_start && b_start < a_end) return true; // b starts in a\r\n  if (a_start < b_end && b_end < a_end) return true; // b ends in a\r\n  if (b_start < a_start && a_end < b_end) return true; // a in b\r\n  return false;\r\n}\r\n\r\n// interface BaseImage{\r\n//   src: string,\r\n//   author: string,\r\n\r\n// }\r\n// function get_all_images(rows: MapRow[]):\r\n\r\n//maprow-> student\r\n//student-> gallery image and normal images\r\n\r\nfunction map_rows_to_images(rows: RawStudentRowValues[]): GalleryImage[] {\r\n  let unsized_gallery_images: GalleryImage[] = rows.map(\r\n    (map_row: RawStudentRowValues) => ({\r\n      src: map_row.series0101,\r\n      thumbnail: map_row.series0101,\r\n      // thumbnail: map_row.thumbnail,\r\n      isSelected: false,\r\n      //TODO: SET UP CAPTIONS\r\n      caption: \"Im in this other file\",\r\n      thumbnailWidth: 95,\r\n      thumbnailHeight: 174,\r\n      tags: [\r\n        {\r\n          discipline:\r\n            AuthorDisciplineFilter[\r\n              map_row.discipline as unknown as keyof typeof AuthorDisciplineFilter\r\n            ],\r\n          subtopic:\r\n            MapSubTopic[\r\n              (map_row.topic +\r\n                // (map_row.tags +\r\n                \"_\" +\r\n                map_row.subtopic) as unknown as keyof typeof MapSubTopic\r\n            ],\r\n          theme:\r\n            ThemeCategoryFilter[\r\n              map_row.theme as unknown as keyof typeof ThemeCategoryFilter\r\n            ],\r\n          year: map_row.year,\r\n        },\r\n      ],\r\n    })\r\n  );\r\n  return unsized_gallery_images;\r\n}\r\n\r\nfunction groupBy(arr: any[], property: any) {\r\n  return arr.reduce((acc, cur) => {\r\n    acc[cur[property]] = [...(acc[cur[property]] || []), cur];\r\n    return acc;\r\n  }, {});\r\n}\r\n// function groupByCount(arr: any[], property: any) {\r\n//   return arr.reduce((acc, cur) => {\r\n//     acc[cur[property]] = [...(acc[cur[property]] || []), cur];\r\n//     return acc;\r\n//   }, {});\r\n// }\r\n\r\nfunction type_event_rows(rows: any[]): EventRowValues[] {\r\n  rows.forEach((r: any, ind: number) => {\r\n    const cat_string: string = rows[ind][\"category\"];\r\n    const type_cat: EventLevel =\r\n      EventLevel[cat_string as unknown as keyof typeof EventLevel];\r\n    rows[ind][\"category\"] = type_cat;\r\n    const start_date = new Date(rows[ind][\"start\"]);\r\n    const end_date = new Date(rows[ind][\"end\"]);\r\n    rows[ind][\"start\"] = start_date;\r\n    rows[ind][\"end\"] = end_date;\r\n  });\r\n  return rows;\r\n}\r\n\r\nfunction type_map_rows(rows: any[]): RawStudentRowValues[] {\r\n  rows.forEach((r: any, ind: number) => {\r\n    const discipline_string: string = rows[ind][\"discipline\"];\r\n    const type_cat: AuthorDisciplineFilter =\r\n      AuthorDisciplineFilter[\r\n        discipline_string as unknown as keyof typeof AuthorDisciplineFilter\r\n      ];\r\n    rows[ind][\"discipline\"] = type_cat;\r\n  });\r\n  return rows;\r\n}\r\n\r\n// const oneCapitalV = lift(oneCapital)\r\n// const oneNumberV = lift(oneNumber)\r\n\r\n// define a combinator that converts a check outputting an Either<E, A> into a check outputting a Either<NonEmptyArray<E>, A>\r\nfunction lift<E, A>(\r\n  check: (a: A) => Either<E, A>\r\n): (a: A) => Either<NonEmptyArray<E>, A> {\r\n  return (a) =>\r\n    pipe(\r\n      check(a),\r\n      mapLeft((a) => [a])\r\n    );\r\n}\r\n// const applicativeValidation = getValidation(getSemigroup<string>());\r\n// https://dev.to/gcanti/getting-started-with-fp-ts-either-vs-validation-5eja\r\n\r\n// function validateStudentRow(s: string): Either<NonEmptyArray<string>, string> {\r\n//   return pipe(\r\n//     sequenceT(getApplicativeValidation(getSemigroup<string>()))(\r\n//       minLengthV(s)\r\n//       // oneCapitalV(s),\r\n//       // oneNumberV(s)\r\n//     ),\r\n//     map(() => s)\r\n//   );\r\n// }\r\n\r\n// const row_to_student = (row: RawStudentRowValues): Student => {\r\n//   let student: Student = {\r\n//     title: row.title,\r\n//     info: row.info,\r\n//     discipline:\r\n//       AuthorDisciplineFilter[\r\n//         row.discipline as unknown as keyof typeof AuthorDisciplineFilter\r\n//       ],\r\n//     author: row.author,\r\n//     topic: Topic[row.topic as unknown as keyof typeof Topic],\r\n//     theme:\r\n//       ThemeCategoryFilter[\r\n//         row.theme as unknown as keyof typeof ThemeCategoryFilter\r\n//       ],\r\n//     subtopic: MapSubTopic[row.topic as unknown as keyof typeof MapSubTopic],\r\n//     series0101: row.series0101,\r\n//     series0102: row.series0102,\r\n//     series0201: row.series0201,\r\n//     series0202: row.series0202,\r\n//     series0301: row.series0301,\r\n//     series0302: row.series0302,\r\n//     //thumbnails: []\r\n//     //\r\n//   };\r\n//   return student;\r\n// };\r\n\r\nfunction get_image(image: GalleryImage): Promise<HTMLImageElement> {\r\n  const promise = new Promise<HTMLImageElement>(function (resolve, reject) {\r\n    let img = new Image();\r\n    img.src = image.thumbnail;\r\n    // img.src = image.thumbnail;\r\n    img.onload = () => {\r\n      image.thumbnailHeight = img.height;\r\n      image.thumbnailWidth = img.width;\r\n      resolve(img);\r\n    };\r\n  });\r\n  return promise;\r\n}\r\n\r\nfunction get_sheet<T>(key: string, sheet_num: number): Promise<GoolgeSheet<T>> {\r\n  const promise = new Promise<GoolgeSheet<T>>(function (resolve, reject) {\r\n    GetSheetDone.labeledCols(key, sheet_num)\r\n      .then((sheet: any) => {\r\n        resolve(sheet);\r\n      })\r\n      .catch((err: any) => {\r\n        console.error(\r\n          `Error fetching DOC_KEY ${key}, sheet number ${sheet_num}`\r\n        );\r\n      });\r\n  });\r\n  return promise;\r\n}\r\n\r\nfunction get_map_sheet(\r\n  key: string,\r\n  sheet_index: number\r\n): Promise<void | RawStudentRowValues[]> {\r\n  // function get_map_sheet(key: string, sheet_index: number): Promise<LabeledCols<MapRow[]>>{\r\n  var to_get = get_sheet<RawStudentRowValues>(key, sheet_index)\r\n    .then((map_sheet: GoolgeSheet<RawStudentRowValues>) => {\r\n      const typed_map_rows = type_map_rows(map_sheet.data);\r\n      return typed_map_rows;\r\n    })\r\n    .catch((err: any) => {\r\n      console.error(`Error fetching DOC_KEY ${key}`);\r\n    });\r\n  return to_get;\r\n}\r\n\r\nfunction getAllFuncs(toCheck: any) {\r\n  var props: any[] = [];\r\n  var obj = toCheck;\r\n  do {\r\n    props = props.concat(Object.getOwnPropertyNames(obj));\r\n  } while ((obj = Object.getPrototypeOf(obj)));\r\n\r\n  return props.sort().filter(function (e, i, arr) {\r\n    if (e !== arr[i + 1] && typeof toCheck[e] == \"function\") return true;\r\n  });\r\n}\r\n\r\nfunction get_year_discipline(\r\n  author_enum: AuthorDisciplineFilter[]\r\n): YearSection {\r\n  const splits = author_enum.map((a) => a.split(\"_\"));\r\n  let yddata: YearSection = {\r\n    years: [],\r\n    discipline: [],\r\n  };\r\n  splits.forEach((s: string[]) => {\r\n    yddata.discipline.push(s[0]);\r\n    yddata.years.push(s[1]);\r\n  });\r\n  return yddata;\r\n}\r\n\r\nfunction filter_group_to_set(group_enum: FilterGroup): FilterOption[] {\r\n  let my_filters: FilterOption[] = [];\r\n  switch (group_enum) {\r\n    case FilterGroup.STUDENTS_2016:\r\n      my_filters = [\r\n        AuthorDisciplineFilter.ARTDESIGN_2016,\r\n        AuthorDisciplineFilter.ARCHITECTURE_2016,\r\n        AuthorDisciplineFilter.OTHER_2016,\r\n        AuthorDisciplineFilter.LANDSCAPE_2016,\r\n      ];\r\n      break;\r\n    case FilterGroup.STUDENTS_2018:\r\n      my_filters = [\r\n        AuthorDisciplineFilter.ARTDESIGN_2018,\r\n        AuthorDisciplineFilter.ARCHITECTURE_2018,\r\n        AuthorDisciplineFilter.OTHER_2018,\r\n        AuthorDisciplineFilter.LANDSCAPE_2018,\r\n      ];\r\n      break;\r\n    case FilterGroup.STUDENTS_2020:\r\n      my_filters = [\r\n        AuthorDisciplineFilter.ARTDESIGN_2020,\r\n        AuthorDisciplineFilter.ARCHITECTURE_2020,\r\n        AuthorDisciplineFilter.OTHER_2020,\r\n        AuthorDisciplineFilter.LANDSCAPE_2020,\r\n      ];\r\n      break;\r\n    case FilterGroup.BUILT_TOPIC:\r\n      my_filters = [\r\n        MapSubTopic.INFRASTR,\r\n        MapSubTopic.BUILDINGS,\r\n        MapSubTopic.TRANSPORTATION,\r\n      ];\r\n      break;\r\n    case FilterGroup.ECONOMIC_TOPIC:\r\n      my_filters = [\r\n        MapSubTopic.WORK,\r\n        MapSubTopic.PROPERTY,\r\n        MapSubTopic.URBANDEV,\r\n      ];\r\n      break;\r\n    case FilterGroup.NATURAL_TOPIC:\r\n      my_filters = [\r\n        MapSubTopic.GREENSPACE,\r\n        MapSubTopic.POLLUTION,\r\n        MapSubTopic.HYDROLOGY,\r\n      ];\r\n      break;\r\n    case FilterGroup.POLITICAL_TOPIC:\r\n      my_filters = [\r\n        MapSubTopic.CIVICENG,\r\n        MapSubTopic.GOVERMENT,\r\n        MapSubTopic.POLICY,\r\n      ];\r\n      // my_filters = [MapSubTopic.CIVICENG, MapSubTopic.GOV, MapSubTopic.POLICY];\r\n      break;\r\n    case FilterGroup.SOCIAL_TOPIC:\r\n      my_filters = [\r\n        MapSubTopic.EDUCATION,\r\n        MapSubTopic.HEALTHSAFETY,\r\n        MapSubTopic.RACEGEN,\r\n      ];\r\n      break;\r\n    case FilterGroup.EQUITY_THEME:\r\n      my_filters = [ThemeCategoryFilter.EQUITY];\r\n      break;\r\n    case FilterGroup.ACCESS_THEME:\r\n      my_filters = [ThemeCategoryFilter.ACCESS];\r\n      break;\r\n    case FilterGroup.DIVERISTY_THEME:\r\n      my_filters = [ThemeCategoryFilter.DIVERSITY];\r\n      break;\r\n  }\r\n  return my_filters;\r\n}\r\n\r\nfunction arraysEqual(a: any[], b: any[]): boolean {\r\n  if (a === b) return true;\r\n  if (a == null || b == null) return false;\r\n  if (a.length !== b.length) return false;\r\n\r\n  // If you don't care about the order of the elements inside\r\n  // the array, you should sort both arrays here.\r\n  // Please note that calling sort on an array will modify that array.\r\n  // you might want to clone your array first.\r\n\r\n  for (var i = 0; i < a.length; ++i) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default map_data;\r\n\r\n// Promise.all(gallery_image_responses).then(\r\n//   (res: HTMLImageElement[]) => {\r\n//     let sized_gallery_images = all_unsized_images.map(function (\r\n//       def_img: GalleryImage,\r\n//       i\r\n//     ) {\r\n//       def_img[\"thumbnailWidth\"] = res[i].width * 0.05;\r\n//       def_img[\"thumbnailHeight\"] = res[i].height * 0.05;\r\n//       return def_img;\r\n//     });\r\n//     // console.log(sized_gallery_images);\r\n//     actions.set_gallery_images(sized_gallery_images);\r\n//     actions.set_active_images(sized_gallery_images);\r\n//   }\r\n// );\r\n\r\n// let unsized_gallery_images =\r\n//   map_rows_to_images(succesful_map_rows);\r\n// let image_responses: ImagePromise[] = unsized_gallery_images.map(\r\n//   (gi: GalleryImage) => get_image(gi)\r\n// );\r\n// console.log(unsized_gallery_images);\r\n// gallery_image_responses.push(...image_responses);\r\n// all_unsized_images.push(...unsized_gallery_images);\r\n// map_data.maps.push(...sheet_payload);\r\n","import map_data, { MapDataModel } from './map_data';\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  map_data: MapDataModel;\r\n//   notification: NotificationModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  map_data,\r\n//   notification,\r\n};\r\n\r\nexport default model;\r\n","import {createStore, action} from 'easy-peasy';\r\nimport model from './model';\r\n\r\nconst store = createStore(model);\r\n\r\nexport default store","import ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {theme} from './theme';\nimport {StoreProvider} from 'easy-peasy';\n\nimport store from './store';\nReactDOM.render(\n    <ThemeProvider theme = {theme} >\n      <StoreProvider store = {store}>\n      <App />\n     </StoreProvider>\n    </ThemeProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}