{"version":3,"sources":["Components/Sidebar.tsx","hooks.ts","Components/ImageGallery/LightBox.tsx","Components/MapGallery.tsx","model/enums.ts","Components/Timeline/EventInfoDisplay.tsx","Components/TimeSeries/js/util.js","Components/TimeSeries/components/Brush.js","Components/TimeSeries/components/MultiBrush.js","Components/TimeSeries/components/YAxis.js","Components/TimeSeries/components/Charts.js","Components/TimeSeries/components/ValueList.js","Components/TimeSeries/components/Label.js","Components/TimeSeries/components/TimeMarker.js","Components/TimeSeries/js/interpolators.js","Components/TimeSeries/components/ChartRow.js","Components/TimeSeries/components/EventHandler.js","Components/TimeSeries/components/TimeAxis.js","Components/TimeSeries/components/ChartContainer.js","Components/TimeSeries/components/EventChart.js","Components/Timeline.tsx","Components/SelectorSection.tsx","Components/Selectors/Containers/SelectorGroup.tsx","Components/Selectors/Containers/SelectorParent.tsx","Components/Selectors/Grid/GridUnit.tsx","utils.tsx","Components/Selectors/Grid/GridChunk.tsx","Components/Selectors/YearDiscipline.tsx","Components/Selectors/Themes.tsx","Components/Selectors/Grid/GridRow.tsx","Components/Selectors/MapLens.tsx","Components/Toolbar.tsx","Components/Title.tsx","App.tsx","reportWebVitals.ts","theme.tsx","model/map_data.ts","model/index.ts","store.ts","index.tsx"],"names":["Sidebar","theme","useTheme","sidebarContainer","height","width","paddingBottom","paddingRight","textAlign","display","flexDirection","justifyContent","color","palette","primary","main","fontFamily","typography","sidebarParagraph","fontSize","lineHeight","Pane","style","Text","Paragraph","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","LightBox","show","onClick","active_lightbox","state","map_data","slickSlide","textStyle","LimitedBackdrop","withStyles","root","position","zIndex","boxSizing","paddingLeft","paddingTop","opacity","backgroundColor","Backdrop","open","top","left","CrossIcon","Grid","container","spacing","justify","item","xs","Heading","size","title","author","description","replace","dots","infinite","speed","slidesToShow","slidesToScroll","variableWidth","images","map","src","index","imageSrc","source","allowOverflow","magnifierSize","AuthorDisciplineFilter","EventLevel","EventType","TopicSubCategoryFilter","GalleryFilterType","ClassYearFilter","ThemeCategoryFilter","MapGallery","gallery_images","active_images","useState","showLightbox","setShowLightBox","set_active_lightbox","actions","data_loaded","loaded","useEffect","console","log","scrollContainer","overflow","border","margin","tagStyle","customOverlay","rowHeight","maxRows","enableLightbox","enableImageSelection","onClickThumbnail","this","props","tileViewportStyle","z","q","min","max","duration","Math","ceil","floor","random","animation","animationIterationCound","EventInfoDisplay","info","infoHeader","textDecoration","paragraph","default_val","start","Date","end","tags","type","DATE","category","national","data","scaleAsString","scale","domain","range","getElementOffset","element","de","document","documentElement","box","getBoundingClientRect","window","pageYOffset","clientTop","pageXOffset","clientLeft","Brush","isBrushing","handleBrushMouseDown","bind","handleOverlayMouseDown","handleHandleMouseDown","handleMouseUp","handleClick","handleMouseMove","timeScale","viewBeginTime","invert","viewEndTime","TimeRange","e","preventDefault","x","pageX","y","pageY","xy0","round","begin","timeRange","addEventListener","setState","brushingInitializationSite","initialBrushBeginTime","initialBrushEndTime","initialBrushXYPosition","offset","overlay","t","getTime","handle","removeEventListener","allowSelectionClear","onTimeRangeChanged","xy","viewport","newBegin","newEnd","tb","te","xx","timeOffset","startOffsetConstraint","endOffsetConstrain","parseInt","cursor","overlayStyle","fill","ref","c","onMouseDown","onMouseUp","brushDefaultStyle","fillOpacity","stroke","shapeRendering","brushStyle","merge","disjoint","intersection","bounds","pointerEvents","handleStyle","toJSON","handleSize","leftHandleBounds","rightHandleBounds","onMouseMove","renderOverlay","renderBrush","renderHandles","React","Component","defaultProps","MultiBrush","hasNullBrush","timeRanges","length","handleMouseClick","brushIndex","onTimeRangeClicked","brush_idx","allowFreeDrawing","drawingPosition","brushing_is","onUserMouseUp","idx","userStyle","key","defaultStyle","label","fontWeight","font","values","ticks","axis","YAxis","renderAxis","align","showGrid","chartExtent","hideAxisLine","absolute","format","tickCount","nextProps","updateAxis","updateLabel","fmt","_","isString","isFunction","labelStyle","valueStyle","axisStyle","tickStyle","select","ReactDOM","findDOMNode","selectAll","styles","remove","append","attr","yformat","axisGenerator","stepSize","tickValues","tickFormat","d","abs","tickSizeOuter","Error","axisLeft","axisRight","mergeStyles","tickSize","isInnerAxis","labelOffset","generator","call","text","postSelect","transition","ease","easeSinOut","id","Charts","constructor","name","defaultBoxStyle","defaultTextStyle","textAnchor","defaultTextStyleCentered","ValueList","isCentered","boxStyle","i","dy","value","posx","Label","TimeMarker","infoStyle","line","x1","y1","x2","y2","dateStr","timeFormat","formatter","moment","w","infoWidth","infoBoxProps","infoHeight","infoValues","infoBox","transform","showTime","renderTimeMarker","time","showLine","renderLine","showInfoBox","renderInfoBox","visible","dot","ScaleInterpolator","observer","uniqueId","transitionTime","sourceScale","targetScale","cachedScaler","cacheKey","animationTime","initialTimestamp","performance","now","animationPosition","func1","func2","a","setTimeout","update","isNull","v","ChartRow","isChildYAxis","child","areComponentsEqual","has","clipId","clipPathURL","mounted","axisMargin","innerHeight","rangeTop","rangeBottom","Children","forEach","children","scaleMap","s","yAxisScalerMap","yScale","yaxis","y0","isUndefined","scaleLinear","nice","base","logBase","scaleLog","power","powerExponent","scalePow","exponent","createScale","setScale","scalerMap","interpolator","scaler","updateScales","axes","chartList","yAxisMap","leftAxisList","rightAxisList","alignLeft","push","reverse","leftWidth","reduce","leftAxisWidths","b","rightWidth","rightAxisWidths","chartWidth","leftColumnIndex","colWidth","latestScale","cloneElement","rightColumnIndex","chartTransform","keyCount","charts","chart","ytransition","chartProps","brushList","multiBrushList","brushProps","tracker","clipPath","clipper","strokeOpacity","brushes","multiBrushes","trackerTime","timeMarkerProps","trackerTimeFormat","trackerShowTime","trackerStyle","trackerInfoValues","trackerInfoWidth","trackerInfoHeight","trackerTransform","enablePanZoom","EventHandler","isPanning","initialPanBegin","initialPanEnd","initialPanPosition","handleScrollWheel","handleMouseDown","handleMouseOut","handleContextMenu","eventHandlerRef","passive","eventRect","enableDragZoom","deltaY","getOffsetMousePosition","center","beginScaled","endScaled","minDuration","minTime","maxTime","maxDuration","newTimeRange","onZoom","button","offsetxy","isDragging","initialDragZoom","currentDragZoom","onMouseClick","stopPropagation","sort","onMouseOut","mousePosition","onContextMenu","handlers","toString","TimeAxis","gridHeight","renderTimeAxis","utc","axisBottom","tickArguments","utcDay","timeDay","utcMonth","timeMonth","utcYear","timeYear","angled","defaultTimeAxisStyle","defaultTitleStyle","defaultChartRowTitleLabelStyle","defaultChartRowTitleBoxStyle","defaultTrackerStyle","ChartContainer","handleTrackerChanged","handleTimeRangeChanged","handleBackgroundClick","handleZoom","saveSvgRef","onTrackerChanged","timerange","onBackgroundClick","svg","padding","titleHeight","chartRows","chartRowTitles","childRow","countLeft","countCharts","invariant","pos","Number","timeAxisHeight","hideTimeAxis","timeAxisWidth","timeAxisStyle","scaleUtc","scaleTime","chartsWidth","yPosition","titleStyle","chartsHeight","chartRow","rowKey","firstRow","isVisible","trackerPosition","rowTitleKey","titleLabelStyle","titleBoxStyle","titleTransform","contains","trackerValues","trackerHintWidth","trackerHintHeight","timeAxis","timeAxisAngledLabels","timeAxisTickCount","rows","rowTitles","svgWidth","svgHeight","svgStyle","showGridPosition","EventChart","hover","event","onMouseOver","onMouseLeave","onSelectionChange","series","textOffsetX","textOffsetY","hoverMarkerWidth","eventMarkers","events","beginPos","endPos","isHover","Event","is","barNormalStyle","barStyle","className","cx","cy","r","Timeline","filter","time_series","timeline_series","event_rows","event_spreadsheet","undefined","eventInfo","setEventInfo","setSelectedEvent","setChartHeight","timeSeriesCount","setTimeSeriesCount","toUpperCase","count","city","seperators","setSeperators","start_date","end_date","is_sm","useMediaQuery","breakpoints","up","innerWidth","time_series_count","lengths","heights","l","poss","p","timelineSection","borderTop","seperatorText","historicalEventsText","make_series","active_filter","row_height","ev","base_style","handle_click","first","get","found_row","toCheck","obj","concat","Object","getOwnPropertyNames","getPrototypeOf","arr","getAllFuncs","label_func","light","dark","f","tf","parseFloat","toFixed","testtest","SelectorSection","headerContainer","borderBottom","alignContent","header","marginTop","marginBottom","minHeight","SelectorGroup","filters","set_multi_filter","thunk_set_multi_filter","EE_COMMERCE","ARCHITECTURE","DIVERSITY","hovered","SetHovered","groupStyle","childContainer","headerAndChild","onMouseEnter","SelectorParent","columns","clusterContainer","selectorGroup","borderLeft","borderRight","noSiblings","selectorGroupFirst","selectorGroupLast","direction","isValidElement","ind","chil","Array","isArray","GridUnit","is_active_filter","setHover","containerStyle","match_color","blue","marginRight","outline","GridChunk","base_color","rowContainer","chunkContainer","real_filter","set_filter","thunk_set_filter","set_row_color","cur_filter_val","is_hovered","setHovered","group_columns","step","val","num_cols","max_num_rows","from","keys","k","roundToStep","col_list","cur_col","to_chunk","to_author_enum","discipline","year","YearDiscipline","year_data","map_stats","chunksContainer","disciplineStyle","make_year_chunks","year_breakdown","ARTDESIGN_2016","ARCHITECTURE_2016","OTHER_2016","LANDSCAPE_2016","ARTDESIGN_2018","ARCHITECTURE_2018","OTHER_2018","LANDSCAPE_2018","ARTDESIGN_2020","ARCHITECTURE_2020","OTHER_2020","LANDSCAPE_2020","Themes","theme_stats","EQUITY","ACCESS","GridRow","icon","tooltip","cur_filter","Tooltip","built_filters","BE_ENERGY","BE_HOUSING","BE_TRANSPORTATION","economic_filters","EE_COSTOFLIVING","EE_HOUSINGMARKET","natural_filters","NE_GREENSPACE","NE_POLLUTION","NE_WATER","political_filters","PE_GOVERMENT","PE_LEGISLATION","PE_ACTIVISM","social_filters","SE_EDUCATION","SE_HEALTH","SE_POPULATION","MapLens","tag_stats","tag","BE","ENERGY","LightbulbIcon","HOUSING","Apartment","TRANSPORTATION","DirectionsBus","EE","COSTOFLIVING","HomeIcon","HOUSINGMARKET","ChartIcon","COMMERCE","BriefcaseIcon","NE","GREENSPACE","TreeIcon","POLLUTION","WATER","Opacity","PE","GOVERMENT","AccountBalance","LEGISLATION","Gavel","ACTIVISM","VolumeUp","SE","EDUCATION","School","HEALTH","SymbolCrossIcon","POPULATION","PeopleIcon","Toolbar","toolbarContainer","maxHeight","instructions_paragraph","SelectorContainer","sm","md","lg","Title","is_md","titleHeader","titleSubHeader","App","test_thunk","fetch_map_data","myCustomTheme","defaultTheme","fontFamilies","ui","mono","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","factor","overrides","MuiGrid","generate_map_stats","map_rows","year_groups","groupBy","yg_keys","max_unit_count","year_group","cats","final_data","generate_year_discpline_stats","total_cat_blocks","topic_groups","empty_cont","topic_group_count","sub_groups","portioned_cat_blocks","empty_sg","cat_percent","cat_blocks","sk","generate_topic_stats","num_theme_blocks","theme_groups","theme_keys","empty_theme_data","generate_theme_stats","make_time_series","categorized_events","all_events","event_row","time_range","event_type","split","trim","time_range_event","TimeRangeEvent","RANGE","test_obj","ev2","array","row_count","every","e3","a_start","a_end","b_start","b_end","sorted_events","TimeSeries","group_events_to_rows","event_row_to_series","map_rows_to_images","map_row","photo1","thumbnail","isSelected","caption","thumbnailWidth","thumbnailHeight","subtopic","property","acc","cur","type_event_rows","cat_string","event_type_string","type_cat","type_event","get_image","image","Promise","resolve","reject","img","Image","onload","get_sheet","sheet_num","GetSheetDone","labeledCols","sheet","catch","err","error","get_map_sheet","sheet_index","map_sheet","discipline_string","model","multi_tag","map_spreadsheet","thunk","maps","test_2018","DOC_KEY","test_2020","test_2016","map_sheets","all","sheet_data","gallery_image_responses","all_unsized_images","sheet_payload","unsized_gallery_images","image_responses","gi","res","sized_gallery_images","def_img","set_gallery_images","set_active_images","set_map_stats","set_map_spreadsheet","set_loaded","event_sheet","typed_event_rows","set_event_spreadsheet","set_timeline_series","action","map_stats_obj","payload","filter_gallery","filter_option","filter_type","TOPIC","with_subtopic","THEME","with_theme","DISCIPLINE","with_discipline_and_year","debug","reset_gallery","includes","set_active_filter","source_row","photo_sources","startsWith","photo_info","kind","is_loaded","store","createStore","render","ThemeProvider","getElementById"],"mappings":"uSA0CeA,MAxCf,WACI,IAAMC,EAAQC,cAERC,EAAmB,CACrBC,OAAQ,OACRC,MAAO,OACPC,cAAe,MACfC,aAAc,MACdC,UAAW,OACXC,QAAS,OACTC,cAAe,SACfC,eAAgB,eAChBC,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BC,WAAYf,EAAMgB,WAAWD,YAG3BE,EAAkB,CACpBN,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BI,SAAU,MACVC,WAAY,OACZJ,WAAYf,EAAMgB,WAAWD,YAGjC,OACI,eAACK,EAAA,EAAD,CAAMC,MAASnB,EAAf,UACI,cAACoB,EAAA,EAAD,CAAMD,MAAS,CAACF,WAAY,QAA5B,SACQ,cAACI,EAAA,EAAD,CAAWF,MAASJ,EAApB,oaAIR,cAACK,EAAA,EAAD,CAAMD,MAASJ,EAAf,SACA,cAACM,EAAA,EAAD,uM,kCC9BNC,EAAaC,cAINC,EAAkBF,EAAWE,gBAE7BC,GADmBH,EAAWI,iBACdJ,EAAWG,e,6GC8HzBE,EAxHE,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,QACfC,EAAkBL,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASF,mBAEtDG,GADQlC,cACK,CACfE,OAAQ,QAERC,MAAO,UA6BLgC,EAAY,CACdzB,MAAO,QACPO,SAAU,OACVC,WAAY,QAaVkB,EAAkBC,YAAW,CAC/BC,KAAM,CACJC,SAAU,WACVC,OAAQ,EACRC,UAAW,aACXC,YAAa,MACbC,WAAY,MACZC,QAAS,GACTC,gBAAiB,qBARCR,CAUrBS,KAEH,OACA,mCACC,eAACV,EAAD,CAAiBW,KAAMlB,EAAvB,UACW,qBAAKT,MAtCY,CACzBmB,SAAU,WACVS,IAAK,EACLC,KAAM,EACNvC,MAAO,SAkCsCoB,QAASA,EAA9C,SACA,cAACoB,EAAA,EAAD,MAIA,qBAAK9B,MAxDS,CACtBjB,MAAO,OACPD,OAAQ,OACRwC,YAAa,OAqDL,SACI,eAACS,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGjC,MAnD7B,CACblB,OAAQ,QACRC,MAAO,QACPkD,QAAS,EACTC,QAAS,gBA+CG,UAEI,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,EAAjB,UACA,cAACC,EAAA,EAAD,CAASC,KAAQ,IAAKhD,MAAS,QAA/B,SAA0CqB,EAAgB4B,QACtD,cAACrC,EAAA,EAAD,UACKS,EAAgB6B,SAErB,cAACtC,EAAA,EAAD,CAAWF,MAASe,EAApB,SACCJ,EAAgB8B,YAAYC,QAAQ,MAAO,MAE5C,cAACxC,EAAA,EAAD,CAAWF,MAASe,OAGxB,cAACgB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,EAAGpC,MA3EnB,CACjBlB,OAAQ,QA0EQ,SACA,cAAC,IAAD,yBAEQ6D,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,GAnDzB,CAGfC,eAAe,EAEfF,aAAc,IAwCE,aAWKnC,EAAgBsC,OAAOC,KAAI,SAACC,EAAUC,GAAX,OACxB,qBAAiBpD,MAASc,EAA1B,SACI,cAAC,iBAAD,CACIuC,SAAYF,EAAIG,OAChBC,eAAiB,EACjBC,cAAiB,SAJfJ,sBCrF1C,IC5BYK,EAmBAC,EAOAC,EAIAC,EAkBAC,EAKAC,EAGAC,EDgDGC,EA5EI,WAEf,IAAMC,EAAiB3D,GAAc,SAAAM,GAAK,uBAAEA,EAAMC,gBAAR,aAAE,EAAgBqD,iBAFvC,EAGmBC,oBAAS,GAH5B,mBAGdC,EAHc,KAGAC,EAHA,KAIfC,EAAsBjE,GAAgB,SAAAkE,GAAO,OAAEA,EAAQ1D,SAASyD,uBAChE3D,EAAkBL,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASF,mBACtD6D,EAAclE,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAAS4D,UAClD9F,EAAQC,cAEd8F,qBAAU,cAEP,CAACT,EAAgBtD,IAEpB+D,qBAAU,WACNC,QAAQC,IAAI,6BAA8BJ,KAC3C,CAACA,IAgBJ,IAAMK,EAAkB,CACpBC,SAAU,SACVhG,OAAQ,OACRiG,OAAO,aAAD,OAAepG,EAAMY,QAAQC,QAAQC,OAY/C,OACA,sBAAKO,MA9BkB,CACnByB,gBAAiB,QACjB3C,OAAQ,OACRkG,OAAQ,OACR5F,cAAe,UA0BnB,UACI,8BACI,cAAC,EAAD,CAAUqB,KAAQ2D,EAAc1D,QAAW,kBAAI2D,GAAgB,QAE/D,qBAAKrE,MAAS6E,EAAd,SACA,cAAC,aAAD,CAAY7E,MAAO,CAAEjB,MAAO,OAAQD,OAAQ,QAA5C,SACI,qBAAKkB,MAAS,CAAClB,OAAQ,OAAQyC,WAAY,IAAKxC,MAAO,QAAvD,SACI,cAAC,IAAD,CACIkG,SAAY,CAAC9F,QAAS,QAEtB8D,OAAWgB,EACXiB,cAAiB,qBAAKlF,MAAS,CAACyB,gBAAgB,SAChD0D,UAAa,GACbC,QAAW,GACXC,gBAAkB,EAClBC,sBAAwB,EACxBC,iBAvCpB,WACIZ,QAAQC,IAAIY,KAAKC,OACjBpB,GAAgB,SAAAD,GAAY,OAAGA,KAC/BO,QAAQC,IAAIR,GACZE,EAAoBkB,KAAKC,MAAMtD,OAsCfuD,kBA7BpB,SAAyBD,EAAYE,EAAQC,GACzC,IA5CiBC,EAAaC,EA4CxBC,GA5CWF,EA4CgB,GA5CHC,EA4CQ,EA3C1CD,EAAMG,KAAKC,KAAKJ,GAChBC,EAAME,KAAKE,MAAMJ,GACVE,KAAKG,UAAYL,EAAMD,GAAOA,GA0CjC,GAAIrB,EACA,MAAO,CACH4B,UAAU,UAAD,OAAYL,EAAZ,YACTM,wBAAyB,iB,SCtE7B5C,K,sBAAAA,E,4BAAAA,E,sBAAAA,E,cAAAA,E,gCAAAA,E,gCAAAA,E,gCAAAA,E,mCAAAA,E,mCAAAA,E,mCAAAA,E,wBAAAA,E,wBAAAA,E,wBAAAA,E,gCAAAA,E,gCAAAA,E,iCAAAA,M,cAmBAC,K,oBAAAA,E,cAAAA,E,aAAAA,M,cAOAC,K,YAAAA,E,eAAAA,M,cAIAC,K,qBAAAA,E,mCAAAA,E,mBAAAA,E,+BAAAA,E,iCAAAA,E,uBAAAA,E,2BAAAA,E,yBAAAA,E,iBAAAA,E,yBAAAA,E,6BAAAA,E,uBAAAA,E,yBAAAA,E,mBAAAA,E,4BAAAA,M,cAkBAC,O,iBAAAA,I,2BAAAA,I,kBAAAA,M,KAKAC,M,aAGAC,K,gBAAAA,E,gBAAAA,E,uBAAAA,M,KCmBGuC,MAjEf,YAAyD,IAA9BC,EAA6B,EAA7BA,KACjB5H,EAAQC,cAaR4H,GALK7H,EAAMY,QAAQC,QAAQC,KAKf,CACdH,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BI,SAAU,MACVC,WAAY,MACZJ,WAAYf,EAAMgB,WAAWD,WAC7B+G,eAAgB,cAGdC,EAAW,CAEbpH,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BC,WAAYf,EAAMgB,WAAWD,WAC7BG,SAAU,MACVC,WAAY,QAGV6G,EAAuB,CACzBC,MAAO,IAAIC,KAAK,EAAI,MACpBC,IAAK,IAAID,KAAK,EAAI,MAClBtE,MAAO,GACPgE,KAAM,GACNQ,KAAM,GACNC,KAAMrD,EAAUsD,KAChBC,SAAUxD,EAAWyD,UAEnBC,EAAI,OAAGb,QAAH,IAAGA,IAAQI,EAKrB,OAJAjC,qBAAU,cAEP,CAAC6B,IAGA,sBAAKvG,MA3CY,CACjBlB,OAAQ,MACRyC,WAAY,OAyCZ,UAII,cAACtB,EAAA,EAAD,CAAMD,MAASwG,EAAf,SACI,cAACtG,EAAA,EAAD,UACCkH,EAAK7E,UAGV,cAACtC,EAAA,EAAD,CAAMD,MAAS0G,EAAf,SACA,cAACxG,EAAA,EAAD,CAAWF,MAAS0G,EAApB,SACKU,EAAKb,a,0GCxDf,SAASc,EAAcC,GAC1B,MAAM,GAAN,OAAUA,EAAMC,SAAhB,YAA4BD,EAAME,SAI/B,SAASC,GAAiBC,GAC7B,IAAMC,EAAKC,SAASC,gBACdC,EAAMJ,EAAQK,wBAGpB,MAAO,CAAEnG,IAFGkG,EAAIlG,IAAMoG,OAAOC,YAAcN,EAAGO,UAEhCrG,KADDiG,EAAIjG,KAAOmG,OAAOG,YAAcR,EAAGS,Y,ICC/BC,G,kDACjB,WAAY5C,GAAQ,IAAD,8BACf,cAAMA,IAED7E,MAAQ,CACT0H,YAAY,GAGhB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,gBAC9B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBACnB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBAZR,E,4CAenB,WAAY,IAAD,EACsBhD,KAAKC,MAA1B1G,EADD,EACCA,MAAO+J,EADR,EACQA,UACTC,EAAgBD,EAAUE,OAAO,GACjCC,EAAcH,EAAUE,OAAOjK,GACrC,OAAO,IAAImK,YAAUH,EAAeE,K,kCAOxC,SAAqBE,GACjBA,EAAEC,iBADkB,IAGLC,EAAgBF,EAAvBG,MAAiBC,EAAMJ,EAAbK,MACZC,EAAM,CAACzD,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IACjCI,GAASnE,KAAKC,MAAMmE,UAAUD,QAC9B7C,GAAOtB,KAAKC,MAAMmE,UAAU9C,MAElCc,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA4B,QAC5BC,sBAAuBL,EACvBM,oBAAqBnD,EACrBoD,uBAAwBT,M,oCAIhC,SAAuBN,GACnBA,EAAEC,iBAEF,IAAMe,EAAS1C,GAAiBjC,KAAK4E,SAC/Bf,EAAIF,EAAEG,MAAQa,EAAOtI,KACrBwI,EAAI7E,KAAKC,MAAMqD,UAAUE,OAAOK,GAAGiB,UAEzC1C,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA4B,UAC5BC,sBAAuBK,EACvBJ,oBAAqBI,EACrBH,uBAAwB,S,mCAIhC,SAAsBf,EAAGoB,GACrBpB,EAAEC,iBAD2B,IAGdC,EAAgBF,EAAvBG,MAAiBC,EAAMJ,EAAbK,MACZC,EAAM,CAACzD,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IACjCI,EAAQnE,KAAKC,MAAMmE,UAAUD,QAAQW,UACrCxD,EAAMtB,KAAKC,MAAMmE,UAAU9C,MAAMwD,UAEvC1C,SAASiC,iBAAiB,YAAarE,KAAKqD,iBAC5CjB,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA2B,UAAD,OAAYQ,GACtCP,sBAAuBL,EACvBM,oBAAqBnD,EACrBoD,uBAAwBT,M,2BAIhC,SAAcN,GACVA,EAAEC,iBAEFxB,SAAS4C,oBAAoB,YAAahF,KAAKqD,iBAC/CjB,SAAS4C,oBAAoB,UAAWhF,KAAKmD,eAE7CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA4B,KAC5BC,sBAAuB,KACvBC,oBAAqB,KACrBC,uBAAwB,S,yBAWhC,WACQ1E,KAAKC,MAAMgF,qBAAuBjF,KAAKC,MAAMiF,oBAC7ClF,KAAKC,MAAMiF,mBAAmB,Q,6BAItC,SAAgBvB,GACZA,EAAEC,iBAEF,IAAMC,EAAIF,EAAEG,MACNC,EAAIJ,EAAEK,MACNmB,EAAK,CAAC3E,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IAChCqB,EAAWpF,KAAKoF,WAEtB,GAAIpF,KAAK5E,MAAM0H,WAAY,CACvB,IAAIuC,EACAC,EAEEC,EAAKvF,KAAK5E,MAAMoJ,sBAChBgB,EAAKxF,KAAK5E,MAAMqJ,oBAEtB,GAA8C,YAA1CzE,KAAK5E,MAAMmJ,2BAA0C,CACrD,IAAMI,EAAS1C,GAAiBjC,KAAK4E,SAC/Ba,EAAK9B,EAAEG,MAAQa,EAAOtI,KACtBwI,EAAI7E,KAAKC,MAAMqD,UAAUE,OAAOiC,GAAIX,UACtCD,EAAIU,GACJF,EAAWR,EAAIO,EAASjB,QAAQW,UAAYM,EAASjB,QAAUU,EAC/DS,EAASC,EAAKH,EAAS9D,MAAMwD,UAAYM,EAAS9D,MAAQiE,IAE1DF,EAAWE,EAAKH,EAASjB,QAAQW,UAAYM,EAASjB,QAAUoB,EAChED,EAAST,EAAIO,EAAS9D,MAAMwD,UAAYM,EAAS9D,MAAQuD,OAE1D,CACH,IAAMZ,EAAMjE,KAAK5E,MAAMsJ,uBACnBgB,EAAa1F,KAAKC,MAAMqD,UAAUE,OAAOS,EAAI,IAAIa,UACjD9E,KAAKC,MAAMqD,UAAUE,OAAO2B,EAAG,IAAIL,UAGnCa,EAAwBD,EACxBE,EAAqBF,EAkBzB,GAjBIH,EAAKG,EAAaN,EAASjB,UAC3BwB,EAAwBJ,EAAKH,EAASjB,QAAQW,WAE9CU,EAAKE,EAAaN,EAAS9D,QAC3BsE,EAAqBJ,EAAKJ,EAAS9D,MAAMwD,YAG7CO,EAAqD,UAA1CrF,KAAK5E,MAAMmJ,4BACwB,gBAA1CvE,KAAK5E,MAAMmJ,2BACTsB,SAASN,EAAKI,EAAuB,IACrCJ,IACND,EAAmD,UAA1CtF,KAAK5E,MAAMmJ,4BAC0B,iBAA1CvE,KAAK5E,MAAMmJ,2BACTsB,SAASL,EAAKI,EAAoB,IAClCJ,GAGN,OAA4C,CAACF,EAAQD,GAA7BA,EAAxB,KAAkCC,EAAlC,MAGAtF,KAAKC,MAAMiF,oBACXlF,KAAKC,MAAMiF,mBAAmB,IAAIxB,YAAU2B,EAAUC,O,2BASlE,WAAiB,IAGTQ,EAHQ,SACc9F,KAAKC,MAAvB1G,EADI,EACJA,MAAOD,EADH,EACGA,OAGf,OAAQ0G,KAAK5E,MAAMmJ,4BACf,IAAK,eACL,IAAK,cACDuB,EAAS,YACT,MACJ,IAAK,QACDA,EAAS,OACT,MACJ,QACIA,EAAS,YAGjB,IAAMC,EAAe,CACjBC,KAAM,QACNhK,QAAS,EACT8J,UAEJ,OACI,sBACIG,IAAK,SAAAC,GACD,EAAKtB,QAAUsB,GAEnBrC,EAAG,EACHE,EAAG,EACHxK,MAAOA,EACPD,OAAQA,EACRkB,MAAOuL,EACPI,YAAanG,KAAKiD,uBAClBmD,UAAWpG,KAAKmD,cAChBjI,QAAS8E,KAAKoD,gB,yBAK1B,WAAe,IAOP0C,EAPM,EACsC9F,KAAKC,MAA7CmE,EADE,EACFA,UAAWd,EADT,EACSA,UAAWhK,EADpB,EACoBA,OAAQkB,EAD5B,EAC4BA,MAEtC,IAAK4J,EACD,OAAO,sBAIX,OAAQpE,KAAK5E,MAAMmJ,4BACf,IAAK,eACL,IAAK,cACDuB,EAAS,YACT,MACJ,IAAK,UACDA,EAAS,YACT,MACJ,QACIA,EAAS,OAIjB,IAAMO,EAAoB,CACtBL,KAAM,OACNM,YAAa,GACbC,OAAQ,OACRC,eAAgB,aAChBV,UAEEW,EAAaC,KAAM,EAAML,EAAmB7L,GAElD,IAAKwF,KAAKoF,WAAWuB,SAASvC,GAAY,CACtC,IAAMpC,EAAQoC,EAAUwC,aAAa5G,KAAKoF,YACpCjB,EAAQnC,EAAMmC,QACd7C,EAAMU,EAAMV,MAHoB,EAIvB,CAACgC,EAAUa,GAAQ,GAA3BN,EAJ+B,KAI5BE,EAJ4B,KAMlCxK,EADW+J,EAAUhC,GACJuC,EACjBtK,EAAQ,IACRA,EAAQ,GAGZ,IAAMsN,EAAS,CAAEhD,IAAGE,IAAGxK,QAAOD,UAE9B,OACI,gDACQuN,GADR,IAEIrM,MAAOiM,EACPK,cAAc,MACdX,YAAanG,KAAK+C,qBAClBqD,UAAWpG,KAAKmD,iBAI5B,OAAO,wB,2BAGX,WAAiB,IAAD,SAC6BnD,KAAKC,MAAtCmE,EADI,EACJA,UAAWd,EADP,EACOA,UAAWhK,EADlB,EACkBA,OAE9B,IAAK8K,EACD,OAAO,sBAIX,IAAM2C,EAAc,CAChBf,KAAM,QACNhK,QAAS,EACT8J,OAAQ,aAGZ,IAAK9F,KAAKoF,WAAWuB,SAASvC,GAAY,CACtC,IADsC,EACxBA,EAAUwC,aAAa5G,KAAKoF,YACf4B,SAFW,mBAE/B7C,EAF+B,KAExB7C,EAFwB,OAGvB,CAACgC,EAAUa,GAAQ,GAA3BN,EAH+B,KAG5BE,EAH4B,KAMlCxK,EAFW+J,EAAUhC,GAEJuC,EACjBtK,EAAQ,IACRA,EAAQ,GAGZ,IAAM0N,EAAajH,KAAKC,MAAMgH,WAExBC,EAAmB,CAAErD,EAAGA,EAAI,EAAGE,IAAGxK,MAAO0N,EAAY3N,UACrD6N,EAAoB,CACtBtD,EAAGA,GAAKtK,EAAQ0N,GAChBlD,IACAxK,MAAO0N,EAAa,EACpB3N,UAGJ,OACI,8BACI,gDACQ4N,GADR,IAEI1M,MAAOuM,EACPD,cAAc,MACdX,YAAa,SAAAxC,GAAC,OAAI,EAAKT,sBAAsBS,EAAG,SAChDyC,UAAWpG,KAAKmD,iBAEpB,gDACQgE,GADR,IAEI3M,MAAOuM,EACPD,cAAc,MACdX,YAAa,SAAAxC,GAAC,OAAI,EAAKT,sBAAsBS,EAAG,UAChDyC,UAAWpG,KAAKmD,oBAKhC,OAAO,wB,oBAGX,WACI,OACI,oBAAGiE,YAAapH,KAAKqD,gBAArB,UACKrD,KAAKqH,gBACLrH,KAAKsH,cACLtH,KAAKuH,uB,GA5UaC,IAAMC,WA8XzC5E,GAAM6E,aAAe,CACjBT,WAAY,EACZhC,qBAAqB,G,IChYJ0C,G,kDACjB,WAAY1H,GAAQ,IAAD,8BACf,cAAMA,IAqEV2H,aAAe,WACX,OACK,EAAK3H,MAAM4H,YAAc,IAAIC,OAAS,GACoB,MAA3D,EAAK7H,MAAM4H,WAAW,EAAK5H,MAAM4H,WAAWC,OAAS,IAzE1C,EA6EnBC,iBAAmB,SAACpE,EAAGqE,GACf,EAAK/H,MAAMgI,oBACX,EAAKhI,MAAMgI,mBAAmBD,IA5ElC,EAAK5M,MAAQ,CACT0H,YAAY,GAGhB,EAAKC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,uBAAyB,EAAKA,uBAAuBD,KAA5B,gBAC9B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBAXR,E,4CAcnB,WAAY,IAAD,EACsBhD,KAAKC,MAA1B1G,EADD,EACCA,MAAO+J,EADR,EACQA,UACTC,EAAgBD,EAAUE,OAAO,GACjCC,EAAcH,EAAUE,OAAOjK,GACrC,OAAO,IAAImK,YAAUH,EAAeE,K,kCAOxC,SAAqBE,EAAGuE,GACpBvE,EAAEC,iBAD6B,IAGhBC,EAAgBF,EAAvBG,MAAiBC,EAAMJ,EAAbK,MACZC,EAAM,CAACzD,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IACjCI,GAASnE,KAAKC,MAAM4H,WAAWK,GAAW/D,QAC1C7C,GAAOtB,KAAKC,MAAM4H,WAAWK,GAAW5G,MAE9Cc,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA4B,QAC5BC,sBAAuBL,EACvBM,oBAAqBnD,EACrBoD,uBAAwBT,EACxB+D,WAAYE,M,oCAIpB,SAAuBvE,GACnB,GAAI3D,KAAKC,MAAMkI,kBAAoBnI,KAAK4H,eAAgB,CACpDjE,EAAEC,iBAEF,IAAMe,EAAS1C,GAAiBjC,KAAK4E,SAC/Bf,EAAIF,EAAEG,MAAQa,EAAOtI,KACrBwI,EAAI7E,KAAKC,MAAMqD,UAAUE,OAAOK,GAAGiB,UAEzC1C,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1C,IAAMiF,EAAkBpI,KAAKC,MAAMkI,iBAC7BnI,KAAKC,MAAM4H,WAAWC,OACtB9H,KAAKC,MAAM4H,WAAWC,OAAS,EAErC9H,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA4B,UAC5BC,sBAAuBK,EACvBJ,oBAAqBI,EACrBH,uBAAwB,KACxBsD,WAAYI,O,mCAkBxB,SAAsBzE,EAAGoB,EAAQiD,GAC7BrE,EAAEC,iBADuC,IAG1BC,EAAgBF,EAAvBG,MAAiBC,EAAMJ,EAAbK,MACZC,EAAM,CAACzD,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IACjCI,EAAQnE,KAAKC,MAAM4H,WAAWG,GAAY7D,QAAQW,UAClDxD,EAAMtB,KAAKC,MAAM4H,WAAWG,GAAY1G,MAAMwD,UAEpD1C,SAASiC,iBAAiB,YAAarE,KAAKqD,iBAC5CjB,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAE1CnD,KAAKsE,SAAS,CACVxB,YAAY,EACZyB,2BAA2B,UAAD,OAAYQ,GACtCP,sBAAuBL,EACvBM,oBAAqBnD,EACrBoD,uBAAwBT,EACxB+D,WAAYA,M,2BAIpB,SAAcrE,GAAI,IAAD,OACbA,EAAEC,iBAEFxB,SAAS4C,oBAAoB,YAAahF,KAAKqD,iBAC/CjB,SAAS4C,oBAAoB,UAAWhF,KAAKmD,eAE7C,IAAMkF,EAAcrI,KAAK5E,MAAM4M,WAC/BhI,KAAKsE,SACD,CACIxB,YAAY,EACZyB,2BAA4B,KAC5BC,sBAAuB,KACvBC,oBAAqB,KACrBC,uBAAwB,KACxBsD,WAAY,OAEhB,WACQ,EAAK/H,MAAMqI,eACX,EAAKrI,MAAMqI,cAAcD,Q,6BAMzC,SAAgB1E,GACZA,EAAEC,iBAEF,IAAMC,EAAIF,EAAEG,MACNC,EAAIJ,EAAEK,MACNmB,EAAK,CAAC3E,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IAChCqB,EAAWpF,KAAKoF,WAEtB,GAAIpF,KAAK5E,MAAM0H,WAAY,CACvB,IAAIuC,EACAC,EAEEC,EAAKvF,KAAK5E,MAAMoJ,sBAChBgB,EAAKxF,KAAK5E,MAAMqJ,oBAEtB,GAA8C,YAA1CzE,KAAK5E,MAAMmJ,2BAA0C,CACrD,IAAMI,EAAS1C,GAAiBjC,KAAK4E,SAC/Ba,EAAK9B,EAAEG,MAAQa,EAAOtI,KACtBwI,EAAI7E,KAAKC,MAAMqD,UAAUE,OAAOiC,GAAIX,UACtCD,EAAIU,GACJF,EAAWR,EAAIO,EAASjB,QAAQW,UAAYM,EAASjB,QAAUU,EAC/DS,EAASC,EAAKH,EAAS9D,MAAMwD,UAAYM,EAAS9D,MAAQiE,IAE1DF,EAAWE,EAAKH,EAASjB,QAAQW,UAAYM,EAASjB,QAAUoB,EAChED,EAAST,EAAIO,EAAS9D,MAAMwD,UAAYM,EAAS9D,MAAQuD,OAE1D,CACH,IAAMZ,EAAMjE,KAAK5E,MAAMsJ,uBACnBgB,EACA1F,KAAKC,MAAMqD,UAAUE,OAAOS,EAAI,IAAIa,UACpC9E,KAAKC,MAAMqD,UAAUE,OAAO2B,EAAG,IAAIL,UAGnCa,EAAwBD,EACxBE,EAAqBF,EAoBzB,GAnBIH,EAAKG,EAAaN,EAASjB,UAC3BwB,EAAwBJ,EAAKH,EAASjB,QAAQW,WAE9CU,EAAKE,EAAaN,EAAS9D,QAC3BsE,EAAqBJ,EAAKJ,EAAS9D,MAAMwD,YAG7CO,EAC8C,UAA1CrF,KAAK5E,MAAMmJ,4BAC+B,gBAA1CvE,KAAK5E,MAAMmJ,2BACLsB,SAASN,EAAKI,EAAuB,IACrCJ,IACVD,EAC8C,UAA1CtF,KAAK5E,MAAMmJ,4BAC+B,iBAA1CvE,KAAK5E,MAAMmJ,2BACLsB,SAASL,EAAKI,EAAoB,IAClCJ,GAGV,OAA4C,CAACF,EAAQD,GAA7BA,EAAxB,KAAkCC,EAAlC,MAGAtF,KAAKC,MAAMiF,oBACXlF,KAAKC,MAAMiF,mBACP,IAAIxB,YAAU2B,EAAUC,GACxBtF,KAAK5E,MAAM4M,e,2BAU3B,WAAiB,IAGTlC,EAHQ,SACc9F,KAAKC,MAAvB1G,EADI,EACJA,MAAOD,EADH,EACGA,OAGf,OAAQ0G,KAAK5E,MAAMmJ,4BACf,IAAK,eACL,IAAK,cACDuB,EAAS,YACT,MACJ,IAAK,QACDA,EAAS,OACT,MACJ,QACIA,EACI9F,KAAKC,MAAMkI,kBAAoBnI,KAAK4H,eAAiB,YAAc,UAG/E,IAAM7B,EAAe,CACjBC,KAAM,QACNhK,QAAS,EACT8J,UAEJ,OACI,sBACIG,IAAK,SAAAC,GACD,EAAKtB,QAAUsB,GAEnBrC,EAAG,EACHE,EAAG,EACHxK,MAAOA,EACPD,OAAQA,EACRkB,MAAOuL,EACP7K,QAAS8E,KAAK+H,iBACd5B,YAAanG,KAAKiD,uBAClBmD,UAAWpG,KAAKmD,kB,yBAK5B,SAAYiB,EAAWmE,GAAM,IAOrBzC,EAPoB,SACM9F,KAAKC,MAA3BqD,EADgB,EAChBA,UAAWhK,EADK,EACLA,OAEnB,IAAK8K,EACD,OAAO,sBAIX,OAAQpE,KAAK5E,MAAMmJ,4BACf,IAAK,eACL,IAAK,cACDuB,EAAS,YACT,MACJ,IAAK,UACDA,EACI9F,KAAKC,MAAMkI,kBAAoBnI,KAAK4H,eAAiB,YAAc,UACvE,MACJ,QACI9B,EAAS,OAIjB,IAAMO,EAAoB,CACtBL,KAAM,OACNM,YAAa,GACbC,OAAQ,OACRC,eAAgB,aAChBV,UAEE0C,EAAYxI,KAAKC,MAAMzF,MAAQwF,KAAKC,MAAMzF,MAAM+N,GAAO,GACvD9B,EAAaC,KAAM,EAAML,EAAmBmC,GAElD,IAAKxI,KAAKoF,WAAWuB,SAASvC,GAAY,CACtC,IAAMpC,EAAQoC,EAAUwC,aAAa5G,KAAKoF,YACpCjB,EAAQnC,EAAMmC,QACd7C,EAAMU,EAAMV,MAHoB,EAIvB,CAACgC,EAAUa,GAAQ,GAA3BN,EAJ+B,KAI5BE,EAJ4B,KAMlCxK,EADW+J,EAAUhC,GACJuC,EACjBtK,EAAQ,IACRA,EAAQ,GAGZ,IAAMsN,EAAS,CAAEhD,IAAGE,IAAGxK,QAAOD,UAE9B,OACI,0DACQuN,GADR,IAEI4B,IAAG,UAAKF,EAAL,YAAY9B,GACfjM,MAAOiM,EACPK,cAAc,MACd5L,QAAS,SAAAyI,GAAC,OAAI,EAAKoE,iBAAiBpE,EAAG4E,IACvCpC,YAAa,SAAAxC,GAAC,OAAI,EAAKZ,qBAAqBY,EAAG4E,IAC/CnC,UAAWpG,KAAKmD,iBAI5B,OAAO,wB,2BAGX,SAAciB,EAAWmE,GAAM,IAAD,SACIvI,KAAKC,MAA3BqD,EADkB,EAClBA,UAAWhK,EADO,EACPA,OAEnB,IAAK8K,EACD,OAAO,sBAIX,IAAM2C,EAAc,CAChBf,KAAM,QACNhK,QAAS,EACT8J,OAAQ,aAGZ,IAAK9F,KAAKoF,WAAWuB,SAASvC,GAAY,CACtC,IADsC,EACxBA,EAAUwC,aAAa5G,KAAKoF,YACf4B,SAFW,mBAE/B7C,EAF+B,KAExB7C,EAFwB,OAGvB,CAACgC,EAAUa,GAAQ,GAA3BN,EAH+B,KAG5BE,EAH4B,KAMlCxK,EAFW+J,EAAUhC,GAEJuC,EACjBtK,EAAQ,IACRA,EAAQ,GAGZ,IAAM0N,EAAajH,KAAKC,MAAMgH,WAExBC,EAAmB,CAAErD,EAAGA,EAAI,EAAGE,IAAGxK,MAAO0N,EAAY3N,UACrD6N,EAAoB,CACtBtD,EAAGA,GAAKtK,EAAQ0N,GAChBlD,IACAxK,MAAO0N,EAAa,EACpB3N,UAGJ,OACI,8BACI,gDACQ4N,GADR,IAEI1M,MAAOuM,EACPD,cAAc,MACdX,YAAa,SAAAxC,GAAC,OAAI,EAAKT,sBAAsBS,EAAG,OAAQ4E,IACxDnC,UAAWpG,KAAKmD,iBAEpB,gDACQgE,GADR,IAEI3M,MAAOuM,EACPD,cAAc,MACdX,YAAa,SAAAxC,GAAC,OAAI,EAAKT,sBAAsBS,EAAG,QAAS4E,IACzDnC,UAAWpG,KAAKmD,oBAKhC,OAAO,wB,oBAGX,WAAU,IAAD,OACL,OACI,oBAAGiE,YAAapH,KAAKqD,gBAArB,UACKrD,KAAKqH,iBACJrH,KAAKC,MAAM4H,YAAc,IAAInK,KAAI,SAAC0G,EAAWmE,GAC3C,OACI,8BACK,EAAKjB,YAAYlD,EAAWmE,GAC5B,EAAKhB,cAAcnD,EAAWmE,KAFnC,qBAAsBA,c,GAzWNf,IAAMC,WAqb9CE,GAAWD,aAAe,CACtBT,WAAY,EACZkB,kBAAkB,G,6DChbhBO,I,OAAe,CACjBC,MAAO,CACHpC,OAAQ,OACRP,KAAM,UACN4C,WAAY,IACZvO,SAAU,GACVwO,KAAM,wCAEVC,OAAQ,CACJvC,OAAQ,OACRP,KAAM,UACN4C,WAAY,IACZvO,SAAU,GACVwO,KAAM,wCAEVE,MAAO,CACH/C,KAAM,OACNO,OAAQ,WAEZyC,KAAM,CACFhD,KAAM,OACNO,OAAQ,aAsDK0C,G,uKACjB,WACIjJ,KAAKkJ,WACDlJ,KAAKC,MAAMkJ,MACXnJ,KAAKC,MAAM6B,OACV9B,KAAKC,MAAM1G,OACXyG,KAAKC,MAAM3G,OACZ0G,KAAKC,MAAMmJ,UACVpJ,KAAKC,MAAMoJ,YACZrJ,KAAKC,MAAMqJ,aACXtJ,KAAKC,MAAMsJ,SACXvJ,KAAKC,MAAMuB,KACXxB,KAAKC,MAAMuJ,OACXxJ,KAAKC,MAAM0I,MACX3I,KAAKC,MAAMwJ,UACXzJ,KAAKC,MAAMI,IACXL,KAAKC,MAAMK,O,uCAInB,SAA0BoJ,GAAY,IAE9B5H,EAcA4H,EAdA5H,MACAqH,EAaAO,EAbAP,MACA5P,EAYAmQ,EAZAnQ,MACAD,EAWAoQ,EAXApQ,OACA+P,EAUAK,EAVAL,YACAE,EASAG,EATAH,SACAC,EAQAE,EARAF,OACAhI,EAOAkI,EAPAlI,KACA4H,EAMAM,EANAN,SACAE,EAKAI,EALAJ,aACAX,EAIAe,EAJAf,MACAc,EAGAC,EAHAD,UACApJ,EAEAqJ,EAFArJ,IACAC,EACAoJ,EADApJ,IAGAuB,EAAc7B,KAAKC,MAAM6B,SAAWD,EAAcC,GAClD9B,KAAK2J,WACDR,EACArH,EACAvI,EACAD,EACA8P,EACAC,EACAC,EACAC,EACA/H,EACAgI,EACAb,EACAc,EACApJ,EACAC,GAGJN,KAAKC,MAAMuJ,SAAWA,GACtBxJ,KAAKC,MAAMkJ,QAAUA,GACrBnJ,KAAKC,MAAM1G,QAAUA,GACrByG,KAAKC,MAAM3G,SAAWA,GACtB0G,KAAKC,MAAMuB,OAASA,GACpBxB,KAAKC,MAAMsJ,WAAaA,GACxBvJ,KAAKC,MAAMoJ,cAAgBA,GAC3BrJ,KAAKC,MAAMmJ,WAAaA,GACxBpJ,KAAKC,MAAMqJ,eAAiBA,EAE5BtJ,KAAKkJ,WACDC,EACArH,GACCvI,GACAD,EACD8P,EACAC,EACAC,EACAC,EACA/H,EACAgI,EACAb,EACAc,EACApJ,EACAC,GAEGN,KAAKC,MAAM0I,QAAUA,GAC5B3I,KAAK4J,YAAYjB,K,mCAIzB,WACI,OAAO,I,qBAGX,SAAQkB,GACJ,OAAIC,UAAEC,SAASF,GACJL,aAAOK,GACPC,UAAEE,WAAWH,GACbA,EAEAL,aAAO,M,yBAItB,SAAYhP,GACR,MAAO,CACHyP,WAAYvD,KACR,EACAgC,GAAaC,MACb3I,KAAKC,MAAMzF,MAAMmO,MAAQ3I,KAAKC,MAAMzF,MAAMmO,MAAQ,IAEtDuB,WAAYxD,KACR,EACAgC,GAAaI,OACb9I,KAAKC,MAAMzF,MAAMsO,OAAS9I,KAAKC,MAAMzF,MAAMsO,OAAS,IAExDqB,UAAWzD,KACP,EACAgC,GAAaM,KACbhJ,KAAKC,MAAMzF,MAAMwO,KAAOhJ,KAAKC,MAAMzF,MAAMwO,KAAO,IAEpDoB,UAAW1D,KACP,EACAgC,GAAaK,MACb/I,KAAKC,MAAMzF,MAAMuO,MAAQ/I,KAAKC,MAAMzF,MAAMuO,MAAQ,O,wBAK9D,SAAWvO,EAAO8O,EAAchQ,GAAS,IAC7B4Q,EAAqC1P,EAArC0P,WAAYE,EAAyB5P,EAAzB4P,UAAWD,EAAc3P,EAAd2P,UAC/BE,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,SACVH,OAAO,QACPI,OAAOP,GAEZG,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,SACVH,OAAO,QACPI,OAAOL,GAEZC,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,WACVE,SAEApB,GACDe,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPM,OAAO,QACPF,OAAON,GACPS,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,KAAMtR,K,uBAIxB,SAAUkI,EAAM+H,EAAUsB,EAAS7B,EAAMlH,EAAOxI,EAAQmQ,EAAWpJ,EAAKC,GACpE,IAAIwK,EACJ,GAAa,WAATtJ,GAA8B,UAATA,EACrB,GAAIiI,EAAY,EAAG,CACf,IAAMsB,GAAYzK,EAAMD,IAAQoJ,EAAY,GAC5CqB,EAAgB9B,EAAKlH,GAChBkJ,WAAWhJ,aAAM3B,EAAKC,EAAMA,EAAM,IAAOyK,IACzCE,YAAW,SAAAC,GACR,OACWL,EADPtB,EACe/I,KAAK2K,IAAID,GAEbA,MAElBE,cAAc,QAGfN,EADAxR,GAAU,IACM0P,EAAKlH,GAChBiH,MAAM,GACNkC,YAAW,SAAAC,GACR,OACWL,EADPtB,EACe/I,KAAK2K,IAAID,GAEbA,MAElBE,cAAc,GAEHpC,EAAKlH,GAChBmJ,YAAW,SAAAC,GACR,OACWL,EADPtB,EACe/I,KAAK2K,IAAID,GAEbA,MAElBE,cAAc,QAGxB,GAAa,QAAT5J,EAAgB,CACvB,GAAY,IAARnB,EACA,MAAMgL,MAAM,4CAEhBP,EAAgB9B,EAAKlH,GAChBiH,MAAM,GAAI,OACVqC,cAAc,GAEvB,OAAON,I,wBAGX,SACI3B,EACArH,EACAvI,EACAD,EACA8P,EACAC,EACAC,EACAC,EACA/H,EACAqI,EACAlB,EACAc,EACApJ,EACAC,GAEA,IAAMuK,EAAU7K,KAAK6K,QAAQhB,GACvBb,EAAiB,SAAVG,EAAmBmC,KAAWC,KACrC/Q,EAAQwF,KAAKwL,YAAYxL,KAAKC,MAAMzF,OAClCyP,EAA2BzP,EAA3ByP,WAAYC,EAAe1P,EAAf0P,WACduB,EAAWrC,GAAYpJ,KAAKC,MAAMyL,aAAerC,EAAc,EAC/DxF,EAAc,SAAVsF,EAAmB5P,EA9StB,EA8SuC,EACxCoS,EACQ,SAAVxC,EAAmBnJ,KAAKC,MAAM0L,YAAc,GAAK,GAAK3L,KAAKC,MAAM0L,YAG/Db,EAAgB9K,KAAK4L,UACvBpK,EACA+H,EACAsB,EACA7B,EACAlH,EACAxI,EACAmQ,EACApJ,EACAC,GAIJ+J,aAAOC,IAASC,YAAYvK,OACvBwK,UAAU,KACVE,SAGL1K,KAAKgJ,KAAOqB,aAAOC,IAASC,YAAYvK,OACnC2K,OAAO,KACPC,KAAK,YAFE,oBAEwB/G,EAFxB,QAGP+G,KAAK,QAAS,SACdH,OAAOP,GACP2B,KAAKf,EAAcW,SAASA,IAC5Bd,OAAO,QACPmB,KAAKnD,GAAS3I,KAAKC,MAAM0I,OACzB8B,OAAOR,GACPW,KAAK,YAAa,eAClBA,KAAK,QAAS,cACdA,KAAK,IAAKe,GACVf,KAAK,KAAM,SACXA,KAAK,cAAe,OAEzB5K,KAAK+L,WAAWvR,EAAO8O,EAAchQ,K,wBAGzC,SACI6P,EACArH,EACAvI,EACAD,EACA8P,EACAC,EACAC,EACAC,EACA/H,EACAqI,EACAlB,EACAc,EACApJ,EACAC,GAEA,IAAMuK,EAAU7K,KAAK6K,QAAQhB,GACvBb,EAAiB,SAAVG,EAAmBmC,KAAWC,KACrC/Q,EAAQwF,KAAKwL,YAAYxL,KAAKC,MAAMzF,OACpCiR,EAAWrC,GAAYpJ,KAAKC,MAAMyL,aAAerC,EAAc,EAE/DyB,EAAgB9K,KAAK4L,UACvBpK,EACA+H,EACAsB,EACA7B,EACAlH,EACAxI,EACAmQ,EACApJ,EACAC,GAIJ+J,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,UACP2B,aACAzL,SAASP,KAAKC,MAAM+L,YACpBC,KAAKC,MACLL,KAAKf,EAAcW,SAASA,IAEjCzL,KAAK4J,YAAYjB,GAEjB3I,KAAK+L,WAAWvR,EAAO8O,EAAchQ,K,yBAGzC,SAAYqP,GACR0B,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,eACPyB,KAAKnD,K,oBAGd,WACI,OAAO,0B,GA/ToBnB,IAAMC,WAmUzCwB,GAAMvB,aAAe,CACjByE,GAAI,QACJhD,MAAO,OACP9I,IAAK,EACLC,IAAK,EACL8I,UAAU,EACVE,cAAc,EACd9H,KAAM,SACN+H,UAAU,EACVC,OAAQ,MACRmC,YAAa,EACbK,WAAY,IACZzS,MAAO,GACPiB,MAAOkO,I,IC7XU0D,G,4JACjB,WACI,MAAM,GAAN,OAAUpM,KAAKqM,YAAYC,KAA3B,wE,GAF4B9E,IAAMC,W,8BC3CpC8E,I,OAAkB,CACpBvG,KAAM,UACNO,OAAQ,OACRvK,QAAS,KAGPwQ,GAAmB,CACrBnS,SAAU,GACVoS,WAAY,OACZzG,KAAM,UACNc,cAAe,QAGb4F,GAA2B,CAC7BrS,SAAU,GACVoS,WAAY,SACZzG,KAAM,UACNc,cAAe,QAsBnB,IAAM6F,GAAY,SAAA1M,GAAU,IAChBkJ,EAAgClJ,EAAhCkJ,MAAO3O,EAAyByF,EAAzBzF,MAAOjB,EAAkB0G,EAAlB1G,MAAOD,EAAW2G,EAAX3G,OADN,EAnB3B,SAAqBkB,EAAOoS,GACxB,MAAO,CACHC,SAAUnG,KAAM,EAAM6F,GAAiB/R,EAAM8H,IAAM9H,EAAM8H,IAAM,IAC/D2H,WAAYvD,KACR,EACAkG,EAAaF,GAA2BF,GACxChS,EAAMmO,MAAQnO,EAAMmO,MAAQ,KAeH6C,CAAYhR,EAAiB,WAAV2O,GAA5C0D,EAFe,EAEfA,SAAU5C,EAFK,EAELA,WAElB,IAAKhK,EAAM6I,OAAOhB,OACd,OAAO,sBAGX,IAAMgB,EAAS7I,EAAM6I,OAAOpL,KAAI,SAACf,EAAMmQ,GACnC,GAAc,SAAV3D,EACA,OACI,4BACI,uBAAMtF,EAAG,GAAIE,EAAG,EAAGgJ,GAAE,UAAe,KAATD,EAAI,GAAV,MAAwBtS,MAAOyP,EAApD,UACI,uBAAOzP,MAAO,CAAEoO,WAAY,KAA5B,mBAAuCjM,EAAKgM,MAA5C,QACA,0CAAWhM,EAAKqQ,aAHhBF,GAShB,IAAMG,EAAOpH,SAAS5F,EAAM1G,MAAQ,EAAG,IACvC,OACI,4BACI,uBAAMsK,EAAGoJ,EAAMlJ,EAAG,EAAGgJ,GAAE,UAAe,KAATD,EAAI,GAAV,MAAwBtS,MAAOyP,EAAtD,UACI,uBAAOzP,MAAO,CAAEoO,WAAY,KAA5B,mBAAuCjM,EAAKgM,MAA5C,QACA,0CAAWhM,EAAKqQ,aAHhBF,MASVxK,EAAM,sBAAM9H,MAAOqS,EAAUhJ,EAAG,EAAGE,EAAG,EAAGxK,MAAOA,EAAOD,OAAQA,IAErE,OACI,8BACKgJ,EACAwG,MAKb6D,GAAUjF,aAAe,CACrByB,MAAO,SACP5P,MAAO,IACPD,OAAQ,IACRwN,cAAe,OACftM,MAAO,CAAEwL,KAAM,UAAWO,OAAQ,OAAQvK,QAAS,KAuCxC2Q,UC5HTJ,GAAkB,CACpBvG,KAAM,UACNO,OAAQ,OACRvK,QAAS,IAGPwQ,GAAmB,CACrBnS,SAAU,GACVoS,WAAY,OACZzG,KAAM,UACNc,cAAe,QAGb4F,GAA2B,CAC7BrS,SAAU,GACVoS,WAAY,SACZzG,KAAM,UACNc,cAAe,QAuBnB,IAAMoG,GAAQ,SAAC,GAA4C,IAA1CvE,EAAyC,EAAzCA,MAAOnO,EAAkC,EAAlCA,MAAO2O,EAA2B,EAA3BA,MAAO5P,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,OAAa,EApB1D,SAAqBkB,EAAOoS,GACxB,MAAO,CACHC,SAAUnG,KAAM,EAAM6F,GAAiB/R,EAAM8H,IAAM9H,EAAM8H,IAAM,IAC/D2H,WAAYvD,KACR,EACAkG,EAAaF,GAA2BF,GACxChS,EAAMmO,MAAQnO,EAAMmO,MAAQ,KAeH6C,CAAYhR,EAAiB,WAAV2O,GAA5C0D,EAD8C,EAC9CA,SAAU5C,EADoC,EACpCA,WAEZgD,EAAiB,WAAV9D,EAAqBtD,SAAStM,EAAQ,EAAG,IAAM,GAEtDuS,EACF,sBAAMjI,EAAGoJ,EAAMlJ,EAAG,EAAGgJ,GAAG,QAAQvS,MAAOyP,EAAvC,SACKtB,IAIHrG,EAAM,sBAAMuB,EAAG,EAAGE,EAAG,EAAGvJ,MAAOqS,EAAUtT,MAAOA,EAAOD,OAAQA,IAErE,OACI,8BACKgJ,EACAwJ,MAKboB,GAAMxF,aAAe,CACjByB,MAAO,SACP5P,MAAO,IACPD,OAAQ,IACRwN,cAAe,QA+BJoG,UCzFMC,G,gKACjB,SAAWF,GACP,OACI,sBACIzS,MAAOwF,KAAKC,MAAMmN,UAAUC,KAC5BC,GAAIL,EACJM,GAAI,EACJC,GAAIP,EACJQ,GAAIzN,KAAKC,MAAM3G,W,8BAK3B,SAAiB4R,GACb,IAMIwC,EAAO,UAAMxC,GACjB,GAA8B,QAA1BlL,KAAKC,MAAM0N,WAEXD,EADkBC,aAAW,KACnBC,CAAU1C,QACjB,GAA8B,UAA1BlL,KAAKC,MAAM0N,WAAwB,CAE1CD,EADkBC,aAAW,KACnBC,CAAU1C,QACjB,GAA8B,SAA1BlL,KAAKC,MAAM0N,WAAuB,CAEzCD,EADkBC,aAAW,KACnBC,CAAU1C,QACjB,GAA8B,aAA1BlL,KAAKC,MAAM0N,WAClBD,EAAUG,KAAOtN,UAAU2K,GAAG1B,cAC3B,GAAIM,UAAEC,SAAS/J,KAAKC,MAAM0N,YAAa,CAE1CD,EADkBC,aAAW3N,KAAKC,MAAM0N,WAC9BC,CAAU1C,QACbpB,UAAEE,WAAWhK,KAAKC,MAAM0N,cAC/BD,EAAU1N,KAAKC,MAAM0N,WAAWzC,IAGpC,OACI,sBAAMrH,EAAG,EAAGE,EAAG,EAAGgJ,GAAG,QAAQvS,MA1Bf,CACdH,SAAU,GACVoS,WAAY,OACZzG,KAAM,WAuBN,SACK0H,M,2BAKb,SAAcT,GACV,IAAMa,EAAI9N,KAAKC,MAAM8N,UAEfC,EAAe,CACjB7E,MAAO,OACP3O,MAAO,CACH8H,IAAKtC,KAAKC,MAAMmN,UAAU9K,IAC1BqG,MAAO3I,KAAKC,MAAMmN,UAAUzE,OAEhCpP,MAAOyG,KAAKC,MAAM8N,UAClBzU,OAAQ0G,KAAKC,MAAMgO,YAGvB,GAAIjO,KAAKC,MAAMiO,WAAY,CACvB,IAAMC,EAAUrE,UAAEC,SAAS/J,KAAKC,MAAMiO,YAClC,cAAC,GAAD,2BAAWF,GAAX,IAAyBrF,MAAO3I,KAAKC,MAAMiO,cAE3C,cAAC,GAAD,2BAAeF,GAAf,IAA6BlF,OAAQ9I,KAAKC,MAAMiO,cAGpD,OAAIjB,EAAO,GAAKa,EAAI9N,KAAKC,MAAM1G,MAAQ,GAE/B,oBAAG6U,UAAS,oBAAenB,EAAO,GAAtB,IAA4B,EAA5B,KAAZ,UACKjN,KAAKC,MAAMoO,SAAWrO,KAAKsO,iBAAiBtO,KAAKC,MAAMsO,MAAQ,KAChE,mBAAGH,UAAS,sBAAiBpO,KAAKC,MAAMoO,SAAW,GAAK,EAA5C,KAAZ,SAA+DF,OAKvE,oBAAGC,UAAS,oBAAenB,EAAOa,EAAI,GAA1B,IAAgC,EAAhC,KAAZ,UACK9N,KAAKC,MAAMoO,SAAWrO,KAAKsO,iBAAiBtO,KAAKC,MAAMsO,MAAQ,KAChE,mBAAGH,UAAS,sBAAiBpO,KAAKC,MAAMoO,SAAW,GAAK,EAA5C,KAAZ,SAA+DF,OAI3E,OAAO,wB,oBAGX,WACI,IAAMlB,EAAOjN,KAAKC,MAAMqD,UAAUtD,KAAKC,MAAMsO,MAC7C,OAAItB,EAEI,8BACKjN,KAAKC,MAAMuO,SAAWxO,KAAKyO,WAAWxB,GAAQ,KAC9CjN,KAAKC,MAAMyO,YAAc1O,KAAK2O,cAAc1B,GAAQ,QAI1D,S,GA9FyBzF,IAAMC,WA2L9C0F,GAAWzF,aAAe,CACtBkH,SAAS,EACTF,aAAa,EACbF,UAAU,EACVH,UAAU,EACVjB,UAAW,CACPC,KAAM,CACF9G,OAAQ,OACRT,OAAQ,YACRgB,cAAe,QAEnBxE,IAAK,CACD0D,KAAM,QACNhK,QAAS,GACTuK,OAAQ,OACRO,cAAe,QAEnB+H,IAAK,CACD7I,KAAM,SAGd+H,UAAW,GACXE,WAAY,I,IC1NKa,G,WACjB,WAAY9C,EAAYC,EAAM8C,GAAW,oBACrC/O,KAAKmM,GAAKrC,UAAEkF,SAAS,UACrBhP,KAAKiM,KAAOA,EACZjM,KAAKiP,eAAiBjD,EACtBhM,KAAK+O,SAAWA,EAEhB/O,KAAKkP,YAAc,KACnBlP,KAAKmP,YAAc,KACnBnP,KAAKoP,aAAe,KACpBpP,KAAKqP,SAAW,K,0CAGpB,WAAU,IAAD,OACDC,EAAgB,EAEftP,KAAKuP,iBAGND,EAAgB9M,OAAOgN,YAAYC,MAAQzP,KAAKuP,iBAFhDvP,KAAKuP,iBAAmB/M,OAAOgN,YAAYC,MAK/C,IAAMC,EAAoB1P,KAAKiP,eACzBzO,KAAKH,IAAIiP,EAAgBtP,KAAKiP,eAAgB,GAC9C,EAEN,GAAKjP,KAAKmP,YAAV,CAIA,GAAInP,KAAK+O,SAAU,CACf,IAAMY,EAAQ3P,KAAKkP,YACbU,EAAQ5P,KAAKmP,YACb3J,EAAKxF,KAAKiM,KAAKyD,GAMrB1P,KAAK+O,UALU,SAAAlL,GACX,IAAMgM,EAAIF,EAAM9L,GAEhB,OAAOgM,GADGD,EAAM/L,GACAgM,GAAKrK,KAKzBkK,EAAoB,EAEpBI,YAAW,kBAAM,EAAKC,WAAU,KAGhC/P,KAAKkP,YAAclP,KAAKmP,YACxBnP,KAAKmP,YAAc,KACnBnP,KAAKuP,iBAAmB,S,sBAOhC,SAAS9G,EAAK3G,GAAQ,IAAD,OAEZ9B,KAAKkP,aAaNzG,IAAQzI,KAAKqP,WACbrP,KAAKmP,YAAcrN,EACnB9B,KAAKoP,aAAe,KACpBpP,KAAKuP,iBAAmB,KACxBO,YAAW,kBAAM,EAAKC,WAAU,IAGpC/P,KAAKqP,SAAW5G,GAnBZzI,KAAKkP,YAAcpN,I,oBA8B3B,WAAU,IAAD,OAIL,OAHIgI,UAAEkG,OAAOhQ,KAAKoP,gBACdpP,KAAKoP,aAAe,SAAAa,GAAC,OAAI,EAAKf,YAAYe,KAEvCjQ,KAAKoP,e,yBAQhB,WACI,OAAOpP,KAAKmP,YAAcnP,KAAKmP,YAAcnP,KAAKkP,c,wBAMtD,WACI,OAAOlP,KAAKiP,mB,SC5CCiB,G,kDACjB,WAAYjQ,GAAQ,IAAD,uBACf,cAAMA,IAeVkQ,aAAe,SAAAC,GAAK,OAChBC,6BAAmBD,EAAM5O,KAAMyH,KAC9Ba,UAAEwG,IAAIF,EAAMnQ,MAAO,QAAU6J,UAAEwG,IAAIF,EAAMnQ,MAAO,QAXjD,IAAMsQ,EAASzG,UAAEkF,SAAS,SACpBwB,EAAW,eAAWD,EAAX,KARF,OASf,EAAKnV,MAAQ,CACTmV,SACAC,eAEJ,EAAKC,SAAU,EAbA,E,gDAoBnB,SAAaxQ,GAAQ,IAAD,OACVyQ,EAAazQ,EAAMyQ,WACnBC,GAAe1Q,EAAM3G,OAAsB,EAAboX,EAC9BE,EAAWF,EACXG,EAAcF,EAAcD,EAClClJ,IAAMsJ,SAASC,QAAQ9Q,EAAM+Q,UAAU,SAAAZ,GACnC,GAAc,OAAVA,GACA,EAAKD,aAAaC,GAAQ,CAAC,IAYvBtO,EAZsB,EACgCsO,EAAMnQ,MAAxDkM,EADkB,EAClBA,GAAI7L,EADc,EACdA,IAAKD,EADS,EACTA,IADS,IACJ2L,kBADI,MACS,EADT,MACYxK,YADZ,MACmB,SADnB,EAErBsI,UAAEwG,IAAI,EAAKW,SAAU9E,KAGtB,EAAK8E,SAAS9E,GAAM,IAAI2C,GAAkB9C,EAAYE,MAAY,SAAAgF,GAC9D,IAAMC,EAAiB,EAAK/V,MAAM+V,eAClCA,EAAehF,GAAM+E,EACjB,EAAKT,SAAS,EAAKnM,SAAS6M,OAOpCrP,EAFAgI,UAAEwG,IAAIF,EAAMnQ,MAAO,UAEXmQ,EAAMnQ,MAAMmR,OAhGxC,SAAqBC,EAAO7P,EAAMnB,EAAKC,EAAKgR,EAAI/D,GAC5C,IAAIzL,EACJ,GAAIgI,UAAEyH,YAAYlR,IAAQyJ,UAAEyH,YAAYjR,GACpCwB,EAAQ,UACL,GAAa,WAATN,EACPM,EAAQ0P,cACHzP,OAAO,CAAC1B,EAAKC,IACb0B,MAAM,CAACsP,EAAI/D,IACXkE,YACF,GAAa,QAATjQ,EAAgB,CACvB,IAAMkQ,EAAOL,EAAMpR,MAAM0R,SAAW,GACpC7P,EAAQ8P,cACHF,KAAKA,GACL3P,OAAO,CAAC1B,EAAKC,IACb0B,MAAM,CAACsP,EAAI/D,SACb,GAAa,UAAT/L,EAAkB,CACzB,IAAMqQ,EAAQR,EAAMpR,MAAM6R,eAAiB,EAC3ChQ,EAAQiQ,cACHC,SAASH,GACT9P,OAAO,CAAC1B,EAAKC,IACb0B,MAAM,CAACsP,EAAI/D,IAEpB,OAAOzL,EA6EiBmQ,CAAY7B,EAAO5O,EAAMnB,EAAKC,EAAKuQ,EAAaD,GAI5D,IAAMvB,EAAQ,UAAM7N,EAAN,YAAcnB,EAAd,YAAqBC,EAArB,YAA4BuQ,EAA5B,YAA2CD,GACzD,EAAKK,SAAS9E,GAAI+F,SAAS7C,EAAUvN,OAK7C,IAAMqQ,EAAY,GAClBrI,UAAEiH,QAAQ/Q,KAAKiR,UAAU,SAACmB,EAAcjG,GACpCgG,EAAUhG,GAAMiG,EAAaC,YAG7BrS,KAAKyQ,SAASzQ,KAAKsE,SAAS,CAAE6M,eAAgBgB,M,gCAGtD,WAMInS,KAAKiR,SAAW,GAChBjR,KAAKsS,aAAatS,KAAKC,S,uCAO3B,SAA0ByJ,GACtB1J,KAAKsS,aAAa5I,K,kCAEtB,WACI1J,KAAKyQ,SAAU,I,oBAEnB,WAAU,IAyDFrC,EACAjC,EACAlM,EACA+I,EA5DC,SACiChJ,KAAKC,MAAnCnE,EADH,EACGA,YAAarC,EADhB,EACgBA,aAEf8Y,EAAO,GACPC,EAAY,GAEZ7B,GAAe3Q,KAAKC,MAAM3G,OAAiC,EAAxB0G,KAAKC,MAAMyQ,WAc9C+B,EAAW,GACXC,EAAe,GACfC,EAAgB,GAClBC,GAAY,EAChBpL,IAAMsJ,SAASC,QAAQ/Q,KAAKC,MAAM+Q,UAAU,SAAAZ,GACxC,GAAc,OAAVA,EACJ,GAAIC,6BAAmBD,EAAM5O,KAAM4K,IAC/BwG,GAAY,MACT,CACH,IAAMzG,EAAKiE,EAAMnQ,MAAMkM,GAEvB,GAAI,EAAKgE,aAAaC,GAAQ,CAC1B,IAAMiB,EAAQjB,EAEViB,EAAMpR,MAAMkM,KAA8B,IAAxBkF,EAAMpR,MAAM2O,UAE9B6D,EAASpB,EAAMpR,MAAMkM,IAAMkF,GAI3BuB,EACAF,EAAaG,KAAK1G,GAElBwG,EAAcE,KAAK1G,QAOnCuG,EAAaI,UAWb,IAAI7F,EAAO,EAGL8F,EAAYjJ,UAAEkJ,OAAOhT,KAAKC,MAAMgT,gBAAgB,SAACpD,EAAGqD,GAAJ,OAAUrD,EAAIqD,IAAG,GACjEC,EAAarJ,UAAEkJ,OAAOhT,KAAKC,MAAMmT,iBAAiB,SAACvD,EAAGqD,GAAJ,OAAUrD,EAAIqD,IAAG,GACnEG,EAAarT,KAAKC,MAAM1G,MAAQwZ,EAAYI,EAAarX,EAAcrC,EAE7EwT,EAAO8F,EACP,IACI,IAAIO,EAAkB,EACtBA,EAAkBtT,KAAKC,MAAMgT,eAAenL,OAC5CwL,GAAmB,EACrB,CACE,IAAMC,EAAWvT,KAAKC,MAAMgT,eAAeK,GAC3CrG,GAAQsG,EACJA,EAAW,GAAKD,EAAkBZ,EAAa5K,SAC/CqE,EAAKuG,EAAaY,GACdxJ,UAAEwG,IAAImC,EAAUtG,KAChBiC,EAAS,oBAAgBnB,EAAOnR,EAAvB,OAGTmE,EAAQ,CACJ1G,MAAOga,EACPja,OAAQqX,EACRtH,YAAagK,EACb3H,YAAiC,IAApB4H,EACbnK,MAAO,OACPrH,MAAO9B,KAAKiR,SAAS9E,GAAIqH,eAI7BxK,EAAOxB,IAAMiM,aAAahB,EAAStG,GAAKlM,GAExCsS,EAAKM,KACD,mBAA0CzE,UAAWA,EAArD,SACKpF,GADL,sBAAuBsK,OAQvCrG,EAAOjN,KAAKC,MAAM1G,MAAQ4Z,EAAa1Z,EACvC,IACI,IAAIia,EAAmB,EACvBA,EAAmB1T,KAAKC,MAAMmT,gBAAgBtL,OAC9C4L,GAAoB,EACtB,CACE,IAAMH,EAAWvT,KAAKC,MAAMmT,gBAAgBM,GACxCH,EAAW,GAAKG,EAAmBf,EAAc7K,SACjDqE,EAAKwG,EAAce,GACf5J,UAAEwG,IAAImC,EAAUtG,KAChBiC,EAAS,oBAAgBnB,EAAOnR,EAAvB,OAGTmE,EAAQ,CACJ1G,MAAOga,EACPja,OAAQqX,EACRtH,YAAagK,EAEb3H,YAAkC,IAArBgI,EACbvK,MAAO,QACPrH,MAAO9B,KAAKiR,SAAS9E,GAAIqH,eAI7BxK,EAAOxB,IAAMiM,aAAahB,EAAStG,GAAKlM,GAExCsS,EAAKM,KACD,mBAA4CzE,UAAWA,EAAvD,SACKpF,GADL,uBAAwB0K,OAOpCzG,GAAQsG,EAUZ,IAAMI,EAAc,oBAAgBZ,EAAYjX,EAA5B,OAEhB8X,EAAW,EACfpM,IAAMsJ,SAASC,QAAQ/Q,KAAKC,MAAM+Q,UAAU,SAAAZ,GACxC,GAAc,OAAVA,GACAC,6BAAmBD,EAAM5O,KAAM4K,IAAS,CACxC,IAAMyH,EAASzD,EACf5I,IAAMsJ,SAASC,QAAQ8C,EAAO5T,MAAM+Q,UAAU,SAAA8C,GAC1C,IAAKhK,UAAEwG,IAAIwD,EAAM7T,MAAO,YAAc6T,EAAM7T,MAAM2O,QAAS,CACvD,IAAI9M,EAAQ,KACRgI,UAAEwG,IAAI,EAAKlV,MAAM+V,eAAgB2C,EAAM7T,MAAM+I,QAC7ClH,EAAQ,EAAK1G,MAAM+V,eAAe2C,EAAM7T,MAAM+I,OAGlD,IAAI+K,EAAc,KACdjK,UAAEwG,IAAI,EAAKW,SAAU6C,EAAM7T,MAAM+I,QACjC+K,EAAc,EAAK9C,SAAS6C,EAAM7T,MAAM+I,OAG5C,IAAMgL,EAAa,CACfvL,IAAKmL,EACLra,MAAO8Z,EACP/Z,OAAQqX,EACRrN,UAAW,EAAKrD,MAAMqD,UACtBqK,WAAY,EAAK1N,MAAM0N,YAGvB7L,IACAkS,EAAW5C,OAAStP,GAGpBiS,IACAC,EAAWhI,WAAa+H,GAG5BvB,EAAUK,KAAKrL,IAAMiM,aAAaK,EAAOE,IACzCJ,GAAY,UAa5B,IAAMK,EAAY,GACZC,EAAiB,GACvBN,EAAW,EACXpM,IAAMsJ,SAASC,QAAQ/Q,KAAKC,MAAM+Q,UAAU,SAAAZ,GACxC,GAAc,OAAVA,EAAJ,CACA,GACIC,6BAAmBD,EAAM5O,KAAMqB,KAC/BwN,6BAAmBD,EAAM5O,KAAMmG,IACjC,CACE,IAAMwM,EAAa,CACf1L,IAAI,SAAD,OAAWmL,GACdra,MAAO8Z,EACP/Z,OAAQqX,EACRrN,UAAW,EAAKrD,MAAMqD,WAEtB+M,6BAAmBD,EAAM5O,KAAMqB,IAC/BoR,EAAUpB,KAAKrL,IAAMiM,aAAarD,EAAO+D,IAEzCD,EAAerB,KAAKrL,IAAMiM,aAAarD,EAAO+D,IAGtDP,GAAY,MAGhB,IA8CIQ,EA9CEP,EACF,mBAAGzF,UAAWuF,EAAd,SACI,mBAAgBU,SAAUrU,KAAK5E,MAAMoV,YAArC,SACKgC,GADE,WADuB,oBAUhC8B,EACF,+BACI,0BAAUnI,GAAInM,KAAK5E,MAAMmV,OAAzB,SACI,sBACI1M,EAAE,IACFE,EAAE,IACFvJ,MAAO,CAAE+Z,cAAe,GACxBhb,MAAO8Z,EACP/Z,OAAQqX,QASlB6D,EACF,mBAAGpG,UAAWuF,EAAd,SACKM,GAD6B,eAQhCQ,EACF,mBAAGrG,UAAWuF,EAAd,SACKO,GAD6B,qBAStC,GAAIlU,KAAKC,MAAMyU,YAAa,CACxB,IACMC,EAAkB,CACpBhH,WAFe3N,KAAKC,MAAM2U,mBAAqB5U,KAAKC,MAAM0N,WAG1Da,UAAU,EACVH,SAAUrO,KAAKC,MAAM4U,gBACrBtG,KAAMvO,KAAKC,MAAMyU,YACjBpR,UAAWtD,KAAKC,MAAMqD,UACtB/J,MAAO8Z,EACPjG,UAAWpN,KAAKC,MAAM6U,cAEtB9U,KAAKC,MAAM8U,oBACXJ,EAAgB5G,UAAY/N,KAAKC,MAAM+U,iBACvCL,EAAgB1G,WAAajO,KAAKC,MAAMgV,kBACxCN,EAAgBzG,WAAalO,KAAKC,MAAM8U,kBACxCJ,EAAgBhH,WAAa3N,KAAKC,MAAM2U,mBAE5C,IAGMM,EAAgB,oBAAgBnC,EAAYjX,EAA5B,OAEtBsY,EACI,mBAAuB5Z,MANN,CACjBsM,cAAe,QAK6BsH,UAAW8G,EAAvD,SACI,cAAC,GAAD,eAAgBP,KADb,iBAMf,OACI,8BACKL,EACA/B,EACAsB,EACAW,EACAC,EACAL,S,GAnYqB5M,IAAMC,WAyY5CyI,GAASxI,aAAe,CACpBkN,kBAAmB,cACnBO,eAAe,EACf7b,OAAQ,IACRoX,WAAY,EACZ9B,SAAS,G,ICjcQwG,G,kDACjB,WAAYnV,GAAQ,IAAD,8BACf,cAAMA,IAED7E,MAAQ,CACTia,WAAW,EACXC,gBAAiB,KACjBC,cAAe,KACfC,mBAAoB,MAGxB,EAAKC,kBAAoB,EAAKA,kBAAkBzS,KAAvB,gBACzB,EAAK0S,gBAAkB,EAAKA,gBAAgB1S,KAArB,gBACvB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAK2S,eAAiB,EAAKA,eAAe3S,KAApB,gBACtB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAK4S,kBAAoB,EAAKA,kBAAkB5S,KAAvB,gBAfV,E,qDAkBnB,WACIhD,KAAK6V,gBAAgBxR,iBAAiB,QAASrE,KAAKyV,kBAAmB,CAAEK,SAAS,M,oCAItF,SAAuBnS,GACnB,IAAMgB,EAAS1C,GAAiBjC,KAAK+V,WAC/BlS,EAAIF,EAAEG,MAAQa,EAAOtI,KACrB0H,EAAIJ,EAAEK,MAAQW,EAAOvI,IAC3B,MAAO,CAACoE,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,M,+BAOtC,SAAkBJ,GACd,GAAK3D,KAAKC,MAAMkV,eAAkBnV,KAAKC,MAAM+V,eAA7C,CAIArS,EAAEC,iBAEF,IACI9B,EAAQ,EADS,KACL6B,EAAEsS,OACdnU,EAAQ,IACRA,EAAQ,GAERA,EAAQ,KACRA,EAAQ,IAGZ,IAAMqD,EAAKnF,KAAKkW,uBAAuBvS,GAEjCQ,EAAQnE,KAAKC,MAAM6B,MAAMC,SAAS,GAAG+C,UACrCxD,EAAMtB,KAAKC,MAAM6B,MAAMC,SAAS,GAAG+C,UACnCqR,EAASnW,KAAKC,MAAM6B,MAAM0B,OAAO2B,EAAG,IAAIL,UAE1CsR,EAAcD,EAAStQ,UAAUsQ,EAAShS,GAASrC,EAAO,IAC1DuU,EAAYF,EAAStQ,UAAUvE,EAAM6U,GAAUrU,EAAO,IAGtDvB,GAAYe,EAAM6C,GAASrC,EAE/B,GAAI9B,KAAKC,MAAMqW,YAAa,CACxB,IAAMA,EAAczQ,SAAS7F,KAAKC,MAAMqW,YAAa,IACjD/V,EAAWP,KAAKC,MAAMqW,cACtBF,EAAcD,GAAWA,EAAShS,IAAU7C,EAAM6C,GAAUmS,EAC5DD,EAAYF,GAAW7U,EAAM6U,IAAW7U,EAAM6C,GAAUmS,GAIhE,GAAItW,KAAKC,MAAMsW,SAAWvW,KAAKC,MAAMuW,QAAS,CAC1C,IAAMC,EAAczW,KAAKC,MAAMuW,QAAQ1R,UAAY9E,KAAKC,MAAMsW,QAAQzR,UAClEvE,EAAWkW,IACXlW,EAAWkW,GAKfzW,KAAKC,MAAMsW,SAAWH,EAAcpW,KAAKC,MAAMsW,QAAQzR,YAEvDuR,GADAD,EAAcpW,KAAKC,MAAMsW,QAAQzR,WACPvE,GAG1BP,KAAKC,MAAMuW,SAAWH,EAAYrW,KAAKC,MAAMuW,QAAQ1R,YAErDsR,GADAC,EAAYrW,KAAKC,MAAMuW,QAAQ1R,WACLvE,GAG9B,IAAM8E,EAAW,IAAIhE,KAAK+U,GACpB9Q,EAAS,IAAIjE,KAAKgV,GAElBK,EAAe,IAAIhT,YAAU2B,EAAUC,GAEzCtF,KAAKC,MAAM0W,QACX3W,KAAKC,MAAM0W,OAAOD,M,6BAI1B,SAAgB/S,GACZ,IAAK3D,KAAKC,MAAMkV,eAAkBnV,KAAKC,MAAM+V,iBAI5B,IAAbrS,EAAEiT,OAAN,CASA,GALAjT,EAAEC,iBAEFxB,SAASiC,iBAAiB,YAAarE,KAAKqD,iBAC5CjB,SAASiC,iBAAiB,UAAWrE,KAAKmD,eAEtCnD,KAAKC,MAAM+V,eAAgB,CAC3B,IAAMa,EAAW7W,KAAKkW,uBAAuBvS,GAC7C3D,KAAKsE,SAAS,CACVwS,YAAY,EACZC,gBAAiBF,EAAS,GAC1BG,gBAAiBH,EAAS,KAIlC,GAAI7W,KAAKC,MAAMkV,cAAe,CAC1B,IAAMtR,EAAIF,EAAEG,MACNC,EAAIJ,EAAEK,MACNC,EAAM,CAACzD,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IAEjCI,EAAQnE,KAAKC,MAAM6B,MAAMC,SAAS,GAAG+C,UACrCxD,EAAMtB,KAAKC,MAAM6B,MAAMC,SAAS,GAAG+C,UAEzC9E,KAAKsE,SAAS,CACV+Q,WAAW,EACXC,gBAAiBnR,EACjBoR,cAAejU,EACfkU,mBAAoBvR,IAI5B,OAAO,K,2BAGX,SAAcN,GACV,GAAK3D,KAAKC,MAAMgX,cAAiBjX,KAAKC,MAAMkV,eAAkBnV,KAAKC,MAAM+V,eAAzE,CAIArS,EAAEuT,kBAEF9U,SAAS4C,oBAAoB,YAAahF,KAAKqD,iBAC/CjB,SAAS4C,oBAAoB,UAAWhF,KAAKmD,eAE7C,IAAM0T,EAAW7W,KAAKkW,uBAAuBvS,GAEvCE,EAAIF,EAAEG,MACNuR,EACFrV,KAAK5E,MAAMoa,oBAAsBhV,KAAK2K,IAAItH,EAAI7D,KAAK5E,MAAMoa,mBAAmB,IAAM,EAChFsB,EACF9W,KAAK5E,MAAM2b,iBAAmBvW,KAAK2K,IAAI0L,EAAS,GAAK7W,KAAK5E,MAAM2b,iBAAmB,EAMvF,IAJI/W,KAAKC,MAAMgX,cAAiB5B,GAAcyB,GAC1C9W,KAAKC,MAAMgX,aAAaJ,EAAS,GAAIA,EAAS,IAG9C7W,KAAKC,MAAM+V,eAAgB,CAC3B,GAAIc,EAAY,CACZ,IAAM1V,EAAQpB,KAAKC,MAAM6B,MAAM0B,OAAOxD,KAAK5E,MAAM2b,iBAAiBjS,UAC5DxD,EAAMtB,KAAKC,MAAM6B,MAAM0B,OAAOxD,KAAK5E,MAAM4b,iBAAiBlS,UAE5DO,EAAWQ,SAASzE,EAAO,IAC3BkE,EAASO,SAASvE,EAAK,IAEvBtB,KAAKC,MAAMsW,SAAWlR,EAAWrF,KAAKC,MAAMsW,QAAQzR,YACpDO,EAAWrF,KAAKC,MAAMsW,QAAQzR,WAG9B9E,KAAKC,MAAMuW,SAAWlR,EAAStF,KAAKC,MAAMuW,QAAQ1R,YAClDQ,EAAStF,KAAKC,MAAMuW,QAAQ1R,WAGhC,IAAM4R,EAAe,IAAIhT,YAAU,CAAC2B,EAAUC,GAAQ6R,QAClDnX,KAAKC,MAAM0W,QACX3W,KAAKC,MAAM0W,OAAOD,GAI1B1W,KAAKsE,SAAS,CACVwS,YAAY,EACZC,gBAAiB,KACjBxB,cAAe,KACfyB,gBAAiB,OAIrBhX,KAAKC,MAAMkV,eACXnV,KAAKsE,SAAS,CACV+Q,WAAW,EACXC,gBAAiB,KACjBC,cAAe,KACfC,mBAAoB,U,4BAKhC,SAAe7R,GACXA,EAAEC,iBAEE5D,KAAKC,MAAMmX,YACXpX,KAAKC,MAAMmX,e,6BAInB,SAAgBzT,GACZA,EAAEC,iBACF,IAAMC,EAAIF,EAAEG,MACNC,EAAIJ,EAAEK,MACNmB,EAAK,CAAC3E,KAAK0D,MAAML,GAAIrD,KAAK0D,MAAMH,IAChC8S,EAAW7W,KAAKkW,uBAAuBvS,GAM7C,GALI3D,KAAK5E,MAAM0b,YACX9W,KAAKsE,SAAS,CACV0S,gBAAiBH,EAAS,KAG9B7W,KAAK5E,MAAMia,UAAW,CACtB,IAAMpR,EAAMjE,KAAK5E,MAAMoa,mBACjB9P,EACF1F,KAAKC,MAAM6B,MAAM0B,OAAO2B,EAAG,IAAIL,UAC/B9E,KAAKC,MAAM6B,MAAM0B,OAAOS,EAAI,IAAIa,UAEhCO,EAAWQ,SAAS7F,KAAK5E,MAAMka,gBAAkB5P,EAAY,IAC7DJ,EAASO,SAAS7F,KAAK5E,MAAMma,cAAgB7P,EAAY,IACvDnF,EAAWsF,SAAS7F,KAAK5E,MAAMma,cAAgBvV,KAAK5E,MAAMka,gBAAiB,IAE7EtV,KAAKC,MAAMsW,SAAWlR,EAAWrF,KAAKC,MAAMsW,QAAQzR,YAEpDQ,GADAD,EAAWrF,KAAKC,MAAMsW,QAAQzR,WACVvE,GAGpBP,KAAKC,MAAMuW,SAAWlR,EAAStF,KAAKC,MAAMuW,QAAQ1R,YAElDO,GADAC,EAAStF,KAAKC,MAAMuW,QAAQ1R,WACRvE,GAGxB,IAAMmW,EAAe,IAAIhT,YAAU2B,EAAUC,GACzCtF,KAAKC,MAAM0W,QACX3W,KAAKC,MAAM0W,OAAOD,QAEnB,GAAI1W,KAAKC,MAAMmH,YAAa,CAC/B,IAAMiQ,EAAgBrX,KAAKkW,uBAAuBvS,GAC9C3D,KAAKC,MAAMmH,aACXpH,KAAKC,MAAMmH,YAAYiQ,EAAc,GAAIA,EAAc,O,+BAKnE,SAAkB1T,GACd,IAAIE,EAAIF,EAAEG,MACNC,EAAIJ,EAAEK,MACNhE,KAAKC,MAAMqX,eACXtX,KAAKC,MAAMqX,cAAczT,EAAGE,K,oBAQpC,WAAU,IAAD,OACC+B,EAAS9F,KAAK5E,MAAMia,UAAY,mBAAqB,UACrDkC,EAAW,CACbpR,YAAanG,KAAK0V,gBAClBtO,YAAapH,KAAKqD,gBAClB+T,WAAYpX,KAAK2V,eACjBvP,UAAWpG,KAAKmD,cAChBmU,cAAetX,KAAK4V,mBAExB,OACI,4CACI9O,cAAc,MACdb,IAAK,SAAAC,GACD,EAAK2P,gBAAkB3P,IAEvBqR,GALR,cAOI,sBAEItR,IAAK,SAAAC,GACD,EAAK6P,UAAY7P,GAErB1L,MAAO,CAAEwL,KAAM,OAAQhK,QAAS,EAAK8J,UACrCjC,EAAG,EACHE,EAAG,EACHxK,MAAOyG,KAAKC,MAAM1G,MAClBD,OAAQ0G,KAAKC,MAAM3G,QARf,oBAUP0G,KAAKC,MAAM+Q,SACXhR,KAAK5E,MAAM0b,YACR,sBACItc,MAAO,CAAEwB,QAAS,GAAKgK,KAAM,QAC7BnC,EAAGrD,KAAKH,IAAIL,KAAK5E,MAAM4b,gBAAiBhX,KAAK5E,MAAM2b,iBACnDhT,EAAG,EACHxK,MAAOiH,KAAK2K,IAAInL,KAAK5E,MAAM4b,gBAAkBhX,KAAK5E,MAAM2b,iBACxDzd,OAAQ0G,KAAKC,MAAM3G,OACnBwN,cAAc,iB,GA9SIU,IAAMC,WAuUhD2N,GAAa1N,aAAe,CACxByN,eAAe,EACfa,gBAAgB,G,gEC3UpB,SAASnU,GAAcC,GACnB,MAAM,GAAN,OAAUA,EAAMC,SAASyV,WAAzB,YAAuC1V,EAAME,QAAQwV,YAGzD,IAAM9O,GAAe,CACjBI,OAAQ,CACJvC,OAAQ,OACRP,KAAM,UACN4C,WAAY,IACZvO,SAAU,GACVwO,KAAM,wCAEVE,MAAO,CACH/C,KAAM,OACNO,OAAQ,WAEZyC,KAAM,CACFhD,KAAM,OACNO,OAAQ,YASKkR,G,uKACjB,WAAqB,IAAD,EACgCzX,KAAKC,MAA7C6B,EADQ,EACRA,MAAO0H,EADC,EACDA,OAAQJ,EADP,EACOA,SAAUsO,EADjB,EACiBA,WACjC1X,KAAK2X,eAAe7V,EAAO0H,EAAQJ,EAAUsO,K,uCAGjD,SAA0BhO,GAAY,IAC1B5H,EAA6C4H,EAA7C5H,MAAO8V,EAAsClO,EAAtCkO,IAAKpO,EAAiCE,EAAjCF,OAAQJ,EAAyBM,EAAzBN,SAAUsO,EAAehO,EAAfgO,WAElC7V,GAAc7B,KAAKC,MAAM6B,SAAWD,GAAcC,IAClD9B,KAAKC,MAAM2X,MAAQA,GACnB5X,KAAKC,MAAMmJ,WAAaA,GACxBpJ,KAAKC,MAAMyX,aAAeA,GAE1B1X,KAAK2X,eAAe7V,EAAO0H,EAAQJ,EAAUsO,K,mCAMrD,WAEI,OAAO,I,yBAGX,SAAYld,GACR,MAAO,CACH0P,WAAYxD,KACR,EACAgC,GAAaI,OACb9I,KAAKC,MAAMzF,MAAMsO,OAAS9I,KAAKC,MAAMzF,MAAMsO,OAAS,IAExDsB,UAAW1D,KACP,EACAgC,GAAaK,MACb/I,KAAKC,MAAMzF,MAAMuO,MAAQ/I,KAAKC,MAAMzF,MAAMuO,MAAQ,O,4BAK9D,SAAejH,EAAO0H,EAAQJ,EAAUsO,GACpC,IAAI1O,EAEEyC,EAAWrC,GAAYsO,EAAa,GACpCE,EAAM5X,KAAKC,MAAM2X,IACjBnO,EAAYzJ,KAAKC,MAAMwJ,UACvBjP,EAAQwF,KAAKwL,YAAYxL,KAAKC,MAAMzF,OAClC4P,EAA0B5P,EAA1B4P,UAAWF,EAAe1P,EAAf0P,WAIXlB,EAFJS,EAAY,EACG,QAAXD,EACOqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMG,KAASC,KAAS,EAAGvO,IAC1CwB,WAAW0C,aAAW,OACtBvC,cAAc,GACD,UAAX5B,EACAqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMK,KAAWC,KAAW,EAAGzO,IAC9CwB,WAAW0C,aAAW,OACtBvC,cAAc,GACD,SAAX5B,EACAqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMO,KAAUC,KAAU,EAAG3O,IAC5CwB,WAAW0C,aAAW,OACtBvC,cAAc,GACD,aAAX5B,EACAqO,aAAW/V,GACbiH,MAAMU,GACNwB,YAAW,SAAAC,GAAC,OAAI2C,KAAOtN,UAAU2K,GAAG1B,YACpC4B,cAAc,GACZtB,UAAEC,SAASP,GACXqO,aAAW/V,GACbiH,MAAMU,GACNwB,WAAW0C,aAAWnE,IACtB4B,cAAc,GACZtB,UAAEE,WAAWR,GACbqO,aAAW/V,GACbiH,MAAMU,GACNwB,WAAWzB,GACX4B,cAAc,GAEZyM,aAAW/V,GACbiH,MAAMU,GACNgC,SAAS,GAGH,QAAXjC,EACOqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMG,KAASC,KAAS,IACvC/M,WAAW0C,aAAW,OACtBvC,cAAc,GACD,UAAX5B,EACAqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMK,KAAWC,KAAW,IAC3CjN,WAAW0C,aAAW,OACtBvC,cAAc,GACD,SAAX5B,EACAqO,aAAW/V,GACbgW,cAAc,CAACF,EAAMO,KAAUC,KAAU,IACzCnN,WAAW0C,aAAW,OACtBvC,cAAc,GACD,aAAX5B,EACAqO,aAAW/V,GACbmJ,YAAW,SAAAC,GAAC,OAAI2C,KAAOtN,UAAU2K,GAAG1B,YACpC4B,cAAc,GACZtB,UAAEC,SAASP,GACXqO,aAAW/V,GACbmJ,WAAW0C,aAAWnE,IACtB4B,cAAc,GACZtB,UAAEE,WAAWR,GACbqO,aAAW/V,GACbmJ,WAAWzB,GACX4B,cAAc,GAEZyM,aAAW/V,GAAO2J,SAAS,GAK1CpB,aAAOC,IAASC,YAAYvK,OACvBwK,UAAU,KACVE,SAILL,aAAOC,IAASC,YAAYvK,OACvB2K,OAAO,KACPC,KAAK,QAAS,UACdpQ,MAAM,SAAU,QAChBiQ,OAAOP,GACP2B,KAAK7C,EAAKyC,SAASA,IAEpBzL,KAAKC,MAAMoY,OACXhO,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,SACVH,OAAO,QACPI,OAAOP,GACP1P,MAAM,cAAe,OACrBoQ,KAAK,KAAM,UACXA,KAAK,KAAM,OACXA,KAAK,aAAa,SAASM,GACxB,MAAO,iBAGfb,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,SACVH,OAAO,QACPI,OAAOP,GAEhBG,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPG,UAAU,SACVH,OAAO,QACPI,OAAOL,GAEZC,aAAOC,IAASC,YAAYvK,OACvBqK,OAAO,KACPA,OAAO,QACPK,W,oBAGT,WACI,OAAO,0B,GApKuBlD,IAAMC,WAwK5CgQ,GAAS/P,aAAe,CACpB0B,UAAU,EACV5O,MAAOkO,GACP2P,QAAQ,GClMZ,IAAMC,GAAuB,CACzBtP,KAAM,CACFhD,KAAM,OACNO,OAAQ,UACRO,cAAe,SAIjByR,GAAoB,CACtB3P,WAAY,IACZvO,SAAU,GACVwO,KAAM,uCACN7C,KAAM,WAGJwS,GAAiC,CACnC5P,WAAY,IACZvO,SAAU,GACVwO,KAAM,uCACN7C,KAAM,QAGJyS,GAA+B,CACjCzS,KAAM,QACNO,OAAQ,QAGNmS,GAAsB,CACxBrL,KAAM,CACF9G,OAAQ,OACRT,OAAQ,YACRgB,cAAe,QAEnBxE,IAAK,CACD0D,KAAM,QACNhK,QAAS,GACTuK,OAAQ,OACRO,cAAe,QAEnB+H,IAAK,CACD7I,KAAM,SAyBO2S,G,kDACjB,WAAY1Y,GAAQ,IAAD,8BACf,cAAMA,IACD2Y,qBAAuB,EAAKA,qBAAqB5V,KAA1B,gBAC5B,EAAK6V,uBAAyB,EAAKA,uBAAuB7V,KAA5B,gBAC9B,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAK2S,eAAiB,EAAKA,eAAe3S,KAApB,gBACtB,EAAK4S,kBAAoB,EAAKA,kBAAkB5S,KAAvB,gBACzB,EAAK8V,sBAAwB,EAAKA,sBAAsB9V,KAA3B,gBAC7B,EAAK+V,WAAa,EAAKA,WAAW/V,KAAhB,gBAClB,EAAKgW,WAAa,EAAKA,WAAWhW,KAAhB,gBATH,E,wDAgBnB,SAAqB6B,GAAI,IAAD,OAChB7E,KAAKC,MAAMgZ,kBACXjZ,KAAKC,MAAMgZ,iBACPpU,GAGA,SAAAA,GAAC,OAAI,EAAKvB,UAAUuB,GAAK,EAAKkO,e,oCAU1C,SAAuBmG,GACflZ,KAAKC,MAAMiF,oBACXlF,KAAKC,MAAMiF,mBAAmBgU,K,6BAItC,SAAgBrV,EAAGE,GACf/D,KAAK4Y,qBAAqB5Y,KAAKsD,UAAUE,OAAOK,IAC5C7D,KAAKC,MAAMmH,aACXpH,KAAKC,MAAMmH,YAAYvD,EAAGE,K,4BAIlC,SAAeJ,GACX3D,KAAK4Y,qBAAqB,Q,+BAG9B,SAAkB/U,EAAGE,GACjB,GAAI/D,KAAKC,MAAMqX,cAAe,CAC1B,IAAMzS,EAAI7E,KAAKC,MAAM6B,MAAQ9B,KAAKC,MAAM6B,MAAM0B,OAAOK,GAAK7D,KAAKsD,UAAUE,OAAOK,GAChF7D,KAAKC,MAAMqX,cAAczT,EAAGE,EAAGc,M,mCAIvC,SAAsBhB,EAAGE,GACrB,GAAI/D,KAAKC,MAAMkZ,kBAAmB,CAC9B,IAAMtU,EAAI7E,KAAKC,MAAM6B,MAAQ9B,KAAKC,MAAM6B,MAAM0B,OAAOK,GAAK7D,KAAKsD,UAAUE,OAAOK,GAChF7D,KAAKC,MAAMkZ,kBAAkBtV,EAAGE,EAAGc,M,wBAI3C,SAAWqU,GACHlZ,KAAKC,MAAMiF,oBACXlF,KAAKC,MAAMiF,mBAAmBgU,K,wBAItC,SAAWhT,GACPlG,KAAKoZ,IAAMlT,I,oBAOf,WAAU,IAAD,SACmBlG,KAAKC,MAArBoZ,eADH,MACa,EADb,IAEqDrZ,KAAKC,MAF1D,IAEGnE,mBAFH,MAEiBud,EAFjB,MAE0B5f,oBAF1B,MAEyC4f,EAFzC,IAGqDrZ,KAAKC,MAH1D,IAGGlE,kBAHH,MAGgBsd,EAHhB,MAGyB7f,qBAHzB,MAGyC6f,EAHzC,IAKsBrZ,KAAKC,MAA1BqZ,mBALD,MAKe,GALf,EAMDxP,UAAEyH,YAAYvR,KAAKC,MAAMlD,SACzBuc,EAAc,GAGlB,IAAMC,EAAY,GACZC,EAAiB,GACjBvG,EAAiB,GACjBG,EAAkB,GAexB5L,IAAMsJ,SAASC,QAAQ/Q,KAAKC,MAAM+Q,UAAU,SAAAyI,GACxC,GAAIpJ,6BAAmBoJ,EAASjY,KAAM0O,IAAW,CAM7C,IAAIwJ,EAAY,EACZC,EAAc,EAEdxQ,EAAQ,OAiBZ,GAfA3B,IAAMsJ,SAASC,QAAQ0I,EAASxZ,MAAM+Q,UAAU,SAAAZ,GAC9B,OAAVA,IACAC,6BAAmBD,EAAM5O,KAAM4K,KAC/BuN,GAAe,EACfxQ,EAAQ,SAEPkH,6BAAmBD,EAAM5O,KAAMqB,KAC/BwN,6BAAmBD,EAAM5O,KAAMmG,KAElB,SAAVwB,IACAuQ,GAAa,OAKL,IAAhBC,EAAmB,CAEnBC,KAAU,EADE,+DACUH,EAASpN,YAAYC,MAG/CnD,EAAQ,OACR,IAAI0Q,EAAMH,EAAY,EAEtBlS,IAAMsJ,SAASC,QAAQ0I,EAASxZ,MAAM+Q,UAAU,SAAAZ,GAC5C,GAAc,OAAVA,EACJ,GACIC,6BAAmBD,EAAM5O,KAAM4K,KAC/BiE,6BAAmBD,EAAM5O,KAAMqB,KAC/BwN,6BAAmBD,EAAM5O,KAAMmG,IAE3B0I,6BAAmBD,EAAM5O,KAAM4K,MAC/BjD,EAAQ,QACR0Q,EAAM,OAEP,CACH,IAAItgB,EAAQugB,OAAO1J,EAAMnQ,MAAM1G,QAAU,IACxBuQ,UAAEwG,IAAIF,EAAMnQ,MAAO,YAAcmQ,EAAMnQ,MAAM2O,UAChDrV,EAAQ,GAER,SAAV4P,GACA8J,EAAe4G,GAAO5G,EAAe4G,GAC/BrZ,KAAKF,IAAI/G,EAAO0Z,EAAe4G,IAC/BtgB,EACNsgB,GAAO,GACU,UAAV1Q,IACPiK,EAAgByG,GAAOzG,EAAgByG,GACjCrZ,KAAKF,IAAI/G,EAAO6Z,EAAgByG,IAChCtgB,EACNsgB,GAAO,WAQ3B,IAAM9G,EAAa/S,KAAK+S,UAAYjJ,UAAEkJ,OAAOC,GAAgB,SAACpD,EAAGqD,GAAJ,OAAUrD,EAAIqD,IAAG,GACxEC,EAAcnT,KAAKmT,WAAarJ,UAAEkJ,OAAOI,GAAiB,SAACvD,EAAGqD,GAAJ,OAAUrD,EAAIqD,IAAG,GAjG5E,EAuGyBlT,KAAKC,MAA7B8Z,sBAvGD,MAuGkB,GAvGlB,EAwGD/Z,KAAKC,MAAM+Z,eACXD,EAAiB,GAGrB,IAAME,EACFja,KAAKC,MAAM1G,MAAQwZ,EAAYI,EAAarX,EAAcrC,EAE9D,IAAKuG,KAAKC,MAAMmE,UACZ,MAAMiH,MAAM,8CAGhB,IA8HI+I,EA+BA8F,EA7JE5W,EAAatD,KAAKsD,UAAYtD,KAAKC,MAAM2X,IACzCuC,cACKpY,OAAO/B,KAAKC,MAAMmE,UAAU4C,UAC5BhF,MAAM,CAAC,EAAGiY,IACfG,cACKrY,OAAO/B,KAAKC,MAAMmE,UAAU4C,UAC5BhF,MAAM,CAAC,EAAGiY,IAEfI,EAAcra,KAAKC,MAAM1G,MAAQwZ,EAAYI,EAAarX,EAAcrC,EAE1EqT,EAAI,EACJwN,EAAYve,EAGVqS,EAAS,oBAAgB2E,EAAYjX,EAA5B,YAA2Cwe,EAA3C,KACTC,EAAa7T,KACf,EACA6R,GACAvY,KAAKC,MAAMsa,WAAava,KAAKC,MAAMsa,WAAa,IAE9Cxd,EAAQiD,KAAKC,MAAMlD,MACrB,mBAAGqR,UAAWA,EAAd,SACI,cAAC,GAAD,CACIjF,MAAM,SACNR,MAAO3I,KAAKC,MAAMlD,MAClBvC,MAAO,CAAEmO,MAAO4R,EAAYjY,IAAK,CAAE0D,KAAM,OAAQO,OAAQ,SACzDhN,MAAO8gB,EACP/gB,OAAQggB,MAIhB,sBAGExE,EAAepO,KACjB,EACAgS,GACA1Y,KAAKC,MAAM6U,aAAe9U,KAAKC,MAAM6U,aAAe,IAIpD0F,EAAe,EACnBhT,IAAMsJ,SAASC,QAAQ/Q,KAAKC,MAAM+Q,UAAU,SAAAZ,GACxC,GAAIC,6BAAmBD,EAAM5O,KAAM0O,IAAW,CAC1C,IAAMuK,EAAWrK,EACXsK,EAAM,wBAAoB5N,GAC1B6N,EAAiB,IAAN7N,EACX8N,EAAYxK,EAAMnQ,MAAM2O,QACxB3O,EAAQ,CACVqD,YACAxH,cACArC,eACAwZ,iBACAG,kBACA7Z,MAAO,EAAK0G,MAAM1G,MAClBgd,QAAS,EAAKtW,MAAMsW,QACpBC,QAAS,EAAKvW,MAAMuW,QACpBxK,WAAY,EAAK/L,MAAM+L,WACvBmJ,cAAe,EAAKlV,MAAMkV,cAC1BmB,YAAa,EAAKrW,MAAMqW,YACxBlN,SAAU,EAAKnJ,MAAMmJ,SACrBuE,WAAY,EAAK1N,MAAMuJ,OACvBqL,gBAAiB8F,EACjBjG,YAAa,EAAKzU,MAAM4a,gBACxBjG,kBAAmB,EAAK3U,MAAMuJ,OAC9BsL,aAAcA,EACd5P,mBAAoB,EAAK2T,uBACzBI,iBAAkB,EAAKL,sBAxBe,EA2BfxI,EAAMnQ,MAA3BqZ,mBA3BoC,MA2BtB,GA3BsB,EA4BtCxP,UAAEyH,YAAYnB,EAAMnQ,MAAMlD,SAC1Buc,EAAc,GAGlB,IAAMlL,EAAS,qBAAiB2E,EAAYjX,EAA7B,YAA4Cwe,EACvDhB,EADW,KAEf,GAAIsB,EAAW,CAOX,GANArB,EAAU1G,KACN,mBAAGzE,UAAWA,EAAd,SACK5G,IAAMiM,aAAagH,EAAUxa,IADJya,KAK7B5Q,UAAEyH,YAAYnB,EAAMnQ,MAAMlD,OAAQ,CACnC,IAAM+d,EAAW,8BAA0BhO,GAErCiO,EAAkBrU,KACpB,EACA8R,GACApI,EAAMnQ,MAAMsa,WAAanK,EAAMnQ,MAAMsa,WAAa,IAEhDS,EAAgBtU,KAClB,EACA+R,GACArI,EAAMnQ,MAAM+a,cAAgB5K,EAAMnQ,MAAM+a,cAAgB,IAEtDC,EAAc,qBAAiBlI,EACjCjX,EADgB,YACDwe,EADC,KAEdvd,EACF,mBAAGqR,UAAW6M,EAAd,SACI,cAAC,GAAD,CACI9R,MAAM,OACNR,MAAOyH,EAAMnQ,MAAMlD,MACnBvC,MAAO,CACHmO,MAAOoS,EACPzY,IAAK0Y,GAETzhB,MAAO0G,EAAM1G,MACbD,OAAQggB,KATmBwB,GAcvCtB,EAAe3G,KAAK9V,GAGxB,IAAMzD,EAASuM,SAASuK,EAAMnQ,MAAM3G,OAAQ,IAAMggB,EAClDgB,GAAahhB,EACbkhB,GAAgBlhB,GAGxBwT,GAAK,KAML9M,KAAKC,MAAM4a,iBACX7a,KAAKC,MAAMmE,UAAU8W,SAASlb,KAAKC,MAAM4a,mBAEzCzG,EACI,mBAEI5Z,MAAO,CAAEsM,cAAe,QACxBsH,UAAS,oBAAe2E,EAAYjX,EAA3B,YAA0CC,EAAaud,EAAvD,KAHb,SAKI,cAAC,GAAD,CACI/f,MAAO8gB,EACP/gB,OAAQkhB,EACR9L,cAAe1O,KAAKC,MAAMkb,cAC1B5M,KAAMvO,KAAKC,MAAM4a,gBACjBvX,UAAWA,EACXqK,WAAY3N,KAAKC,MAAMuJ,OACvBuE,UAAW/N,KAAKC,MAAMmb,iBACtBnN,WAAYjO,KAAKC,MAAMob,kBACvBnN,WAAYlO,KAAKC,MAAMkb,cACvB/N,UAAW0H,KAdX,kBA0BZoF,EADAla,KAAKC,MAAM+Z,aACK,CACZhR,KAAM,CACFrP,QAAS,SAID+M,KACZ,EACA4R,GAAqBtP,KACrBhJ,KAAKC,MAAMia,cAAclR,KAAOhJ,KAAKC,MAAMia,cAAclR,KAAO,IAIxE,IAAMsS,EACF,oBACIlN,UAAS,oBAAe2E,EAAYjX,EAA3B,YAA0CC,EAC/Cud,EACAkB,EAFK,KADb,UAKI,sBACIlN,IAAKyF,EACLxF,GAAI,GACJC,GAAI6M,EAAclH,EAClB1F,GAAI,GACJjT,MAAO0f,IAEX,cAAC,GAAD,CACIpY,MAAOwB,EACPsU,IAAK5X,KAAKC,MAAM2X,IAChBS,OAAQrY,KAAKC,MAAMsb,qBACnB/gB,MAAOwF,KAAKC,MAAMia,cAClB1Q,OAAQxJ,KAAKC,MAAMuJ,OACnBJ,SAAUpJ,KAAKC,MAAMmJ,SACrBsO,WAAY8C,EACZ/Q,UAAWzJ,KAAKC,MAAMub,uBAS5BC,EACF,mBAAGrN,UAAS,oBAAe2E,EAAYjX,EAA3B,YAA0CC,EAAaud,EAAvD,KAAZ,SACI,cAAC,GAAD,CAEI/f,MAAO8gB,EACP/gB,OAAQkhB,EAAeT,EACvBjY,MAAOwB,EACP6R,cAAenV,KAAKC,MAAMkV,cAC1Ba,eAAgBhW,KAAKC,MAAM+V,eAC3BM,YAAatW,KAAKC,MAAMqW,YACxBC,QAASvW,KAAKC,MAAMsW,QACpBC,QAASxW,KAAKC,MAAMuW,QACpBY,WAAYpX,KAAK2V,eACjBvO,YAAapH,KAAKqD,gBAClB4T,aAAcjX,KAAK8Y,sBACnBxB,cAAetX,KAAK4V,kBACpBe,OAAQ3W,KAAK+Y,WAdjB,SAgBKQ,GAfG,mBAoBVmC,EACF,mBAAGtN,UAAS,oBAAe2E,EAAYjX,EAA3B,YAA0CC,EAAaud,EAAvD,KAAZ,SACKE,IASHmC,EAAW3b,KAAKC,MAAM1G,MACtBqiB,EAAYpB,EAAeT,EAAiBhe,EAAavC,EAAgB8f,EAEzEuC,EAAWnV,KACb,EACA,CAAE/M,QAAS,SACXqG,KAAKC,MAAMzF,MAAQwF,KAAKC,MAAMzF,MAAQ,IAG1C,MAAuC,SAAhCwF,KAAKC,MAAM6b,iBACd,sBAAKviB,MAAOoiB,EAAUriB,OAAQsiB,EAAWphB,MAAOqhB,EAAU5V,IAAKjG,KAAKgZ,WAApE,UACKjc,EACA0e,EACArH,EACAkH,EACAI,KAGL,sBACIniB,MAAOoiB,EACPriB,OAAQsiB,EACRphB,MAAO,CAAEb,QAAS,SAClBsM,IAAKjG,KAAKgZ,WAJd,UAMKjc,EACAue,EACAG,EACAC,EACAtH,S,GAzc2B5M,IAAMC,WAutBlDkR,GAAejR,aAAe,CAC1BnO,MAAO,IACP8f,QAAS,EACTlE,eAAe,EACfa,gBAAgB,EAChB4B,KAAK,EACLxO,UAAU,EACV0S,iBAAkB,OAClB5B,cAAe5B,GACfiC,WAAYhC,GACZzD,aAAc4D,GACdsB,cAAc,G,cCzyBG+B,G,kDACjB,WAAY9b,GAAQ,IAAD,8BACf,cAAMA,IACD7E,MAAQ,CACT4gB,MAAO,MAHI,E,+CAUnB,SAAYrY,EAAGsY,GACPjc,KAAKC,MAAMic,aACXlc,KAAKC,MAAMic,YAAYD,GAE3Bjc,KAAKsE,SAAS,CAAE0X,MAAOC,M,0BAM3B,WACQjc,KAAKC,MAAMkc,cACXnc,KAAKC,MAAMkc,aAAanc,KAAK5E,MAAM4gB,OAEvChc,KAAKsE,SAAS,CAAE0X,MAAO,S,yBAO3B,SAAYrY,EAAGsY,GACXtY,EAAEuT,kBACElX,KAAKC,MAAMmc,mBACXpc,KAAKC,MAAMmc,kBAAkBH,K,oBAIrC,WAAU,IAAD,WAC0Djc,KAAKC,MAA5Doc,EADH,EACGA,OAAQC,EADX,EACWA,YAAaC,EADxB,EACwBA,YACvBza,GAFD,EACqC0a,iBAC5Bxc,KAAKC,MAAMqD,WACnBmZ,EAAe,GAGjB3P,EAAI,EANH,eAOeuP,EAAOK,UAPtB,yBAOMT,EAPN,QAQK9X,EAAQ8X,EAAM9X,QACd7C,EAAM2a,EAAM3a,MACZqb,EAAW7a,EAAMqC,IAAU,EAAIrC,EAAMqC,GAAS,EAC9CyY,EAAS9a,EAAMR,IAAQ,EAAKrB,MAAM1G,MAAQuI,EAAMR,GAAO,EAAKrB,MAAM1G,MAElE6U,EAAS,oBAAgBuO,EAAhB,OACTE,IAAU,EAAKzhB,MAAM4gB,OAAQc,QAAMC,GAAGd,EAAO,EAAK7gB,MAAM4gB,OAE1D5gB,OAAK,EAELA,EADAyhB,EACQ,QAEA,SAGZ,IAAIG,EAAiB,GACjBC,EAAW,GACX,EAAKhd,MAAMzF,QACXwiB,EAAiB,EAAK/c,MAAMzF,MAAMyhB,EAAO,UACzCgB,EAAW,EAAKhd,MAAMzF,MAAMyhB,EAAO7gB,IAGvC,IAAIuN,EAAQ,GACR,EAAK1I,MAAM0I,QACPmB,UAAEC,SAAS,EAAK9J,MAAM0I,OACtBA,EAAQ,EAAK1I,MAAM0I,MACZmB,UAAEE,WAAW,EAAK/J,MAAM0I,SAC/BA,EAAQ,EAAK1I,MAAM0I,MAAMsT,KAIjC,IAAMpY,EAAI,EAAK5D,MAAMxD,QAEjBlD,EAAQqjB,EAASD,EAAW,EAAI,EAAK1c,MAAMxD,QAC/ClD,EAAQA,EAAQ,EAAI,EAAIA,EACxB,IAAMD,EAAS,EAAK2G,MAAMnD,KAOtBgP,EAAO,KAEP+Q,IACA/Q,EACI,8BACI,sBACIoR,UAAU,oBACVrZ,EAAGA,EACHE,EAAGA,GAEHxK,MAAOA,EACPD,OAAQA,EAAS,EACjBkB,MAAOkM,KAAM,EAAMsW,EAAgB,CAAElW,cAAe,WAExD,sBACItM,MAAK,aACDsM,cAAe,OACfd,KAAM,QAtBF,CACpB4C,WAAY,IACZvO,SAAU,KAuBEwJ,EAAG,EAAIyY,EACPvY,EAAG,GAAKwY,EAPZ,SASK5T,QAMjB8T,EAAa5J,KACT,oBAAGzE,UAAWA,EAEblT,QAAS,SAAAyI,GAAC,OAAI,EAAKP,YAAYO,EAAGsY,IAClCE,aAAc,kBAAM,EAAKA,gBACzBD,YAAa,SAAAvY,GAAC,OAAI,EAAKuY,YAAYvY,EAAGsY,IAJvC,UAMK,wBACGkB,GAAMtZ,EACNuZ,GAAMrZ,EACNsZ,EAAM,EACN7iB,MAASyiB,IAGb,sBACIC,UAAU,oBACVrZ,EAAGA,EACHE,EAAGA,EACHxK,MAAOA,EACPD,OAAQ,EAERkB,MAAOyiB,IAKR,wBACCE,GAAMtZ,EAAEtK,EACR6jB,GAAMrZ,EACNsZ,EAAM,EACN7iB,MAASyiB,IAGZnR,IA/BCgB,IAmCVA,GAAK,GA7GT,2BAAsC,IAPjC,8BAuHL,OAAO,4BAAI2P,Q,GA9JqBjV,IAAMC,WAkK9CsU,GAAWrU,aAAe,CACtBkH,SAAS,EACT9R,KAAM,GACNL,QAAS,EACT6f,YAAa,EACbC,YAAa,EACbC,iBAAkB,G,cCsFPc,GAxPE,WACOxiB,GAAc,SAAAM,GAAK,uBAAEA,EAAMC,gBAAR,aAAE,EAAgBkiB,UAA3D,IACMC,EAAc1iB,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASoiB,mBAElDC,EAAyB5iB,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASsiB,qBAJzC,EAKQhf,wBAA+Bif,GALvC,mBAKnBC,EALmB,KAKRC,EALQ,OAMgBnf,wBAAiCif,GANjD,mBAMJG,GANI,aAOYpf,mBAAS,GAPrB,mBAONqf,GAPM,aAQoBrf,mBAAS,GAR7B,mBAQnBsf,EARmB,KAQFC,EARE,OASUvf,mBAAS,CAC3C,CAACkb,IAAK,EAAGvN,KAAMpO,EAAWyD,SAASwc,cAAeC,MAAOZ,EAAY7b,SAASmG,QAC9E,CAAC+R,IAAK,EAAGvN,KAAMpO,EAAW9C,MAAM+iB,cAAeC,MAAOZ,EAAYpiB,MAAM0M,QACxE,CAAC+R,IAAK,EAAGvN,KAAMpO,EAAWmgB,KAAKF,cAAeC,MAAOZ,EAAYa,KAAKvW,UAZ9C,mBASnBwW,EATmB,KASPC,EATO,KAapBplB,EAAQC,cAGRolB,EAAY,IAAInd,KAAK,KAAK,EAAE,GAC5Bod,EAAW,IAAIpd,KAAK,KAAK,EAAE,GAC3Bqd,EAAQC,aAAcxlB,EAAMylB,YAAYC,GAAG,OAC3C7f,EAAclE,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAAS4D,UAnB9B,EAoBAN,mBAAS6D,OAAOsc,YApBhB,mBAoBnBvlB,EApBmB,UAuB1B2F,qBAAU,WACN,IAAM6f,EAAoBvB,EAAYpiB,MAAM0M,OAAS0V,EAAYa,KAAKvW,OAAS0V,EAAY7b,SAASmG,OAEpG3I,QAAQC,IAAIse,GACZve,QAAQC,IAAIoe,GACZre,QAAQC,IAAI2f,GACZf,EAfe,GAeWe,GAC1Bb,EAAmBa,GACnB,IAAMC,EAAU,CAACxB,EAAYpiB,MAAM0M,OAAQ0V,EAAYa,KAAKvW,OAAQ0V,EAAY7b,SAASmG,QACnFmX,EAAUD,EAAQthB,KAAI,SAAAwhB,GAAC,OAAEA,EAAEjB,KAGjC9e,QAAQC,IAAI6f,EAAQ,IACpB,IAAME,EAAO,CAACF,EAAQ,GAAIA,EAAQ,IAClCE,EAAKtM,KAAKsM,EAAK,GAAGA,EAAK,IACvBA,EAAKpO,SAAQ,SAACqO,EAAWtS,GAErBwR,EAAWxR,GAAG+M,IAAMuF,KAGxBb,EAAcD,GACdnf,QAAQC,IAAIkf,GACZnf,QAAQC,IAAIkf,EAAWxW,QAGvB3I,QAAQC,IAAI+f,GACZhgB,QAAQC,IAAI4f,EAASC,EAASE,KAMhC,CAACngB,EAAa0e,EAAYF,IAC5Bte,qBAAU,cAEP,CAACof,IACJ,IAAMe,EAAkB,CAEtB/lB,OAAQ,IAERC,MAAO,OACP+lB,UAAU,aAAD,OAAenmB,EAAMY,QAAQC,QAAQC,MAC9CN,QAAS+kB,EAAM,cAAc,QAmBzBa,EAAgB,CACpBllB,SAAU,MACVsB,SAAU,WACV7B,MAAO,aAGH0lB,EAAuB,CAC3BnlB,SAAU,MACVsB,SAAU,WACV7B,MAAOX,EAAMY,QAAQC,QAAQC,MAGzBqhB,EAAW,CACftS,KAAM,CACJzC,OAAQpN,EAAMY,QAAQC,QAAQC,OAM9Bif,EAAY,IAAIxV,YAAU8a,EAAYC,GACpCgB,EAAc,SAACpD,EAAsBljB,EAAcumB,EAAoBC,GA0E3E,OAzEatD,EAAO3e,KAAI,SAASkiB,EAAI9S,GACjC,IAAI+S,EAAa,CACf7Z,KAAM7M,EAAMY,QAAQC,QAAQC,KAC5B+B,QAAS,GAwBX,SAAS8jB,EAAanc,GACpBxE,QAAQC,IAAIuE,EAAE/B,OAAOme,QAAQC,IAAI,UACjC,IAAIjjB,EAAQ4G,EAAE/B,OAAOme,QAAQC,IAAI,SAC7BC,EAAYvC,EAAWH,QAAO,SAAAF,GAAC,OAAEA,EAAEtgB,QAAUA,KAAO,GAExD+gB,EAAamC,GACblC,EAAiBpa,GACjBxE,QAAQC,IAAI6gB,GACZ9gB,QAAQC,IA6GlB,SAAqB8gB,GACnB,IAAIjgB,EAAe,GACfkgB,EAAMD,EACV,GACIjgB,EAAQA,EAAMmgB,OAAOC,OAAOC,oBAAoBH,UAC3CA,EAAME,OAAOE,eAAeJ,IAErC,OAAOlgB,EAAMkX,OAAOoG,QAAO,SAAS5Z,EAAGmJ,EAAG0T,GACvC,GAAI7c,GAAG6c,EAAI1T,EAAE,IAA2B,mBAAdoT,EAAQvc,GAAkB,OAAO,KArH1C8c,CAAY9c,IAE5B,OAEE,cAAC,GAAD,CACArK,OAAM,UAAOqmB,GACbnlB,MAAS,CAACwL,KAAM,WAAsB0K,WAAc,EAFpD,SAaE,cAAC,GAAD,UAOE,cAAC,GAAD,CACE2L,OAAUuD,EACV9iB,KAAQ6iB,EACRhX,MAAS,SAAChF,GAAD,OAtCf,SAAoBA,GAClB,OAAOA,EAAE/B,OAAOme,QAAQC,IAAI,SAqCLU,CAAW/c,IAC9ByY,kBAAqB,SAACzY,GAAD,OAAUmc,EAAanc,IAC5C4Y,aAAiB,EAEjB/hB,MA5DN,SAAoB0W,EAAQ9V,GAC1B,MAAa,SAATA,GACF+D,QAAQC,IAAI,aACL,CACL4G,KAAK7M,EAAMY,QAAQC,QAAQ2mB,MAC3B3kB,QAAS,IAIA,YAATZ,EACK,CACL4K,KAAK7M,EAAMY,QAAQC,QAAQ4mB,KAC3B5kB,QAAS,GAGN6jB,QAoB0B/S,OAmCzC,OACE,eAACvQ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGjC,MAAS6kB,EAAvC,UACE,eAAC9iB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,EAAjB,UAEE,cAACnC,EAAA,EAAD,CAAMD,MAASglB,EAAf,SACE,wDAEF,cAAC,EAAD,CAAkBze,KAAQ8c,OAE1B,cAACthB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,GAAIpC,MAAS,CAAClB,OAAQ0F,EAAY,OAAO,QAA1D,SACI,sBAAKxE,MAAS,CAACmB,SAAU,WAAYrC,OAAQ,SAA7C,UACA,qBAAKkB,MAtHO,CACpBmB,SAAU,WACVpC,MAAO,OACPD,OAAQ,OACR8C,IAAK,EACLR,QAAS,EACTI,QAAS,IAgHD,SAEIsiB,EAAW5gB,KAAI,SAASmjB,EAAc/T,GAClC,IAAIgU,EAAaC,WAAW,GAAD,OAAIF,EAAEhH,MAAOmH,QAAQ,GAEhD,GADA7hB,QAAQC,IAAI0hB,GACRtgB,KAAKE,MAAMmgB,EAAEhH,OAASgH,EAAEhH,IAAI,CAEhC1a,QAAQC,IAAI0N,GACZ3N,QAAQC,IAAIyhB,GACZ1hB,QAAQC,IAAU,IAANyhB,EAAEhH,KACd,IAGMoH,EAAW,CACfllB,WAJkB,UAAqB,IAAfglB,WAAWD,GAAjB,KAKlBnlB,SAAU,WACVrC,OAAQ,MACRgmB,UAAU,uBAGZ,OACE,qBAAmB9kB,MAASymB,EAA5B,SACE,cAACxmB,EAAA,EAAD,CAAoBD,MAAQ+kB,EAA5B,SAA4CsB,EAAEvU,MAAjCuU,EAAEhH,MADLgH,EAAEhH,WASxB,eAAC,GAAD,CACIzV,UAAW8U,EACX/D,eAAe,EACf5b,MAAe,IAANA,EAET6P,UAAY,EACZ8Q,cAAiBoB,EACjBE,kBAAqB,EAPzB,UASMiE,EAAYjC,EAAY7b,SAAUxI,EAAOumB,EA1NtC,IA4NHD,EAAYjC,EAAYpiB,MAAOjC,EAAOumB,EA5NnC,IA8NHD,EAAYjC,EAAYa,KAAMllB,EAAOumB,EA9NlC,gBChCd,IAmCQwB,GAnCgB,SAAC,GAA6C,IAA5CnkB,EAA2C,EAA3CA,MAAOiU,EAAoC,EAApCA,SAC9B7X,EAAQC,cAQR+nB,EAAkB,CACpBC,aAAa,aAAD,OAAejoB,EAAMY,QAAQC,QAAQC,MACjDT,cAAe,OACfF,OAAQ,MACRK,QAAS,OACTC,cAAe,SACfynB,aAAc,UAGZC,EAAS,CACXxnB,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BsnB,UAAW,EACXC,aAAc,OACdtnB,WAAYf,EAAMgB,WAAWD,YAGjC,OACA,sBAAKM,MAxBa,CACdlB,OAAQ,OACRwC,YAAa,QACbrC,aAAc,QACdgoB,UAAW,QAoBf,UACI,qBAAKjnB,MAAS2mB,EAAd,SACI,cAACtkB,EAAA,EAAD,CAASC,KAAQ,IAAKtC,MAAS8mB,EAA/B,SAAwCvkB,MAE3CiU,MCkBM0Q,GA3CO,SAAC,GAAoD,IAAnD3kB,EAAkD,EAAlDA,MAAOiU,EAA2C,EAA3CA,SAAU2Q,EAAiC,EAAjCA,QAC/BC,EAAmB/mB,GAAgB,SAAAkE,GAAO,OAAEA,EAAQ1D,SAASwmB,0BADG,GAE/CzjB,EAAuB0jB,YAAa7jB,EAAuB8jB,aAAcxjB,EAAoByjB,UACtFrjB,oBAAS,IAH+B,mBAG/DsjB,EAH+D,KAGtDC,EAHsD,KAIhE/oB,EAAQC,cACR+oB,EAAa,CACfjoB,WAAYf,EAAMgB,WAAWD,WAC7B+G,eAAgB,YAChBnH,MAAOmoB,EAAQ9oB,EAAMY,QAAQC,QAAQ2mB,MAAMxnB,EAAMY,QAAQC,QAAQC,MAG/DmoB,EAAiB,CACnBb,UAAsB,OAAVxkB,EAAgB,QAAQ,GAGlCslB,EAAiB,CACnB/oB,OAAQ,cACRioB,UAAW,OACXC,aAAc,OACdtnB,WAAYf,EAAMgB,WAAWD,YAGjC,OACI,sBAAKM,MAAS6nB,EAAd,UACI,qBACIjc,UAAW,kBAAIwb,EAAgB,OAACD,QAAD,IAACA,IAAS,KACzCW,aAAgB,kBAAIJ,GAAW,IAC/B/F,aAAgB,kBAAI+F,GAAW,IAHnC,SAKA,cAACznB,EAAA,EAAD,UACI,cAACoC,EAAA,EAAD,CAASC,KAAQ,IAAKtC,MAAS2nB,EAA/B,SACKplB,QAIT,qBAAKvC,MAAS4nB,EAAd,SACKpR,QCqCFuR,GA3EQ,SAAC,GAA8C,IAA7CvR,EAA4C,EAA5CA,SAAUwR,EAAkC,EAAlCA,QACzBrpB,EAAQC,cACRqpB,EAAmB,CACrBnpB,OAAQ,MACR+f,QAAS,EACTmJ,QAAO,OAAEA,QAAF,IAAEA,IAAW,IAIlBE,EAAgB,CAElB/oB,QAAS,OACTmC,YAAa,QACbrC,aAAc,QACdsC,WAAY,OACZzC,OAAQ,OACRqpB,WAAW,cAAD,OAAgBxpB,EAAMY,QAAQC,QAAQC,MAChD2oB,YAAY,cAAD,OAAgBzpB,EAAMY,QAAQC,QAAQC,OAG/C4oB,EAAa,CACflpB,QAAS,OACToC,WAAY,OAEZtC,aAAc,QACdqC,YAAa,QACbxC,OAAQ,QAGNwpB,EAAqB,CACvB/mB,WAAY,OAEZpC,QAAS,OACTmC,YAAa,EACbxC,OAAQ,OACRspB,YAAY,cAAD,OAAgBzpB,EAAMY,QAAQC,QAAQC,OAG/C8oB,EAAoB,CACtBhnB,WAAY,OACZpC,QAAS,OAETmC,YAAa,QACbxC,OAAQ,OACRqpB,WAAW,cAAD,OAAgBxpB,EAAMY,QAAQC,QAAQC,OAkBpD,OACI,cAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGumB,UAAY,MAAMxoB,MAASioB,EAAzD,SACKzR,EAAWxJ,IAAMsJ,SAASpT,IAAsCsT,GAAU,SAACZ,EAAOxS,GAC/E,GAAI4J,IAAMyb,eAAe7S,GACrB,OAAQ,cAAC7T,EAAA,EAAD,CAAM/B,OAnBT0oB,EAmB6BtlB,EAnBhBulB,EAmBuBnS,EAlBjDoS,MAAMC,QAAQF,GACH,GAAPD,EACOJ,EAEPI,GAAOC,EAAKrb,OAAO,EACZib,EAEAL,EAGJG,GAQqDlmB,MAAI,EAACC,GAAMwT,EAAMnQ,MAAMnD,KAAnE,SAA0EsT,IAnB9E,IAAC8S,EAAaC,KAqBtB,Q,oBCpET,IA2FQG,GA3FS,SAAC,GAA2C,ICbpCjjB,EAAaC,EDalBxG,EAAwC,EAAxCA,MAAOypB,EAAiC,EAAjCA,iBACxBpqB,EAAQC,cACR0D,EAAO,GAFkD,EAGrC6B,oBAAS,GAH4B,mBAGjD6kB,GAHiD,WAKzDxkB,EAAclE,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAAS4D,UAClDsB,GCnBsBF,EDmBK,GCnBQC,EDmBH,EClBtCD,EAAMG,KAAKC,KAAKJ,GAChBC,EAAME,KAAKE,MAAMJ,GACVE,KAAKG,UAAYL,EAAMD,GAAOA,GDiB/BojB,EAAiB,CACnB9pB,QAASqF,EAAa,QAAQ,OAC9B4B,UAAW5B,EAAY,UAAD,OAAWuB,EAAX,YAA8B,GACpDM,wBAAyB,EACzB0gB,UAAW,QAGfriB,qBAAU,cACR,EAXc,IAahB,IAAMwkB,EAAc,SAACR,GACjB,OAAa,IAATA,EACOS,KAAK,MAEH,IAATT,EACOS,KAAK,KAEJ,IAART,EACO/pB,EAAMY,QAAQC,QAAQC,KAErB,IAARipB,EACOS,KAAK,KAEJ,IAART,EACOS,KAAK,KAEJ,IAART,EACOS,KAAK,KAEJ,IAART,EACO/pB,EAAMY,QAAQC,QAAQ4mB,KAEtB,OA0Cf,OACA,qBAAKpmB,MAASipB,EAAd,SACI,qBAAKjpB,MAxCQ,SAAC+oB,GACd,OAAIA,EAEO,CACPhqB,MAAM,GAAD,OAAKuD,EAAL,MACLxD,OAAO,GAAD,OAAKwD,EAAL,MACNb,gBAAiBynB,EAAY5pB,GAC7BynB,UAAW,OACXC,aAAc,MACdoC,YAAa,MACbC,QAAS,oBACT7nB,QAAS,IAIK,GAAVlC,EACO,CACHP,MAAM,GAAD,OAAKuD,EAAL,MACLxD,OAAO,GAAD,OAAKwD,EAAL,MACNb,gBAAiBynB,EAAY5pB,GAC7BynB,UAAW,OACXC,aAAc,MACdoC,YAAa,MACb5nB,QAAS,IAGN,CACHzC,MAAM,GAAD,OAAKuD,EAAL,MACLxD,OAAO,GAAD,OAAKwD,EAAL,MACNb,gBAAiBynB,EAAY5pB,GAC7BynB,UAAW,OACXC,aAAc,MACdoC,YAAa,MACb5nB,QAAS,GAOP6Q,CAAS0W,GAAmBjB,aAAc,kBAAIkB,GAAS,IAAOrH,aAAgB,kBAAIqH,GAAS,SE3DjH,IAoFeM,GApFG,SAAC,GAAgD,IAA/C1F,EAA8C,EAA9CA,MAAOb,EAAuC,EAAvCA,OAAQwG,EAA+B,EAA/BA,WAC3BC,EAAe,GAUfC,EAAiB,CACrB3qB,OAAQ,OACRK,QAAS,OACTgC,SAAU,YAMNuoB,EAAcppB,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASkiB,UAClD4G,EAAatpB,GAAgB,SAAAkE,GAAO,OAAEA,EAAQ1D,SAAS+oB,oBACvDC,EAAgB,SAACC,EAA8FC,EAAqBR,GACxI,OAAIO,IAAmB/G,EACd,EAEc,OAAnB+G,EACKP,EAEc,OAAnBO,GAA2BA,GAAkB/G,GACvC,EAGDgH,GAAY,EAAER,GAjCuC,EAoClCplB,oBAAS,GApCyB,mBAoCzDsjB,EApCyD,KAoChDuC,EApCgD,KAqC9DtlB,qBAAU,cACP,CAACglB,IAEJhlB,qBAAU,cACP,CAAC+iB,IAEN,IAKIwC,EAzEN,SAAqBzX,EAAe0X,GAClC,IAAMC,EAAMnkB,KAAK0D,MAAM8I,EAAQ0X,GAAQA,EACnCE,EAAWD,EAAID,EACbG,EAAeH,EAErB,QAAc9G,IAAV5Q,GAAgC,OAATA,EAezB,OAdgBoW,MAAM0B,KAAK1B,MAAMwB,GAAUG,QAAQrnB,KAAI,SAACsnB,EAAWlY,GAWjE,MAHsB,CACpBsR,MAPEtR,GAAG8X,EAAS,EACFC,EAAerkB,KAAK2K,IAAK6B,EAAM2X,GAG/BD,MA6DOO,CAAY7G,EAAO,GA6B5C,OACI,mCA7Ba,SAAC8G,GAChB,GAAIA,EACF,OACE,qBAAK1qB,MAASypB,EACd7d,UAAa,kBAAI+d,EAAW5G,IAC5B+E,aAAgB,kBAAIkC,GAAYvC,IAChC9F,aAAe,kBAAIqI,GAAYvC,IAH/B,SAMImB,MAAM0B,KAAK1B,MAAM8B,EAASpd,QAAQid,QAAQrnB,KAAI,SAAC2f,GAC7Cle,QAAQC,IAAI8lB,GACZ,IAAIC,EAAeD,EAAS7H,GAC5B,OACE,qBAAK7iB,MAASwpB,EAAd,SAEEZ,MAAM0B,KAAK1B,MAAM+B,EAAQ/G,OAAO2G,QAAQrnB,KAAI,SAACoP,EAAW5G,GAEtD,OAAQ,cAAC,GAAD,CAAUpM,MAASuqB,EAAcH,EAAajC,EAAS8B,GAAaR,iBAAoBhG,IAAW2G,GAAoBpX,OAJhGuQ,QAiBzC+H,CAASX,MCzGnB,SAASY,GAAeC,EAAoBC,GAGxC,OADqBtnB,EADCqnB,EAAW,IAAIC,GAKzC,IA4GeC,GA5GQ,WACnB,IAAMrsB,EAAQC,cACRqsB,EAAY3qB,GAAc,SAAAM,GAAK,yBAAEA,EAAMC,gBAAR,iBAAE,EAAgBqqB,iBAAlB,aAAE,EAA2BH,QAClEpmB,QAAQC,IAAIqmB,GAEZ,IAAME,EAAkB,CAGpBhsB,QAAS,OACTL,OAAQ,QAINssB,EAAkB,CACpB9rB,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BI,SAAU,MACVR,eAAgB,gBAChBK,WAAYf,EAAMgB,WAAWD,YAG3B8pB,EAAe,CACjBrqB,QAAS,OACTU,SAAU,MACVf,OAAQ,GAERioB,WAAY,GAKVsE,EAAmB,SAACN,EAAcO,GAEpC,GAAIA,EACA,OACI,sBAAKtrB,MAASmrB,EAAd,UACI,cAAC,GAAD,CAAW5B,WAAc,EAAG3F,MAAS0H,EAAe/D,aAAcxE,OAAU8H,GAAe,eAAgBE,KAC3G,cAAC,GAAD,CAAWxB,WAAc,EAAG3F,MAAS0H,EAAe/D,aAAcxE,OAAU8H,GAAe,YAAaE,KACxG,cAAC,GAAD,CAAWxB,WAAc,EAAG3F,MAAS0H,EAAe/D,aAAcxE,OAAU8H,GAAe,YAAaE,KACxG,cAAC,GAAD,CAAWxB,WAAc,EAAG3F,MAAS0H,EAAe/D,aAAcxE,OAAU8H,GAAe,QAASE,SAKpH,OACG,mCACC,eAAC,GAAD,WACI,eAAC,GAAD,CAAexoB,MAAS,KAAMD,KAAQ,EAAtC,UACI,sBAAKtC,MAASwpB,EAAd,UACI,cAAC,GAAD,CAAUlqB,MAAS,IACnB,cAACY,EAAA,EAAD,CAAWF,MAASorB,EAApB,6BAEJ,sBAAKprB,MAASwpB,EAAd,UACI,cAAC,GAAD,CAAUlqB,MAAS,IACnB,cAACW,EAAA,EAAD,CAAMD,MAASorB,EAAf,SACI,cAAClrB,EAAA,EAAD,CAAWF,MAASorB,EAApB,iCAGR,sBAAKprB,MAASwpB,EAAd,UACI,cAAC,GAAD,CAAUlqB,MAAS,IACnB,cAACY,EAAA,EAAD,CAAWF,MAASorB,EAApB,6BAEJ,sBAAKprB,MAASwpB,EAAd,UACI,cAAC,GAAD,CAAUlqB,MAAS,IACnB,cAACY,EAAA,EAAD,CAAWF,MAASorB,EAApB,yBAGR,cAAC,GAAD,CAAe7oB,MAAS,OAAQD,KAAQ,EAAG6kB,QACvC,CACA1jB,EAAuB8nB,eACvB9nB,EAAuB+nB,kBACvB/nB,EAAuBgoB,WACvBhoB,EAAuBioB,gBAL3B,SASIL,EAAiB,OAAQJ,EAAU,SAGvC,cAAC,GAAD,CAAe1oB,MAAS,OAAQD,KAAQ,EAAI6kB,QACxC,CACA1jB,EAAuBkoB,eACvBloB,EAAuBmoB,kBACvBnoB,EAAuBooB,WACvBpoB,EAAuBqoB,gBAL3B,SASQT,EAAkB,OAAQJ,EAAU,SAG5C,cAAC,GAAD,CAAe1oB,MAAS,OAAQD,KAAQ,EAAI6kB,QACxC,CACA1jB,EAAuBsoB,eACvBtoB,EAAuBuoB,kBACvBvoB,EAAuBwoB,WACvBxoB,EAAuByoB,gBAL3B,SASQb,EAAiB,OAAQJ,EAAU,eC5ExCkB,GAvBA,WACGvtB,cAAd,IAEMwtB,EAAc9rB,GAAc,SAAAM,GAAK,yBAAEA,EAAMC,gBAAR,iBAAE,EAAgBqqB,iBAAlB,aAAE,EAA2BvsB,SAEpE,OACG,mCACC,eAAC,GAAD,WACI,cAAC,GAAD,CAAe4D,MAAS,SAAUD,KAAQ,EAA1C,SACE,cAAC,GAAD,CAAWshB,MAASwI,EAAYC,OAAQtJ,OAAUhf,EAAoBsoB,OAAQ9C,WAAc,MAE9F,cAAC,GAAD,CAAehnB,MAAS,SAAUD,KAAQ,EAA1C,SACE,cAAC,GAAD,CAAWshB,MAASwI,EAAYE,OAAQvJ,OAAUhf,EAAoBuoB,OAAS/C,WAAc,MAE/F,cAAC,GAAD,CAAehnB,MAAS,YAAaD,KAAQ,EAA7C,SACE,cAAC,GAAD,CAAWshB,MAASwI,EAAY5E,UAAWzE,OAAUhf,EAAoByjB,UAAY+B,WAAc,Y,UC8ClGgD,GA7DA,SAAC,GAAiE,IAAhE3I,EAA+D,EAA/DA,MAAO4I,EAAwD,EAAxDA,KAAMzJ,EAAkD,EAAlDA,OAAuB0J,GAA2B,EAA1CvH,cAA0C,EAA3BuH,SAA2B,GAC9D7tB,cACgBuF,oBAAS,IAFqC,mBAErEsjB,EAFqE,KAE5DuC,EAF4D,KAGtEN,EAAcppB,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASkiB,UAClD4G,EAAatpB,GAAgB,SAAAkE,GAAO,OAAEA,EAAQ1D,SAAS+oB,oBAiB7DllB,qBAAU,WACNC,QAAQC,IAAIme,IAAW2G,KAExB,CAACA,IAEJhlB,qBAAU,cACP,CAAC+iB,IAUJ,OACE,sBAAKznB,MATS,CACdjB,MAAO,OAEPI,QAAS,QAOR2oB,aAAgB,kBAAIkC,GAAYvC,IAChC9F,aAAe,kBAAIqI,GAAYvC,IAC/B7b,UAAa,WAAK+d,EAAW5G,IAH9B,UAMI6F,MAAM0B,KAAK1B,MAAMhF,IAAQ1gB,KAAI,SAAC2f,EAAGvQ,GAC/B,OACE,cAAC,GAAD,CAAoBhT,OAxCPotB,EAwC8BhD,EAxC4DK,EAwC/CtC,EAvC1DiF,GAAc3J,EACT,EAEL2J,IAAgB3J,GAAyB,OAAf2J,GAC5B/nB,QAAQC,IAAI,QACJ,GAGDmlB,EAAW,EAAE,GA+BkDhB,iBAAoBW,IAAgB3G,GAArFzQ,GAxCL,IAACoa,EAA0F3C,KA+C7G,cAAC4C,GAAA,EAAD,CAASpqB,MAASkqB,EAAlB,SACGD,Q,4ICvCLI,GAAgB,CACpBhpB,EAAuBipB,UACvBjpB,EAAuBkpB,WACvBlpB,EAAuBmpB,mBAGnBC,GAAmB,CACvBppB,EAAuBqpB,gBACvBrpB,EAAuBspB,iBACvBtpB,EAAuB0jB,aAGnB6F,GAAmB,CACvBvpB,EAAuBwpB,cACvBxpB,EAAuBypB,aACvBzpB,EAAuB0pB,UAEnBC,GAAqB,CACzB3pB,EAAuB4pB,aACvB5pB,EAAuB6pB,eACvB7pB,EAAuB8pB,aAGnBC,GAAgB,CACpB/pB,EAAuBgqB,aACvBhqB,EAAuBiqB,UACvBjqB,EAAuBkqB,eA2CVC,GAxCC,WAAO,IAAD,8BACZpvB,EAAQC,cACRovB,EAAY1tB,GAAc,SAAAM,GAAK,yBAAEA,EAAMC,gBAAR,iBAAE,EAAgBqqB,iBAAlB,aAAE,EAA2B+C,OAC5D/I,EAAgB5kB,GAAc,SAAAM,GAAK,OAAEA,EAAMC,SAASkiB,UAG1D,OACG,mCACC,eAAC,GAAD,CAAgBiF,QAAW,EAA3B,UACI,eAAC,GAAD,CAAezlB,MAAS,QAASD,KAAQ,EAAG6kB,QAAWyF,GAAvD,UACE,cAAC,GAAD,CAASH,QAAW,SAAUvH,cAAiBA,EAAenC,OAAUnf,EAAuBipB,UAAWjJ,MAAK,UAAIoK,EAAUE,UAAd,aAAI,EAAcC,OAAQ3B,KAAQ,cAAC4B,GAAA,EAAD,CAAe9uB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OAC7M,cAAC,GAAD,CAASmqB,QAAW,UAAWvH,cAAiBA,EAAenC,OAAUnf,EAAuBkpB,WAAYlJ,MAAK,UAAIoK,EAAUE,UAAd,aAAI,EAAcG,QAAS7B,KAAQ,cAAC8B,GAAA,EAAD,CAAWhvB,MAAS,UAAWU,MAAQ,CAACH,SAAU,YACtM,cAAC,GAAD,CAAS4sB,QAAW,iBAAkBvH,cAAiBA,EAAenC,OAAUnf,EAAuBmpB,kBAAmBnJ,MAAK,UAAIoK,EAAUE,UAAd,aAAI,EAAcK,eAAgB/B,KAAQ,cAACgC,GAAA,EAAD,CAAe3uB,SAAW,QAAQP,MAAS,UAAWU,MAAQ,CAACH,SAAU,eAEpP,eAAC,GAAD,CAAe0C,MAAS,WAAYD,KAAQ,EAAG6kB,QAAW6F,GAA1D,UACE,cAAC,GAAD,CAASP,QAAW,iBAAkBvH,cAAiBA,EAAgBnC,OAAUnf,EAAuBqpB,gBAAiBrJ,MAAK,UAAIoK,EAAUS,UAAd,aAAI,EAAcC,aAAclC,KAAQ,cAACmC,GAAA,EAAD,CAAUrvB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OAC7N,cAAC,GAAD,CAASmqB,QAAW,iBAAkBvH,cAAiBA,EAAgBnC,OAAUnf,EAAuBspB,iBAAkBtJ,MAAK,UAAIoK,EAAUS,UAAd,aAAI,EAAcG,cAAepC,KAAQ,cAACqC,GAAA,EAAD,CAAWvvB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OAChO,cAAC,GAAD,CAASmqB,QAAW,WAAYvH,cAAiBA,EAAgBnC,OAAUnf,EAAuB0jB,YAAa1D,MAAK,UAAIoK,EAAUS,UAAd,aAAI,EAAcK,SAAUtC,KAAQ,cAACuC,GAAA,EAAD,CAAezvB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,UAEtN,eAAC,GAAD,CAAeC,MAAS,UAAWD,KAAQ,EAAG6kB,QAAWgG,GAAzD,UACE,cAAC,GAAD,CAASV,QAAW,aAAcvH,cAAiBA,EAAgBnC,OAAUnf,EAAuBwpB,cAAexJ,MAAK,UAAIoK,EAAUgB,UAAd,aAAI,EAAcC,WAAYzC,KAAQ,cAAC0C,GAAA,EAAD,CAAU5vB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OACrN,cAAC,GAAD,CAASmqB,QAAW,YAAavH,cAAiBA,EAAgBnC,OAAUnf,EAAuBypB,aAAczJ,MAAK,UAAIoK,EAAUgB,UAAd,aAAI,EAAcG,UAAW3C,KAAQ,cAACqC,GAAA,EAAD,CAAWvvB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OACnN,cAAC,GAAD,CAASmqB,QAAW,YAAavH,cAAiBA,EAAgBnC,OAAUnf,EAAuB0pB,SAAU1J,MAAK,UAAIoK,EAAUgB,UAAd,aAAI,EAAcI,MAAO5C,KAAQ,cAAC6C,GAAA,EAAD,CAAS/vB,MAAS,UAAWU,MAAQ,CAACH,SAAU,eAErM,eAAC,GAAD,CAAe0C,MAAS,YAAaD,KAAQ,EAAG6kB,QAAWoG,GAA3D,UACE,cAAC,GAAD,CAASd,QAAW,YAAavH,cAAiBA,EAAgBnC,OAAUnf,EAAuB4pB,aAAc5J,MAAK,UAAIoK,EAAUsB,UAAd,aAAI,EAAcC,UAAW/C,KAAQ,cAACgD,GAAA,EAAD,CAAgBlwB,MAAS,UAAWU,MAAQ,CAACH,SAAU,YAClN,cAAC,GAAD,CAAS4sB,QAAW,cAAevH,cAAiBA,EAAgBnC,OAAUnf,EAAuB6pB,eAAgB7J,MAAK,UAAIoK,EAAUsB,UAAd,aAAI,EAAcG,YAAajD,KAAQ,cAACkD,GAAA,EAAD,CAAOpwB,MAAS,UAAWU,MAAQ,CAACH,SAAU,YAC/M,cAAC,GAAD,CAAS4sB,QAAW,WAAYvH,cAAiBA,EAAgBnC,OAAUnf,EAAuB8pB,YAAa9J,MAAK,UAAIoK,EAAUsB,UAAd,aAAI,EAAcK,SAAUnD,KAAQ,cAACoD,GAAA,EAAD,CAAUtwB,MAAS,UAAWU,MAAQ,CAACH,SAAU,eAE3M,eAAC,GAAD,CAAe0C,MAAS,SAAUD,KAAQ,EAAG6kB,QAAWwG,GAAxD,UACE,cAAC,GAAD,CAASlB,QAAW,YAAavH,cAAiBA,EAAenC,OAAUnf,EAAuBgqB,aAAchK,MAAK,UAAIoK,EAAU6B,UAAd,aAAI,EAAcC,UAAWtD,KAAQ,cAACuD,GAAA,EAAD,CAAQzwB,MAAS,UAAWU,MAAQ,CAACH,SAAU,YACzM,cAAC,GAAD,CAAS4sB,QAAW,SAAUvH,cAAiBA,EAAenC,OAAUnf,EAAuBiqB,UAAWjK,MAAK,UAAIoK,EAAU6B,UAAd,aAAI,EAAcG,OAAQxD,KAAQ,cAACyD,GAAA,EAAD,CAAiB3wB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,OAC/M,cAAC,GAAD,CAASmqB,QAAW,aAAcvH,cAAiBA,EAAenC,OAAUnf,EAAuBkqB,cAAelK,MAAK,UAAIoK,EAAU6B,UAAd,aAAI,EAAcK,WAAY1D,KAAQ,cAAC2D,GAAA,EAAD,CAAY7wB,MAASX,EAAMY,QAAQC,QAAQC,KAAM6C,KAAQ,gBChBrN8tB,I,OAlEC,WACZ,IAAMzxB,EAAQC,cAGRyxB,EAAmB,CACrBvxB,OAAQ,cAERO,eAAgB,gBAChB4nB,UAAW,OACXqJ,UAAW,QACXnxB,QARUglB,aAAcxlB,EAAMylB,YAAYC,GAAG,OAQ9B,cAAc,QAK3BkM,EAAwB,CAC1B7wB,WAAYf,EAAMgB,WAAWD,WAC7BJ,MAAOX,EAAMY,QAAQC,QAAQC,KAC7BI,SAAU,MACVC,WAAY,QAGV0wB,EAAoBvvB,YAAW,CACjCC,KAAM,CAEFpC,OAAQ,OACRiG,OAAO,aAAD,OAAepG,EAAMY,QAAQC,QAAQC,MAC3C6B,YAAa,OACbrC,aAAc,SANIgC,CAQvBc,KAEH,OACI,eAACA,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGjC,MAASqwB,EAAvC,UACQ,cAACG,EAAD,CAAmBruB,MAAI,EAACC,GAAM,GAAIquB,GAAM,GAAIC,GAAM,EAAGC,GAAM,EAA3D,SACI,cAAC,GAAD,CAAiBpuB,MAAQ,kBAAzB,SACI,cAACtC,EAAA,EAAD,CAAMD,MAASuwB,EAAf,SACI,cAACrwB,EAAA,EAAD,CAAWoC,KAAQ,IAAKtC,MAASuwB,EAAjC,kHAOZ,cAACC,EAAD,CAAmBruB,MAAI,EAACC,GAAM,GAAIquB,GAAM,GAAIC,GAAM,EAAGC,GAAK,EAA1D,SACI,cAAC,GAAD,CAAiBpuB,MAAQ,oBAAzB,SACI,cAAC,GAAD,QAGR,cAACiuB,EAAD,CAAmBruB,MAAI,EAACC,GAAM,GAAIquB,GAAM,GAAIC,GAAM,EAAGC,GAAM,EAA3D,SACI,cAAC,GAAD,CAAiBpuB,MAAQ,SAAzB,SACI,cAAC,GAAD,QAGR,cAACiuB,EAAD,CAAmBruB,MAAI,EAACC,GAAM,GAAIquB,GAAM,GAAIC,GAAM,EAAGC,GAAM,EAA3D,SACI,cAAC,GAAD,CAAiBpuB,MAAQ,SAAzB,SACI,cAAC,GAAD,aC3BTquB,OAjCf,WACE,IAAMjyB,EAAQC,cACRiyB,EAAQ1M,aAAcxlB,EAAMylB,YAAYC,GAAG,OAC3CyM,EAAc,CAClBjxB,SAAU,OACVH,WAAYf,EAAMgB,WAAWD,YAGzBqxB,EAAiB,CACrBlxB,SAAU,OACVH,WAAYf,EAAMgB,WAAWD,YAI/B,OACE,eAACqC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAA3B,UACI,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,EAAGpC,MAAS,CAACb,QAAS0xB,EAAM,OAAO,QAApD,SACI,0BAGJ,eAAC9uB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,GAAjB,UACI,8BACA,cAACnC,EAAA,EAAD,CAAMD,MAAS8wB,EAAf,iCAEA,8BACA,cAAC7wB,EAAA,EAAD,CAAMD,MAAS+wB,EAAf,8D,8BC6BGC,OA1Cf,WACE,IAAMC,EAAa5wB,GAAgB,SAAAkE,GAAO,OAAIA,EAAQ1D,SAASqwB,kBACzDC,EAAgBjlB,iBAAM,GAAIklB,KAAc,CAC1CzxB,WAAY,CACV0xB,aAAc,CACZlyB,QAAS,UACTmyB,GAAI,UACJC,KAAM,cASd,OALA7sB,qBAAU,WACRusB,IACAtsB,QAAQC,IAAIwsB,QACZ,IAGJ,cAAC,KAAD,CAAe5e,MAAS2e,EAAxB,SACI,eAACpvB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGjC,MAAS,CAACinB,UAAW,QAASnoB,OAAQ,QAApE,UACM,cAACiD,EAAA,EAAD,CAAMI,MAAI,EAACuuB,GAAM,GAAIC,GAAM,GAA3B,SACA,cAAC,GAAD,MAEA,eAAC5uB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAW,EAAGjC,MAAS,CAACuB,WAAY,MAAOvC,cAAe,OAA1E,UAEI,cAAC+C,EAAA,EAAD,CAAMI,MAAI,EAACuuB,GAAM,GAAIC,GAAM,GAA3B,SACI,cAAC,GAAD,MAEJ,cAAC5uB,EAAA,EAAD,CAAMI,MAAI,EAACuuB,GAAM,GAAIC,GAAM,EAA3B,SACM,cAAC,EAAD,MAEN,cAAC5uB,EAAA,EAAD,CAAMI,MAAI,EAACuuB,GAAM,GAAIC,GAAM,GAA3B,SACM,cAAC,EAAD,SAGV,cAAC5uB,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAM,GAAIpC,MAAS,CAAClB,OAAQ,MAAO+f,QAAS,GAAvD,SACM,cAAC,GAAD,YCxCD2S,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCPD9yB,GAAQszB,aAAe,CAChC1yB,QAAQ,CACJC,QAAS,CACL2mB,MAAOgD,KAAK,KAEZ1pB,KAAM,UACN2mB,KAAM+C,KAAK,OAGnBlnB,QAAS,SAAAiwB,GAAM,gBAAO,IAAOA,EAAd,QACfC,UAAU,CACNC,QAAQ,CACJlxB,KAAK,CACD8D,OAAQ,SAKpBrF,WAAY,CACRD,WAAY,a,6DCqWpB,SAAS2yB,GAAmBC,GAS1B,MAL4B,CAC1BvH,KAOJ,SAAuCuH,GACrC,IAAMC,EAAcC,GAAQF,EAAU,QAChCG,EAAU5M,OAAO0E,KAAKgI,GACtBG,EAAiB,GAEjBC,EAAaF,EAAQvvB,KAAI,SAACsnB,EAAQlY,GACtC,IAAMgZ,EAAiBkH,GAAQD,EAAY/H,GAAI,cAC3CoI,EAAO/M,OAAO0E,KAAKe,GACnBuH,EAAkB,GAQtB,OAPAD,EAAKrc,SAAQ,SAAA7K,GAKXmnB,EAAWnnB,GAAK1F,KAAK0D,MAAO4hB,EAAe5f,GAAG4B,OAAOilB,EAAYE,EAAQngB,IAAIhF,OAAQolB,MAEhFG,KAEHA,EAAkB,GAMxB,OALAluB,QAAQC,IAAI+tB,GACZA,EAAWpc,SAAQ,SAACG,EAAGgS,GACnBmK,EAAWJ,EAAQ/J,IAAQhS,KAEVmc,EAlCVC,CAA8BR,GAKvCrE,IAiCJ,SAA8BqE,GAC5B,IAAMS,EAAmB,GACnBC,EAAeR,GAAQF,EAAU,QACnCW,EAAkB,GAkBtB,OAjBWpN,OAAO0E,KAAKyI,GAClBzc,SAAQ,SAAAiU,GACX,IAAM0I,EAAoBF,EAAaxI,GAAGld,OACpC6lB,EAAaX,GAAQQ,EAAaxI,GAAI,YAEtC4I,EADcJ,EAAaxI,GAAGld,OAAOglB,EAAShlB,OACXylB,EACrCM,EAAgB,CAClBC,YAAaN,EAAaxI,GAAGld,OAAOglB,EAAShlB,OAC7CimB,WAAYH,GAEGvN,OAAO0E,KAAK4I,GACpB5c,SAAQ,SAAAid,GACfH,EAASG,GAAMxtB,KAAK0D,MAAsE,GAA9D1D,KAAKC,KAAOktB,EAAWK,GAAIlmB,OAAO4lB,EAAmB,IAAK,IAAQ,IAAK,MAErGD,EAAWzI,GAAK6I,KAGXJ,EA1DIQ,CAAqBnB,GAK9B3zB,MAyDJ,SAA8B2zB,GAC5B,IAAMoB,EAAmB,GAEnBC,EAAenB,GAAQF,EAAU,SACjCsB,EAAa/N,OAAO0E,KAAKoJ,GAC3BE,EAAwB,GAM5B,OAJAD,EAAWrd,SAAQ,SAAAiU,GACjBqJ,EAAiBrJ,GAAKxkB,KAAK0D,MAAOiqB,EAAanJ,GAAGld,OAAOglB,EAAShlB,OAAQomB,MAGrEG,EAxEaC,CAAqBxB,IA2E3C,SAASyB,GAAiB9S,GACxB,IAAM+S,EAAqBxB,GAAQvR,EAAM,YAQzC,OAPA4E,OAAO0E,KAAKyJ,GAAoBzd,SAAQ,SAAAtI,GACtC,IACM4T,EAQV,SAA6BZ,GAE3B,IACIgT,EAA+B,GA0CnC,OAzCAhT,EAAK1K,SAAQ,SAAC2d,GACZ,GAAIA,EAAUltB,OAASrD,EAAUsD,KAAK,CACpCtC,QAAQC,IAAI,iBACZ,IAAMuvB,EAAa,IAAIjrB,YAAUgrB,EAAUttB,MAAOstB,EAAUptB,KACtDM,EAAkB,CACtB7E,MAAO2xB,EAAU3xB,MACjB6xB,WAAYF,EAAUltB,KACtBD,KAAMmtB,EAAUntB,KAAKstB,MAAM,KAAKnxB,KAAI,SAAAmH,GAAC,OAAEA,EAAEiqB,WAErCC,EAAmB,IAAIC,iBAAeL,EAAY,CAAC/sB,IAEzD6sB,EAAW5b,KAAKkc,GAWlB,GAAIL,EAAUltB,OAASrD,EAAU8wB,MAAM,CACrC9vB,QAAQC,IAAI,kBACZ,IAAMuvB,EAAa,IAAIjrB,YAAUgrB,EAAUttB,MAAOstB,EAAUptB,KACtDM,EAAkB,CACtB7E,MAAO2xB,EAAU3xB,MACjB6xB,WAAYF,EAAUltB,KACtBD,KAAMmtB,EAAUntB,KAAKstB,MAAM,KAAKnxB,KAAI,SAAAmH,GAAC,OAAEA,EAAEiqB,WAErCC,EAAmB,IAAIC,iBAAeL,EAAY,CAAC/sB,IACzD6sB,EAAW5b,KAAKkc,OAatB,SAA8BrS,GAC5B,IAAIwS,EAAgB,CACpBA,EAAc,IACTxS,EAA4B3L,SAAQ,SAACoe,EAAqBjM,EAAakM,GACtE,IAAIC,EAAY,EAEZD,EAAME,OAAM,SAACC,GACf,OAAIJ,IAAQI,IA8BOC,EA3BKD,EAAGprB,QA2BOsrB,EA3BEF,EAAGjuB,MA2BQouB,EA3BDP,EAAIhrB,QA2BYwrB,EA3BHR,EAAI7tB,QA4BnEkuB,EAAUE,GAAWA,EAAUD,GAC/BD,EAAUG,GAAWA,EAAUF,GAC/BC,EAAWF,GAAWC,EAAWE,IAHvC,IAA6BH,EAAeC,EAAaC,EAAeC,KArB9DT,EAASG,GAAWxc,KAAKsc,IAEzBE,GAAwB,EACxBH,EAAShM,GAAO,CAACiM,OAGrB,IAAMS,EAAevP,OAAO0E,KAAKmK,GAAUxxB,KAAI,SAAAsnB,GAC7CkK,EAASlK,GAAKkK,EAASlK,GAAG7N,MAAK,SAACtH,EAAOqD,GAAR,OAAiBrD,EAAE1L,QAAQ+O,EAAE/O,cAW9D,OARmBkc,OAAO0E,KAAK6K,GAAelyB,KAAI,SAAAsnB,GAAC,OACjD,IACI6K,aAAW,CACbvjB,KAAM,OACNoQ,OAAQwS,EAASlK,QAjClB8K,CAAqBrB,GArDXsB,CADDvB,EAAmB/lB,IAEjC+lB,EAAmB/lB,GAAO4T,KAG5Bld,QAAQC,IAAIovB,GACLA,EA+FT,SAASwB,GAAmBvU,GAgBxB,OAf2CA,EAAK/d,KAAI,SAACuyB,GAAD,MACpD,CACItyB,IAAKsyB,EAAQC,OACbC,UAAWF,EAAQE,UACnBC,YAAY,EACZC,QAAS,wBACTC,eAAgB,GAChBC,gBAAiB,IACjBhvB,KAAM,CAAC,CACL+jB,WAAYrnB,EAAuBgyB,EAAQ3K,YAC3CkL,SAAUpyB,EAAuB6xB,EAAQ1uB,KAAO,IAAM0uB,EAAQO,UAC9Dr3B,MAAOoF,EAAoB0xB,EAAQ92B,OACnCosB,KAAM0K,EAAQ1K,WAMxB,SAASyH,GAAQxM,EAAYiQ,GAC3B,OAAOjQ,EAAIxN,QAAO,SAAC0d,EAAKC,GAEtB,OADAD,EAAIC,EAAIF,IAAR,uBAAyBC,EAAIC,EAAIF,KAAc,IAA/C,CAAmDE,IAC5CD,IACN,IAGL,SAASE,GAAgBnV,GAcvB,OAbAA,EAAK1K,SAAQ,SAACsM,EAAQ6F,GACpB,IAAM2N,EAAqBpV,EAAKyH,GAAL,SACrB4N,EAA4BrV,EAAKyH,GAAL,KAC5B6N,EAAwB7yB,EAAW2yB,GACnCG,EAAyB7yB,EAAU2yB,GACzCrV,EAAKyH,GAAL,SAAwB6N,EACxBtV,EAAKyH,GAAL,KAAoB8N,EAEpB,IAAMxS,EAAa,IAAInd,KAAKoa,EAAKyH,GAAL,OACtBzE,EAAW,IAAIpd,KAAKoa,EAAKyH,GAAL,KAC1BzH,EAAKyH,GAAL,MAAqB1E,EACrB/C,EAAKyH,GAAL,IAAmBzE,KAEdhD,EAaT,SAASwV,GAAUC,GAUjB,OATgB,IAAIC,SAA0B,SAASC,EAASC,GAC9D,IAAIC,EAAM,IAAIC,MACdD,EAAI3zB,IAAMuzB,EAAMf,UAChBmB,EAAIE,OAAS,WACXN,EAAMX,gBAAkBe,EAAIh4B,OAC5B43B,EAAMZ,eAAiBgB,EAAI/3B,MAC3B63B,EAAQE,OAMd,SAASG,GAAchpB,EAAaipB,GAQlC,OAPgB,IAAIP,SAAwB,SAASC,EAASC,GAC5DM,KAAaC,YAAYnpB,EAAKipB,GAAWvF,MAAK,SAAC0F,GAC3CT,EAAQS,MACNC,OAAM,SAACC,GACR5yB,QAAQ6yB,MAAR,iCAAwCvpB,EAAxC,0BAA6DipB,UAMtE,SAASO,GAAcxpB,EAAaypB,GAQpC,OANgBT,GAAkBhpB,EAAKypB,GAAa/F,MAAK,SAACgG,GACtD,IArCmB1W,EAsCnB,OAtCmBA,EAqCkB0W,EAAUvwB,MApC5CmP,SAAQ,SAACsM,EAAQ6F,GACpB,IAAMkP,EAA4B3W,EAAKyH,GAAL,WAC5B6N,EAAoC9yB,EAAuBm0B,GACjE3W,EAAKyH,GAAL,WAA0B6N,KAGrBtV,KAgCJqW,OAAM,SAACC,GACR5yB,QAAQ6yB,MAAR,iCAAwCvpB,OAkB7BpN,ICxoBAg3B,GALW,CACxBh3B,SDmL6B,CAE7BqD,cAAe,GACf6e,OAAQ,KACR+U,UAAW,GACX7zB,eAAgB,GAChBgf,gBA3BiC,CACjC9b,SAJ8B,GAK9BvG,MAJgC,GAKhCijB,KAJ+B,IA6B/Bpf,QAAQ,EACR9D,gBArBkC,CAClCsC,OAH+B,GAI/BR,YAAa,UACbF,MAAO,SACPC,OAAQ,eAkBRu1B,gBAAiB,GACjB7M,UAhB+B,CAC/BH,KAAM,GACNkD,IAAK,GACLtvB,MAAO,IAcPwkB,kBAAmB,GACnB+N,eAAgB8G,YAAK,yCAAC,WAAMzzB,GAAN,0BAAA8Q,EAAA,sDAKdxU,EAAyB,CAC7BqhB,OAH6B,GAI7B+V,KALyB,IAQvBC,EAAYT,GATVU,EAAU,+CASuB,GACnCC,EAAYX,GAAcU,EAAS,GACnCE,EAAYZ,GAAcU,EAAS,GACnCG,EAAa,CAACJ,EAAWE,EAAWC,GAExC1B,QAAQ4B,IAAID,GAAY3G,MAAK,SAAC6G,GAC5B,IAAIC,EAA0C,GAC1CC,EAAqC,GAEzCF,EAAWjiB,SAAQ,SAACoiB,GAClB,GAAI/P,MAAMC,QAAQ8P,GAAe,CAAC,IAAD,EAE3BC,EAAyBpD,GADJmD,GAErBE,EAAkCD,EAAuB11B,KAAI,SAAC41B,GAAD,OAAoBrC,GAAUqC,MAC/FL,EAAwBpgB,KAAxB,MAAAogB,EAAuB,aAASI,IAChCH,EAAmBrgB,KAAnB,MAAAqgB,EAAkB,aAASE,KAC3B,EAAA/3B,EAASo3B,MAAK5f,KAAd,qBAAsBsgB,SAEtBh0B,QAAQ6yB,MAAM,gCAGlBb,QAAQ4B,IAAIE,GAAyB9G,MAAK,SAACoH,GACzC,IAAIC,EAAuBN,EAAmBx1B,KAAI,SAAS+1B,EAAuB3mB,GAG9E,OAFA2mB,EAAO,eAAqC,IAAfF,EAAIzmB,GAAGvT,MACpCk6B,EAAO,gBAAuC,IAAhBF,EAAIzmB,GAAGxT,OAC9Bm6B,KAEX10B,EAAQ20B,mBAAmBF,GAC3Bz0B,EAAQ40B,kBAAkBH,MAE5B,IAAM9N,EAAWmH,GAAmBxxB,EAASo3B,MAC7C1zB,EAAQ60B,cAAclO,GACtB3mB,EAAQ80B,oBAAoBx4B,EAASo3B,MACrC1zB,EAAQ+0B,YAAW,MAGrBrC,GAAoBkB,EAAS,GAAGxG,MAAK,SAAC4H,GACpC,IAAMC,EAAmBpD,GAAgBmD,EAAYnyB,MACrD7C,EAAQk1B,sBAAsBD,GAC9B,IAAMvW,EAAkB8Q,GAAiByF,GAEzCj1B,EAAQm1B,oBAAoBzW,GAC5B1e,EAAQ+0B,YAAW,MAClBhC,OAAM,SAACC,GACR5yB,QAAQ6yB,MAAR,iCAAwCW,OAtDtB,4CAAD,uDA0DrBkB,oBAAqBM,aAAO,SAAC/4B,EAAO0xB,GAClC1xB,EAAMm3B,gBAAkBzF,KAE1B8G,cAAeO,aAAO,SAAC/4B,EAAOg5B,GAC5Bh5B,EAAMsqB,UAAY0O,KAEpBH,sBAAuBE,aAAO,SAAC/4B,EAAOsiB,GACpCtiB,EAAMuiB,kBAAoBD,KAE5BgW,mBAAoBS,aAAO,SAAC/4B,EAAOi5B,GACjCj5B,EAAMqD,eAAiB41B,KAEzBV,kBAAmBQ,aAAO,SAAC/4B,EAAOi5B,GAChCj5B,EAAMsD,cAAgB21B,KAExBC,eAAgBH,aAAO,SAAC/4B,EAAOm5B,GAC7B,GAAIA,EAAchX,SAAWniB,EAAMmiB,OACjCniB,EAAMmiB,OAAS,KACfniB,EAAMsD,cAAgBtD,EAAMqD,mBACvB,CACL,GAAI81B,EAAcC,cAAgBn2B,EAAkBo2B,MAAM,CACxD,IAAMC,EAAgBt5B,EAAMqD,eAAe8e,QAAO,SAAA+V,GAAE,OAAEA,EAAG/xB,KAAK,GAAGivB,WAAa+D,EAAchX,UAC5FniB,EAAMsD,cAAgBg2B,EACtBt5B,EAAMmiB,OAASgX,EAAchX,OAE/B,GAAIgX,EAAcC,cAAgBn2B,EAAkBs2B,MAAM,CACxD,IAAMC,EAAax5B,EAAMqD,eAAe8e,QAAO,SAAA+V,GAAE,OAAEA,EAAG/xB,KAAK,GAAGpI,QAAUo7B,EAAchX,UACtFniB,EAAMsD,cAAgBk2B,EACtBx5B,EAAMmiB,OAASgX,EAAchX,OAE/B,GAAIgX,EAAcC,cAAgBn2B,EAAkBw2B,WAAW,CAAC,IAAD,EACzDhG,EAAK,UAAI0F,EAAchX,cAAlB,aAAI,EAAsBsR,MAAM,KACzC,GAAIA,EAAM,CACR,IAAIvJ,EAAauJ,EAAM,GACnBtJ,EAAOsJ,EAAM,GACjB1vB,QAAQC,IAAImmB,EAAMD,GAElB,IAAMwP,EAA2B15B,EAAMqD,eAAe8e,QAAO,SAAA+V,GAAE,OAAEA,EAAG/xB,KAAK,GAAG+jB,aAAeA,GAAegO,EAAG/xB,KAAK,GAAGgkB,OAASA,KAE9HnqB,EAAMsD,cAAgBo2B,EACtB31B,QAAQC,IAAI21B,YAAMD,IAClB15B,EAAMmiB,OAASgX,EAAchX,aAKrC2W,oBAAqBC,aAAO,SAAC/4B,EAAOqiB,GAEjCriB,EAAMqiB,gBAAmBA,KAE5B2G,iBAAkBoO,aAAM,SAACzzB,EAASwe,GAClB,MAAVA,GACFxe,EAAQi2B,gBAGQ3U,OAAOvX,OAAO1K,GAChB62B,SAAS1X,IACvBxe,EAAQu1B,eAAe,CACrBE,YAAan2B,EAAkBo2B,MAC/BlX,OAAQA,IAIQ8C,OAAOvX,OAAOvK,GAChB02B,SAAS1X,IACzBxe,EAAQu1B,eAAe,CACrBE,YAAan2B,EAAkBs2B,MAC/BpX,OAAQA,IAIS8C,OAAOvX,OAAO7K,GAChBg3B,SAAS1X,IAC1Bxe,EAAQu1B,eAAe,CACrBE,YAAan2B,EAAkBw2B,WAC/BtX,OAAQA,OAKdyX,cAAeb,aAAO,SAAC/4B,GACrBA,EAAMsD,cAAgBtD,EAAMqD,kBAE9By2B,kBAAmBf,aAAO,SAAC/4B,EAAOskB,GAChCtkB,EAAMmiB,OAASmC,KAEjB5gB,oBAAqBq1B,aAAO,SAAC/4B,EAAOuB,GAClC,IAAIw4B,EAAe/5B,EAAMm3B,gBAAgBhV,QAAO,SAAAF,GAAC,OAAEA,EAAE6S,SAAWvzB,EAAKgB,OAAK,GACtEy3B,EAA6B,GACjC/U,OAAO0E,KAAKoQ,GAAYpkB,SAAQ,SAASiU,GAErC,GAAIA,EAAEqQ,WAAW,SAAS,CACxB,IACMC,EAAwB,CAC5Bx3B,OAAQq3B,EAFEnQ,GAGVuQ,KAAMvQ,GAERoQ,EAAcviB,KAAKyiB,OAGzB,IAAMv0B,EAAwB,CAC5BtD,OAAQ23B,EACRn4B,YAAak4B,EAAWp0B,KACxBhE,MAAOo4B,EAAWp4B,MAClBC,OAAQm4B,EAAWn4B,QAErB5B,EAAMD,gBAAkB4F,KAE1B+yB,WAAYK,aAAO,SAAC/4B,EAAOo6B,GACzBp6B,EAAM6D,OAASu2B,KAEjB3T,uBAAwB2Q,aAAM,SAACzzB,EAAS4iB,GACpCxiB,QAAQC,IAAIuiB,GACZ5iB,EAAQ6iB,iBAAiBD,MAE7BC,iBAAkBuS,aAAO,SAAC/4B,EAAOumB,GAC7BvmB,EAAMk3B,UAAY3Q,OEjXT8T,GAFDC,YAAYrD,ICK1B/nB,IAASqrB,OACL,cAACC,GAAA,EAAD,CAAez8B,MAASA,GAAxB,SACE,cAAC,IAAD,CAAes8B,MAASA,GAAxB,SACA,cAAC,GAAD,QAGJrzB,SAASyzB,eAAe,SAG1B7J,O","file":"static/js/main.5e200e7c.chunk.js","sourcesContent":["import {Paragraph, Text, Pane} from 'evergreen-ui';\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nfunction Sidebar(){\r\n    const theme = useTheme();\r\n\r\n    const sidebarContainer = {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        paddingBottom: \"1em\",\r\n        paddingRight: \"2em\",\r\n        textAlign: \"left\" as const,\r\n        display: \"flex\",\r\n        flexDirection: \"column\" as const,\r\n        justifyContent: \"space-evenly\",\r\n        color: theme.palette.primary.main,\r\n        fontFamily: theme.typography.fontFamily, \r\n    } as React.CSSProperties;\r\n\r\n    const sidebarParagraph ={\r\n        color: theme.palette.primary.main,\r\n        fontSize: \"9pt\",\r\n        lineHeight: \"12pt\",\r\n        fontFamily: theme.typography.fontFamily, \r\n    } as React.CSSProperties;\r\n\r\n    return(\r\n        <Pane style = {sidebarContainer}>\r\n            <Text style = {{lineHeight: '12pt'}}>\r\n                    <Paragraph style = {sidebarParagraph}>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, \r\n                        making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45.\r\n                    </Paragraph>\r\n            </Text>\r\n            <Text style = {sidebarParagraph}>\r\n            <Paragraph>\r\n                \"Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Contrary to popular belief, Lorem Ipsum is not simply random text.\r\n            </Paragraph>\r\n            </Text>\r\n        </Pane>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import { createTypedHooks } from \"easy-peasy\";\r\nimport { StoreModel } from \"./model\";\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\n// We export the hooks from our store as they will contain the\r\n// type information on them\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\n\r\n","import { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport {CrossIcon, Heading, Paragraph} from 'evergreen-ui';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactSlick from 'react-slick';\r\nimport {GlassMagnifier} from 'react-image-magnifiers';\r\nimport { useStoreState } from \"../../hooks\";\r\n// https://material-ui.com/components/material-icons/\r\n\r\n\r\ninterface LightBoxProps{\r\n    show: boolean,\r\n    onClick: any,\r\n};\r\n\r\nconst LightBox = ({show, onClick}: LightBoxProps) => {\r\n    const active_lightbox = useStoreState(state=>state.map_data.active_lightbox);\r\n    const theme = useTheme();\r\n    const slickSlide = {\r\n        height: '500px',\r\n      //   width: '500px',  \r\n        width: '100vh',  \r\n      } as React.CSSProperties\r\n\r\n      \r\n    const galleryStyle = {\r\n        height: '90vh'\r\n        // height: '100%'\r\n    }\r\n\r\n    const backDropContainer = {\r\n        width: '100%', \r\n        height: '100%',\r\n        paddingLeft: '2em',\r\n        // padding: '5em',\r\n    }\r\n    const mainGrid = {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        spacing: 0,\r\n        justify: 'space-around',\r\n    };\r\n\r\n    const closeButtonContainer = {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        color: 'white'\r\n    } as React.CSSProperties\r\n\r\n    const textStyle = {\r\n        color: 'White',\r\n        fontSize: '12pt',\r\n        lineHeight: '12pt',\r\n    }\r\n\r\n    const slick_props= {\r\n        // adaptiveHeight: false, \r\n        // adaptiveHeight: true, \r\n        variableWidth: true,\r\n        // centerMode: true, \r\n        slidesToShow: 1,\r\n        // adaptiveHeight: false, \r\n    }\r\n\r\n    // console.log(tag_stats);\r\n    const LimitedBackdrop = withStyles({\r\n        root: {\r\n          position: \"absolute\",\r\n          zIndex: 1,\r\n          boxSizing: \"border-box\",\r\n          paddingLeft: '2em',\r\n          paddingTop: '2em',\r\n          opacity: .5,\r\n          backgroundColor: 'rgb(0 0 0 / 73%)'\r\n        }\r\n    })(Backdrop);\r\n\r\n    return (\r\n    <>\r\n     <LimitedBackdrop open={show}>\r\n                <div style = {closeButtonContainer}  onClick={onClick}>\r\n                <CrossIcon></CrossIcon>\r\n                </div>\r\n\r\n            {/* <LimitedBackdrop open={showLightbox} onClick={()=>setShowLightBox(false)}> */}\r\n                <div style = {backDropContainer}>\r\n                    <Grid container spacing = {3} style = {mainGrid}>\r\n                 \r\n                        <Grid item xs = {3}>\r\n                        <Heading size = {400} color = {'white'} >{active_lightbox.title}</Heading>\r\n                            <Paragraph>\r\n                                {active_lightbox.author}\r\n                            </Paragraph>\r\n                            <Paragraph style = {textStyle}>\r\n                            {active_lightbox.description.replace(\"___\", \"\")}\r\n                            </Paragraph>\r\n                            <Paragraph style = {textStyle}>\r\n                            </Paragraph>\r\n                        </Grid>\r\n                        <Grid item xs = {9} style = {galleryStyle}>\r\n                        <ReactSlick\r\n                            {...{\r\n                                dots: true,\r\n                                infinite: true,\r\n                                speed: 500,\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 1\r\n                            }}\r\n                            {...slick_props}\r\n                            // {...rsProps}\r\n                        >\r\n                            {active_lightbox.images.map((src: any, index) => (\r\n                                <div key={index} style = {slickSlide}>\r\n                                    <GlassMagnifier\r\n                                        imageSrc = {src.source}\r\n                                        allowOverflow = {true}\r\n                                        magnifierSize = {\"40%\"}\r\n                                        \r\n                                    />\r\n                                \r\n                                </div>\r\n                            ))}\r\n                        </ReactSlick>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n        \r\n                </div>\r\n            </LimitedBackdrop>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default LightBox;","import React, { useState, useEffect } from 'react';\r\nimport Gallery from 'react-grid-gallery';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { useStoreActions, useStoreState } from \"../hooks\";\r\n\r\nimport '../css/GridGallery.css';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport ReactSlick from 'react-slick';\r\nimport \"../css/SlickSlide.css\";\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport {GlassMagnifier} from 'react-image-magnifiers';\r\nimport {thumbnailStyle} from 'react-grid-gallery';\r\nimport LightBox from './ImageGallery/LightBox';\r\n\r\n\r\n// https://codesandbox.io/s/react-grid-gallery-ztf4n?file=/src/index.js:358-880\r\n// https://codesandbox.io/s/r48lm1jopq\r\n\r\n\r\nfunction getRandomNumber(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.random() * (max - min) + min; //The maximum is exclusive and the minimum is inclusive\r\n  }\r\n\r\nconst MapGallery = () => {\r\n    // var shuffleClassName = this.state.toggleActive ? \"player-control-icon active\" : \"player-control-icon\"\r\n    const gallery_images = useStoreState(state=>state.map_data?.active_images);\r\n    const [showLightbox, setShowLightBox] = useState(false);\r\n    const set_active_lightbox = useStoreActions(actions=>actions.map_data.set_active_lightbox);\r\n    const active_lightbox = useStoreState(state=>state.map_data.active_lightbox);\r\n    const data_loaded = useStoreState(state=>state.map_data.loaded);\r\n    const theme = useTheme();\r\n\r\n    useEffect(() =>{\r\n\r\n    }, [gallery_images, active_lightbox]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"data loaded changd, val is\", data_loaded);\r\n    }, [data_loaded]);\r\n\r\n    const containerStyle = {\r\n        backgroundColor: \"white\",\r\n        height: '100%',\r\n        margin: 'auto',\r\n        flexDirection: 'column',\r\n    }  as React.CSSProperties\r\n\r\n    function get_lightbox_tb_2(this: any) {\r\n        console.log(this.props);\r\n        setShowLightBox(showLightbox=>!showLightbox);\r\n        console.log(showLightbox);\r\n        set_active_lightbox(this.props.item)\r\n    }  \r\n\r\n    const scrollContainer = {\r\n        overflow: 'hidden',\r\n        height: \"100%\",\r\n        border: `1px solid ${theme.palette.primary.main}`\r\n    }\r\n\r\n    function thumbnail_style(props: any, z: any, q: any){\r\n        const duration = getRandomNumber(0.5, 4);\r\n        if (data_loaded){\r\n            return {\r\n                animation: `fadein ${duration}s normal`,\r\n                animationIterationCound: 1,\r\n            }\r\n        }\r\n    }\r\n    return(\r\n    <div style = {containerStyle}>\r\n        <div >\r\n            <LightBox show = {showLightbox} onClick = {()=>setShowLightBox(false)}/>\r\n        </div>\r\n            <div style = {scrollContainer}>\r\n            <Scrollbars style={{ width: \"100%\", height: \"100%\"}}>\r\n                <div style = {{height: '100%', paddingTop: '0', width: \"100%\"}}>\r\n                    <Gallery \r\n                        tagStyle = {{display: 'none'}}\r\n                        // renderItem = {test_render_item}\r\n                        images = {(gallery_images)}\r\n                        customOverlay = {<div style = {{backgroundColor:\"red\"}}></div>}\r\n                        rowHeight = {75}\r\n                        maxRows = {10}\r\n                        enableLightbox = {false}\r\n                        enableImageSelection = {false}\r\n                        onClickThumbnail = {\r\n                            get_lightbox_tb_2\r\n                        }\r\n                        tileViewportStyle = {thumbnail_style}\r\n                    >\r\n                    </Gallery>\r\n                </div>  \r\n            </Scrollbars>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapGallery;","export enum AuthorDisciplineFilter{\r\n    ARTDESIGN =\"ARTDESIGN\",\r\n    ARCHITECTURE = \"ARCHITECTURE\",\r\n    LANDSCAPE = \"LANDSCAPE\",\r\n    OTHER = \"OTHER\",\r\n    ARTDESIGN_2016 =\"ARTDESIGN_2016\",\r\n    ARTDESIGN_2018 =\"ARTDESIGN_2018\",\r\n    ARTDESIGN_2020 =\"ARTDESIGN_2020\",\r\n    ARCHITECTURE_2016 =\"ARTDESIGN_2016\",\r\n    ARCHITECTURE_2018 =\"ARTDESIGN_2018\",\r\n    ARCHITECTURE_2020 =\"ARTDESIGN_2020\",\r\n    OTHER_2016 =\"OTHER_2016\",\r\n    OTHER_2018 =\"OTHER_2018\",\r\n    OTHER_2020 =\"OTHER_2020\",\r\n    LANDSCAPE_2016 =\"LANDSCAPE_2016\",\r\n    LANDSCAPE_2018 =\"LANDSCAPE_2018\",\r\n    LANDSCAPE_2020 =\"LANDSCAPE_2020\",\r\n}\r\n\r\nexport enum EventLevel{\r\n  national = \"national\",\r\n  state = \"state\", \r\n  city = \"city\",\r\n  \r\n}\r\n\r\nexport enum EventType{\r\n  DATE = \"DATE\",\r\n  RANGE = \"RANGE\",\r\n}\r\nexport enum TopicSubCategoryFilter{\r\n  BE_HOUSING = \"HOUSING\",\r\n  BE_TRANSPORTATION = \"TRANSPORTATION\",\r\n  BE_ENERGY = \"ENERGY\",\r\n  EE_COSTOFLIVING = \"COSTOFLIVING\",\r\n  EE_HOUSINGMARKET = \"HOUSINGMARKET\",\r\n  EE_COMMERCE = \"COMMERCE\",\r\n  NE_GREENSPACE = \"GREENSPACE\",\r\n  NE_POLLUTION = \"POLLUTION\",\r\n  NE_WATER = \"WATER\",\r\n  PE_GOVERMENT = \"GOVERMENT\",\r\n  PE_LEGISLATION = \"LEGISLATION\",\r\n  PE_ACTIVISM = \"ACTIVISM\",\r\n  SE_EDUCATION = \"EDUCATION\",\r\n  SE_HEALTH = \"HEALTH\",\r\n  SE_POPULATION = \"POPULATION\",\r\n}\r\n\r\nexport enum GalleryFilterType{\r\n  TOPIC,\r\n  DISCIPLINE,\r\n  THEME,\r\n}\r\nexport enum ClassYearFilter {\r\n  \r\n}\r\nexport enum ThemeCategoryFilter{\r\n    EQUITY = \"EQUITY\",\r\n    ACCESS = \"ACCESS\",\r\n    DIVERSITY = \"DIVERSITY\",\r\n}\r\n\r\n","import {Heading, Paragraph, Link, Strong, Small, Text, Icon, Pane, ArrowRightIcon} from 'evergreen-ui';\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport type {EventRow} from '../../model/map_data';\r\nimport  {EventLevel, EventType} from '../../model/enums';\r\nimport {useEffect} from 'react';\r\n\r\ntype EventInfoDisplayProps = {\r\n    info: EventRow | undefined, \r\n}\r\n\r\nfunction EventInfoDisplay({info}: EventInfoDisplayProps){\r\n    const theme = useTheme();\r\n    const infoContainer= {\r\n        height: '85%',\r\n        paddingTop: '1em',\r\n  \r\n        // border: `1px solid ${theme.palette.primary.main}`,\r\n    } as React.CSSProperties\r\n    const infoBody= {\r\n        color: theme.palette.primary.main,\r\n        fontSize: \"9pt\",\r\n        lineHeight: \"9pt\",\r\n    } as React.CSSProperties\r\n\r\n    const infoHeader= {\r\n        color: theme.palette.primary.main,\r\n        fontSize: \"9pt\",\r\n        lineHeight: \"5pt\",\r\n        fontFamily: theme.typography.fontFamily,\r\n        textDecoration: \"underline\",\r\n    } as React.CSSProperties\r\n\r\n    const paragraph ={\r\n        // : \"left\"\r\n        color: theme.palette.primary.main,\r\n        fontFamily: theme.typography.fontFamily,\r\n        fontSize: \"9pt\",\r\n        lineHeight: \"15pt\",\r\n    } as React.CSSProperties; \r\n\r\n    const default_val: EventRow ={\r\n        start: new Date(1/1/1900),\r\n        end: new Date(1/1/1900),\r\n        title: \"\",\r\n        info: \"\",\r\n        tags: \"\",\r\n        type: EventType.DATE,\r\n        category: EventLevel.national,\r\n    }\r\n    const data = info ?? default_val;\r\n    useEffect(()=>{\r\n\r\n    }, [info])\r\n  \r\n    return(\r\n        <div style = {infoContainer}>\r\n            {/* <Pane> */}\r\n\r\n        \r\n            <Text style = {infoHeader}>\r\n                <Paragraph>\r\n                {data.title}\r\n                </Paragraph>\r\n            </Text>\r\n            <Text style = {paragraph}>\r\n            <Paragraph style = {paragraph}>\r\n                {data.info}\r\n                </Paragraph>\r\n            </Text>\r\n            {/* </Pane> */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EventInfoDisplay;","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function scaleAsString(scale) {\r\n    return `${scale.domain()}-${scale.range()}`;\r\n}\r\n\r\n// http://stackoverflow.com/a/28857255\r\nexport function getElementOffset(element) {\r\n    const de = document.documentElement;\r\n    const box = element.getBoundingClientRect();\r\n    const top = box.top + window.pageYOffset - de.clientTop;\r\n    const left = box.left + window.pageXOffset - de.clientLeft;\r\n    return { top, left };\r\n}\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Renders a brush with the range defined in the prop `timeRange`.\r\n */\r\nexport default class Brush extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isBrushing: false\r\n        };\r\n\r\n        this.handleBrushMouseDown = this.handleBrushMouseDown.bind(this);\r\n        this.handleOverlayMouseDown = this.handleOverlayMouseDown.bind(this);\r\n        this.handleHandleMouseDown = this.handleHandleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    viewport() {\r\n        const { width, timeScale } = this.props;\r\n        const viewBeginTime = timeScale.invert(0);\r\n        const viewEndTime = timeScale.invert(width);\r\n        return new TimeRange(viewBeginTime, viewEndTime);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleBrushMouseDown(e) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = +this.props.timeRange.begin();\r\n        const end = +this.props.timeRange.end();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"brush\",\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0\r\n        });\r\n    }\r\n\r\n    handleOverlayMouseDown(e) {\r\n        e.preventDefault();\r\n\r\n        const offset = getElementOffset(this.overlay);\r\n        const x = e.pageX - offset.left;\r\n        const t = this.props.timeScale.invert(x).getTime();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"overlay\",\r\n            initialBrushBeginTime: t,\r\n            initialBrushEndTime: t,\r\n            initialBrushXYPosition: null\r\n        });\r\n    }\r\n\r\n    handleHandleMouseDown(e, handle) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = this.props.timeRange.begin().getTime();\r\n        const end = this.props.timeRange.end().getTime();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: `handle-${handle}`,\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0\r\n        });\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        e.preventDefault();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: false,\r\n            brushingInitializationSite: null,\r\n            initialBrushBeginTime: null,\r\n            initialBrushEndTime: null,\r\n            initialBrushXYPosition: null\r\n        });\r\n    }\r\n\r\n    /**\r\n   * Handles clearing the TimeRange if the user clicks on the overlay (but\r\n   * doesn't drag to create a new brush). This will send a null as the\r\n   * new TimeRange. The user of this code can react to that however they\r\n   * see fit, but the most logical response is to reset the timerange to\r\n   * some initial value. This behavior is optional.\r\n   */\r\n    handleClick() {\r\n        if (this.props.allowSelectionClear && this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(null);\r\n        }\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const viewport = this.viewport();\r\n\r\n        if (this.state.isBrushing) {\r\n            let newBegin;\r\n            let newEnd;\r\n\r\n            const tb = this.state.initialBrushBeginTime;\r\n            const te = this.state.initialBrushEndTime;\r\n\r\n            if (this.state.brushingInitializationSite === \"overlay\") {\r\n                const offset = getElementOffset(this.overlay);\r\n                const xx = e.pageX - offset.left;\r\n                const t = this.props.timeScale.invert(xx).getTime();\r\n                if (t < tb) {\r\n                    newBegin = t < viewport.begin().getTime() ? viewport.begin() : t;\r\n                    newEnd = tb > viewport.end().getTime() ? viewport.end() : tb;\r\n                } else {\r\n                    newBegin = tb < viewport.begin().getTime() ? viewport.begin() : tb;\r\n                    newEnd = t > viewport.end().getTime() ? viewport.end() : t;\r\n                }\r\n            } else {\r\n                const xy0 = this.state.initialBrushXYPosition;\r\n                let timeOffset = this.props.timeScale.invert(xy0[0]).getTime() -\r\n                    this.props.timeScale.invert(xy[0]).getTime();\r\n\r\n                // Constrain\r\n                let startOffsetConstraint = timeOffset;\r\n                let endOffsetConstrain = timeOffset;\r\n                if (tb - timeOffset < viewport.begin()) {\r\n                    startOffsetConstraint = tb - viewport.begin().getTime();\r\n                }\r\n                if (te - timeOffset > viewport.end()) {\r\n                    endOffsetConstrain = te - viewport.end().getTime();\r\n                }\r\n\r\n                newBegin = this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-left\"\r\n                    ? parseInt(tb - startOffsetConstraint, 10)\r\n                    : tb;\r\n                newEnd = this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-right\"\r\n                    ? parseInt(te - endOffsetConstrain, 10)\r\n                    : te;\r\n\r\n                // Swap if needed\r\n                if (newBegin > newEnd) [newBegin, newEnd] = [newEnd, newBegin];\r\n            }\r\n\r\n            if (this.props.onTimeRangeChanged) {\r\n                this.props.onTimeRangeChanged(new TimeRange(newBegin, newEnd));\r\n            }\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    renderOverlay() {\r\n        const { width, height } = this.props;\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"brush\":\r\n                cursor = \"move\";\r\n                break;\r\n            default:\r\n                cursor = \"crosshair\";\r\n        }\r\n\r\n        const overlayStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor\r\n        };\r\n        return (\r\n            <rect\r\n                ref={c => {\r\n                    this.overlay = c;\r\n                }}\r\n                x={0}\r\n                y={0}\r\n                width={width}\r\n                height={height}\r\n                style={overlayStyle}\r\n                onMouseDown={this.handleOverlayMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n                onClick={this.handleClick}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBrush() {\r\n        const { timeRange, timeScale, height, style } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"overlay\":\r\n                cursor = \"crosshair\";\r\n                break;\r\n            default:\r\n                cursor = \"move\";\r\n        }\r\n\r\n        // Style of the brush area\r\n        const brushDefaultStyle = {\r\n            fill: \"#777\",\r\n            fillOpacity: 0.3,\r\n            stroke: \"#fff\",\r\n            shapeRendering: \"crispEdges\",\r\n            cursor\r\n        };\r\n        const brushStyle = merge(true, brushDefaultStyle, style);\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const begin = range.begin();\r\n            const end = range.end();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const bounds = { x, y, width, height };\r\n\r\n            return (\r\n                <rect\r\n                    {...bounds}\r\n                    style={brushStyle}\r\n                    pointerEvents=\"all\"\r\n                    onMouseDown={this.handleBrushMouseDown}\r\n                    onMouseUp={this.handleMouseUp}\r\n                />\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    renderHandles() {\r\n        const { timeRange, timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        // Style of the handles\r\n        const handleStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor: \"ew-resize\"\r\n        };\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const [begin, end] = range.toJSON();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const handleSize = this.props.handleSize;\r\n\r\n            const leftHandleBounds = { x: x - 1, y, width: handleSize, height };\r\n            const rightHandleBounds = {\r\n                x: x + (width - handleSize),\r\n                y,\r\n                width: handleSize + 1,\r\n                height\r\n            };\r\n\r\n            return (\r\n                <g>\r\n                    <rect\r\n                        {...leftHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"left\")}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                    <rect\r\n                        {...rightHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"right\")}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <g onMouseMove={this.handleMouseMove}>\r\n                {this.renderOverlay()}\r\n                {this.renderBrush()}\r\n                {this.renderHandles()}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nBrush.propTypes = {\r\n    /**\r\n   * The timerange for the brush. Typically you would maintain this\r\n   * as state on the surrounding page, since it would likely control\r\n   * another page element, such as the range of the main chart. See\r\n   * also `onTimeRangeChanged()` for receiving notification of the\r\n   * brush range being changed by the user.\r\n   *\r\n   * Takes a Pond TimeRange object.\r\n   */\r\n    timeRange: PropTypes.instanceOf(TimeRange),\r\n    /**\r\n   * The brush is rendered as an SVG rect. You can specify the style\r\n   * of this rect using this prop.\r\n   */\r\n    style: PropTypes.object, //eslint-disable-line\r\n    /**\r\n   * The size of the invisible side handles. Defaults to 6 pixels.\r\n   */\r\n    handleSize: PropTypes.number,\r\n    allowSelectionClear: PropTypes.bool,\r\n    /**\r\n   * A callback which will be called if the brush range is changed by\r\n   * the user. It is called with a Pond TimeRange object. Note that if\r\n   * `allowSelectionClear` is set to true, then this can also be called\r\n   * when the user performs a simple click outside the brush area. In\r\n   * this case it will be called with null as the TimeRange. You can\r\n   * use this to reset the selection, perhaps to some initial range.\r\n   */\r\n    onTimeRangeChanged: PropTypes.func,\r\n    /**\r\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n   */\r\n    timeScale: PropTypes.func,\r\n    /**\r\n   * [Internal] The width supplied by the surrounding ChartContainer\r\n   */\r\n    width: PropTypes.number,\r\n    /**\r\n   * [Internal] The height supplied by the surrounding ChartContainer\r\n   */\r\n    height: PropTypes.number\r\n};\r\n\r\nBrush.defaultProps = {\r\n    handleSize: 6,\r\n    allowSelectionClear: false\r\n};\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Renders a brush with the range defined in the prop `timeRange`.\r\n */\r\nexport default class MultiBrush extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isBrushing: false\r\n        };\r\n\r\n        this.handleBrushMouseDown = this.handleBrushMouseDown.bind(this);\r\n        this.handleOverlayMouseDown = this.handleOverlayMouseDown.bind(this);\r\n        this.handleHandleMouseDown = this.handleHandleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    }\r\n\r\n    viewport() {\r\n        const { width, timeScale } = this.props;\r\n        const viewBeginTime = timeScale.invert(0);\r\n        const viewEndTime = timeScale.invert(width);\r\n        return new TimeRange(viewBeginTime, viewEndTime);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleBrushMouseDown(e, brush_idx) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = +this.props.timeRanges[brush_idx].begin();\r\n        const end = +this.props.timeRanges[brush_idx].end();\r\n\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: \"brush\",\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0,\r\n            brushIndex: brush_idx\r\n        });\r\n    }\r\n\r\n    handleOverlayMouseDown(e) {\r\n        if (this.props.allowFreeDrawing || this.hasNullBrush()) {\r\n            e.preventDefault();\r\n\r\n            const offset = getElementOffset(this.overlay);\r\n            const x = e.pageX - offset.left;\r\n            const t = this.props.timeScale.invert(x).getTime();\r\n\r\n            document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n            const drawingPosition = this.props.allowFreeDrawing\r\n                ? this.props.timeRanges.length\r\n                : this.props.timeRanges.length - 1;\r\n\r\n            this.setState({\r\n                isBrushing: true,\r\n                brushingInitializationSite: \"overlay\",\r\n                initialBrushBeginTime: t,\r\n                initialBrushEndTime: t,\r\n                initialBrushXYPosition: null,\r\n                brushIndex: drawingPosition\r\n            });\r\n        }\r\n    }\r\n\r\n    hasNullBrush = () => {\r\n        return (\r\n            (this.props.timeRanges || []).length > 0 &&\r\n            this.props.timeRanges[this.props.timeRanges.length - 1] == null\r\n        );\r\n    };\r\n\r\n    handleMouseClick = (e, brushIndex) => {\r\n        if (this.props.onTimeRangeClicked) {\r\n            this.props.onTimeRangeClicked(brushIndex);\r\n        }\r\n    };\r\n\r\n    handleHandleMouseDown(e, handle, brushIndex) {\r\n        e.preventDefault();\r\n\r\n        const { pageX: x, pageY: y } = e;\r\n        const xy0 = [Math.round(x), Math.round(y)];\r\n        const begin = this.props.timeRanges[brushIndex].begin().getTime();\r\n        const end = this.props.timeRanges[brushIndex].end().getTime();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        this.setState({\r\n            isBrushing: true,\r\n            brushingInitializationSite: `handle-${handle}`,\r\n            initialBrushBeginTime: begin,\r\n            initialBrushEndTime: end,\r\n            initialBrushXYPosition: xy0,\r\n            brushIndex: brushIndex\r\n        });\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        e.preventDefault();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        const brushing_is = this.state.brushIndex;\r\n        this.setState(\r\n            {\r\n                isBrushing: false,\r\n                brushingInitializationSite: null,\r\n                initialBrushBeginTime: null,\r\n                initialBrushEndTime: null,\r\n                initialBrushXYPosition: null,\r\n                brushIndex: null\r\n            },\r\n            () => {\r\n                if (this.props.onUserMouseUp) {\r\n                    this.props.onUserMouseUp(brushing_is);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const viewport = this.viewport();\r\n\r\n        if (this.state.isBrushing) {\r\n            let newBegin;\r\n            let newEnd;\r\n\r\n            const tb = this.state.initialBrushBeginTime;\r\n            const te = this.state.initialBrushEndTime;\r\n\r\n            if (this.state.brushingInitializationSite === \"overlay\") {\r\n                const offset = getElementOffset(this.overlay);\r\n                const xx = e.pageX - offset.left;\r\n                const t = this.props.timeScale.invert(xx).getTime();\r\n                if (t < tb) {\r\n                    newBegin = t < viewport.begin().getTime() ? viewport.begin() : t;\r\n                    newEnd = tb > viewport.end().getTime() ? viewport.end() : tb;\r\n                } else {\r\n                    newBegin = tb < viewport.begin().getTime() ? viewport.begin() : tb;\r\n                    newEnd = t > viewport.end().getTime() ? viewport.end() : t;\r\n                }\r\n            } else {\r\n                const xy0 = this.state.initialBrushXYPosition;\r\n                let timeOffset =\r\n                    this.props.timeScale.invert(xy0[0]).getTime() -\r\n                    this.props.timeScale.invert(xy[0]).getTime();\r\n\r\n                // Constrain\r\n                let startOffsetConstraint = timeOffset;\r\n                let endOffsetConstrain = timeOffset;\r\n                if (tb - timeOffset < viewport.begin()) {\r\n                    startOffsetConstraint = tb - viewport.begin().getTime();\r\n                }\r\n                if (te - timeOffset > viewport.end()) {\r\n                    endOffsetConstrain = te - viewport.end().getTime();\r\n                }\r\n\r\n                newBegin =\r\n                    this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-left\"\r\n                        ? parseInt(tb - startOffsetConstraint, 10)\r\n                        : tb;\r\n                newEnd =\r\n                    this.state.brushingInitializationSite === \"brush\" ||\r\n                    this.state.brushingInitializationSite === \"handle-right\"\r\n                        ? parseInt(te - endOffsetConstrain, 10)\r\n                        : te;\r\n\r\n                // Swap if needed\r\n                if (newBegin > newEnd) [newBegin, newEnd] = [newEnd, newBegin];\r\n            }\r\n\r\n            if (this.props.onTimeRangeChanged) {\r\n                this.props.onTimeRangeChanged(\r\n                    new TimeRange(newBegin, newEnd),\r\n                    this.state.brushIndex\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    renderOverlay() {\r\n        const { width, height } = this.props;\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"brush\":\r\n                cursor = \"move\";\r\n                break;\r\n            default:\r\n                cursor =\r\n                    this.props.allowFreeDrawing || this.hasNullBrush() ? \"crosshair\" : \"default\";\r\n        }\r\n\r\n        const overlayStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor\r\n        };\r\n        return (\r\n            <rect\r\n                ref={c => {\r\n                    this.overlay = c;\r\n                }}\r\n                x={0}\r\n                y={0}\r\n                width={width}\r\n                height={height}\r\n                style={overlayStyle}\r\n                onClick={this.handleMouseClick}\r\n                onMouseDown={this.handleOverlayMouseDown}\r\n                onMouseUp={this.handleMouseUp}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderBrush(timeRange, idx) {\r\n        const { timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        let cursor;\r\n        switch (this.state.brushingInitializationSite) {\r\n            case \"handle-right\":\r\n            case \"handle-left\":\r\n                cursor = \"ew-resize\";\r\n                break;\r\n            case \"overlay\":\r\n                cursor =\r\n                    this.props.allowFreeDrawing || this.hasNullBrush() ? \"crosshair\" : \"default\";\r\n                break;\r\n            default:\r\n                cursor = \"move\";\r\n        }\r\n\r\n        // Style of the brush area\r\n        const brushDefaultStyle = {\r\n            fill: \"#777\",\r\n            fillOpacity: 0.3,\r\n            stroke: \"#fff\",\r\n            shapeRendering: \"crispEdges\",\r\n            cursor\r\n        };\r\n        const userStyle = this.props.style ? this.props.style(idx) : {};\r\n        const brushStyle = merge(true, brushDefaultStyle, userStyle);\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const begin = range.begin();\r\n            const end = range.end();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const bounds = { x, y, width, height };\r\n\r\n            return (\r\n                <rect\r\n                    {...bounds}\r\n                    key={`${idx}-${brushStyle}`}\r\n                    style={brushStyle}\r\n                    pointerEvents=\"all\"\r\n                    onClick={e => this.handleMouseClick(e, idx)}\r\n                    onMouseDown={e => this.handleBrushMouseDown(e, idx)}\r\n                    onMouseUp={this.handleMouseUp}\r\n                />\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    renderHandles(timeRange, idx) {\r\n        const { timeScale, height } = this.props;\r\n\r\n        if (!timeRange) {\r\n            return <g />;\r\n        }\r\n\r\n        // Style of the handles\r\n        const handleStyle = {\r\n            fill: \"white\",\r\n            opacity: 0,\r\n            cursor: \"ew-resize\"\r\n        };\r\n\r\n        if (!this.viewport().disjoint(timeRange)) {\r\n            const range = timeRange.intersection(this.viewport());\r\n            const [begin, end] = range.toJSON();\r\n            const [x, y] = [timeScale(begin), 0];\r\n            const endPos = timeScale(end);\r\n\r\n            let width = endPos - x;\r\n            if (width < 1) {\r\n                width = 1;\r\n            }\r\n\r\n            const handleSize = this.props.handleSize;\r\n\r\n            const leftHandleBounds = { x: x - 1, y, width: handleSize, height };\r\n            const rightHandleBounds = {\r\n                x: x + (width - handleSize),\r\n                y,\r\n                width: handleSize + 1,\r\n                height\r\n            };\r\n\r\n            return (\r\n                <g>\r\n                    <rect\r\n                        {...leftHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"left\", idx)}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                    <rect\r\n                        {...rightHandleBounds}\r\n                        style={handleStyle}\r\n                        pointerEvents=\"all\"\r\n                        onMouseDown={e => this.handleHandleMouseDown(e, \"right\", idx)}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <g onMouseMove={this.handleMouseMove}>\r\n                {this.renderOverlay()}\r\n                {(this.props.timeRanges || []).map((timeRange, idx) => {\r\n                    return (\r\n                        <g key={`multibrush_${idx}`}>\r\n                            {this.renderBrush(timeRange, idx)}\r\n                            {this.renderHandles(timeRange, idx)}\r\n                        </g>\r\n                    );\r\n                })}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nMultiBrush.propTypes = {\r\n    /**\r\n     * The timeranges for the brushes. Typically you would maintain this\r\n     * as state on the surrounding page, since it would likely control\r\n     * another page element, such as the range of the main chart. See\r\n     * also `onTimeRangeChanged()` for receiving notification of the\r\n     * brush range being changed by the user.\r\n     *\r\n     * Takes an array of Pond TimeRange object.\r\n     */\r\n    timeRanges: PropTypes.arrayOf(PropTypes.instanceOf(TimeRange)),\r\n\r\n    /**\r\n     * The brush is rendered as an SVG rect. You can specify the style\r\n     * of this rect using this prop. The brush style is a function that you\r\n     * provide. It will be called with the index of the TimeRange, corresponding\r\n     * to those in the `timeRanges` prop.\r\n     */\r\n    style: PropTypes.func, //eslint-disable-line\r\n\r\n    /**\r\n     * The size of the invisible side handles. Defaults to 6 pixels.\r\n     */\r\n    handleSize: PropTypes.number,\r\n\r\n    /**\r\n     * If this prop is false, you will only be able to draw a new brush if the last position of the timeRanges\r\n     * array is equal to null, otherwise it will allow the free drawing and the index passed to onTimeRangeChanged\r\n     * will the equal to the length of the timeRanges array\r\n     */\r\n    allowFreeDrawing: PropTypes.bool,\r\n\r\n    /**\r\n     * A callback which will be called if the brush range is changed by\r\n     * the user. It is called with a Pond TimeRange object and the index position of\r\n     * the brush in the timeRanges prop.\r\n     */\r\n    onTimeRangeChanged: PropTypes.func,\r\n\r\n    /**\r\n     * when user stop drawing or dragging box\r\n     */\r\n    onUserMouseUp: PropTypes.func,\r\n\r\n    /**\r\n     * When the user clicks one of the TimeRanges\r\n     */\r\n    onTimeRangeClicked: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n     */\r\n    timeScale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The width supplied by the surrounding ChartContainer\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nMultiBrush.defaultProps = {\r\n    handleSize: 6,\r\n    allowFreeDrawing: true\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport \"d3-transition\";\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\nimport { range } from \"d3-array\";\r\nimport { axisLeft, axisRight } from \"d3-axis\";\r\nimport { easeSinOut } from \"d3-ease\";\r\nimport { format } from \"d3-format\";\r\nimport { select } from \"d3-selection\";\r\nimport \"d3-selection-multi\";\r\n\r\nimport { scaleAsString } from \"../js/util\";\r\n\r\nconst MARGIN = 0;\r\n\r\nconst defaultStyle = {\r\n    label: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default label color\r\n        fontWeight: 100,\r\n        fontSize: 12,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    values: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default value color\r\n        fontWeight: 100,\r\n        fontSize: 11,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    ticks: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    },\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    }\r\n};\r\n\r\n/**\r\n * The `YAxis` widget displays a vertical axis to the left or right\r\n * of the charts. A `YAxis` always appears within a `ChartRow`, from\r\n * which it gets its height and positioning. You can have more than\r\n * one axis per row. You do control how wide it is.\r\n *\r\n * Here's a simple YAxis example:\r\n *\r\n * ```js\r\n * <YAxis\r\n *   id=\"price-axis\"\r\n *   label=\"Price (USD)\"\r\n *   min={0} max={100}\r\n *   width=\"60\"\r\n *   type=\"linear\"\r\n *   format=\"$,.2f\"\r\n * />\r\n * ```\r\n *\r\n * Visually you can control the axis `label`, its size via the `width`\r\n * prop, its `format`, and `type` of scale (linear). You can quicky turn\r\n * it on and off with the `visible` prop.\r\n *\r\n * Each axis also defines a scale through a `min` and `max` prop. Chart\r\n * then refer to the axis by by citing the axis `id` in their `axis`\r\n * prop. Those charts will then use the axis scale for their y-scale.\r\n * This is what ties them together. Many charts can use the same axis,\r\n * or not.\r\n *\r\n * Here is an example of two line charts that each have their own axis:\r\n *\r\n * ```js\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis id=\"aud\" label=\"AUD\" min={0.5} max={1.5} width=\"60\" format=\"$,.2f\"/>\r\n *         <Charts>\r\n *             <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\r\n *             <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\r\n *         </Charts>\r\n *         <YAxis id=\"euro\" label=\"Euro\" min={0.5} max={1.5} width=\"80\" format=\"$,.2f\"/>\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n *\r\n *  Note that there are two `<YAxis>` components defined here, one before\r\n *  the `<Charts>` block and one after. This defines that the first axis will\r\n *  appear to the left of the charts and the second will appear right of the charts.\r\n *  Each of the line charts uses its `axis` prop to identify the axis (\"aud\" or \"euro\")\r\n *  it will use for its vertical scale.\r\n */\r\nexport default class YAxis extends React.Component {\r\n    componentDidMount() {\r\n        this.renderAxis(\r\n            this.props.align,\r\n            this.props.scale,\r\n            +this.props.width,\r\n            +this.props.height,\r\n            this.props.showGrid,\r\n            +this.props.chartExtent,\r\n            this.props.hideAxisLine,\r\n            this.props.absolute,\r\n            this.props.type,\r\n            this.props.format,\r\n            this.props.label,\r\n            this.props.tickCount,\r\n            this.props.min,\r\n            this.props.max\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const {\r\n            scale,\r\n            align,\r\n            width,\r\n            height,\r\n            chartExtent,\r\n            absolute,\r\n            format,\r\n            type,\r\n            showGrid,\r\n            hideAxisLine,\r\n            label,\r\n            tickCount,\r\n            min,\r\n            max\r\n        } = nextProps;\r\n\r\n        if (scaleAsString(this.props.scale) !== scaleAsString(scale)) {\r\n            this.updateAxis(\r\n                align,\r\n                scale,\r\n                width,\r\n                height,\r\n                showGrid,\r\n                chartExtent,\r\n                hideAxisLine,\r\n                absolute,\r\n                type,\r\n                format,\r\n                label,\r\n                tickCount,\r\n                min,\r\n                max\r\n            );\r\n        } else if (\r\n            this.props.format !== format ||\r\n            this.props.align !== align ||\r\n            this.props.width !== width ||\r\n            this.props.height !== height ||\r\n            this.props.type !== type ||\r\n            this.props.absolute !== absolute ||\r\n            this.props.chartExtent !== chartExtent ||\r\n            this.props.showGrid !== showGrid ||\r\n            this.props.hideAxisLine !== hideAxisLine\r\n        ) {\r\n            this.renderAxis(\r\n                align,\r\n                scale,\r\n                +width,\r\n                +height,\r\n                showGrid,\r\n                chartExtent,\r\n                hideAxisLine,\r\n                absolute,\r\n                type,\r\n                format,\r\n                label,\r\n                tickCount,\r\n                min,\r\n                max\r\n            );\r\n        } else if (this.props.label !== label) {\r\n            this.updateLabel(label);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    yformat(fmt) {\r\n        if (_.isString(fmt)) {\r\n            return format(fmt);\r\n        } else if (_.isFunction(fmt)) {\r\n            return fmt;\r\n        } else {\r\n            return format(\"\");\r\n        }\r\n    }\r\n\r\n    mergeStyles(style) {\r\n        return {\r\n            labelStyle: merge(\r\n                true,\r\n                defaultStyle.label,\r\n                this.props.style.label ? this.props.style.label : {}\r\n            ),\r\n            valueStyle: merge(\r\n                true,\r\n                defaultStyle.values,\r\n                this.props.style.values ? this.props.style.values : {}\r\n            ),\r\n            axisStyle: merge(\r\n                true,\r\n                defaultStyle.axis,\r\n                this.props.style.axis ? this.props.style.axis : {}\r\n            ),\r\n            tickStyle: merge(\r\n                true,\r\n                defaultStyle.ticks,\r\n                this.props.style.ticks ? this.props.style.ticks : {}\r\n            )\r\n        };\r\n    }\r\n\r\n    postSelect(style, hideAxisLine, height) {\r\n        const { valueStyle, tickStyle, axisStyle } = style;\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"text\")\r\n            .styles(valueStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"line\")\r\n            .styles(tickStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .selectAll(\".domain\")\r\n            .remove();\r\n\r\n        if (!hideAxisLine) {\r\n            select(ReactDOM.findDOMNode(this))\r\n                .select(\"g\")\r\n                .append(\"line\")\r\n                .styles(axisStyle)\r\n                .attr(\"x1\", 0)\r\n                .attr(\"y1\", 0)\r\n                .attr(\"x2\", 0)\r\n                .attr(\"y2\", height);\r\n        }\r\n    }\r\n\r\n    generator(type, absolute, yformat, axis, scale, height, tickCount, min, max) {\r\n        let axisGenerator;\r\n        if (type === \"linear\" || type === \"power\") {\r\n            if (tickCount > 0) {\r\n                const stepSize = (max - min) / (tickCount - 1);\r\n                axisGenerator = axis(scale)\r\n                    .tickValues(range(min, max + max / 10000, stepSize))\r\n                    .tickFormat(d => {\r\n                        if (absolute) {\r\n                            return yformat(Math.abs(d));\r\n                        }\r\n                        return yformat(d);\r\n                    })\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                if (height <= 200) {\r\n                    axisGenerator = axis(scale)\r\n                        .ticks(4)\r\n                        .tickFormat(d => {\r\n                            if (absolute) {\r\n                                return yformat(Math.abs(d));\r\n                            }\r\n                            return yformat(d);\r\n                        })\r\n                        .tickSizeOuter(0);\r\n                } else {\r\n                    axisGenerator = axis(scale)\r\n                        .tickFormat(d => {\r\n                            if (absolute) {\r\n                                return yformat(Math.abs(d));\r\n                            }\r\n                            return yformat(d);\r\n                        })\r\n                        .tickSizeOuter(0);\r\n                }\r\n            }\r\n        } else if (type === \"log\") {\r\n            if (min === 0) {\r\n                throw Error(\"In a log scale, minimum value can't be 0\");\r\n            }\r\n            axisGenerator = axis(scale)\r\n                .ticks(10, \".2s\")\r\n                .tickSizeOuter(0);\r\n        }\r\n        return axisGenerator;\r\n    }\r\n\r\n    renderAxis(\r\n        align,\r\n        scale,\r\n        width,\r\n        height,\r\n        showGrid,\r\n        chartExtent,\r\n        hideAxisLine,\r\n        absolute,\r\n        type,\r\n        fmt,\r\n        label,\r\n        tickCount,\r\n        min,\r\n        max\r\n    ) {\r\n        const yformat = this.yformat(fmt);\r\n        const axis = align === \"left\" ? axisLeft : axisRight;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const { labelStyle, valueStyle } = style;\r\n        const tickSize = showGrid && this.props.isInnerAxis ? -chartExtent : 5;\r\n        const x = align === \"left\" ? width - MARGIN : 0;\r\n        const labelOffset =\r\n            align === \"left\" ? this.props.labelOffset - 50 : 40 + this.props.labelOffset;\r\n\r\n        // Axis generator\r\n        const axisGenerator = this.generator(\r\n            type,\r\n            absolute,\r\n            yformat,\r\n            axis,\r\n            scale,\r\n            height,\r\n            tickCount,\r\n            min,\r\n            max\r\n        );\r\n\r\n        // Remove the old axis from under this DOM node\r\n        select(ReactDOM.findDOMNode(this))\r\n            .selectAll(\"*\")\r\n            .remove();\r\n\r\n        // Add the new axis\r\n        this.axis = select(ReactDOM.findDOMNode(this))\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${x},0)`)\r\n            .attr(\"class\", \"yaxis\")\r\n            .styles(valueStyle)\r\n            .call(axisGenerator.tickSize(tickSize))\r\n            .append(\"text\")\r\n            .text(label || this.props.label)\r\n            .styles(labelStyle)\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"class\", \"yaxislabel\")\r\n            .attr(\"y\", labelOffset)\r\n            .attr(\"dy\", \".71em\")\r\n            .attr(\"text-anchor\", \"end\");\r\n\r\n        this.postSelect(style, hideAxisLine, height);\r\n    }\r\n\r\n    updateAxis(\r\n        align,\r\n        scale,\r\n        width,\r\n        height,\r\n        showGrid,\r\n        chartExtent,\r\n        hideAxisLine,\r\n        absolute,\r\n        type,\r\n        fmt,\r\n        label,\r\n        tickCount,\r\n        min,\r\n        max\r\n    ) {\r\n        const yformat = this.yformat(fmt);\r\n        const axis = align === \"left\" ? axisLeft : axisRight;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const tickSize = showGrid && this.props.isInnerAxis ? -chartExtent : 5;\r\n\r\n        const axisGenerator = this.generator(\r\n            type,\r\n            absolute,\r\n            yformat,\r\n            axis,\r\n            scale,\r\n            height,\r\n            tickCount,\r\n            min,\r\n            max\r\n        );\r\n\r\n        // Transition the existing axis\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\".yaxis\")\r\n            .transition()\r\n            .duration(this.props.transition)\r\n            .ease(easeSinOut)\r\n            .call(axisGenerator.tickSize(tickSize));\r\n\r\n        this.updateLabel(label);\r\n\r\n        this.postSelect(style, hideAxisLine, height);\r\n    }\r\n\r\n    updateLabel(label) {\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\".yaxislabel\")\r\n            .text(label);\r\n    }\r\n\r\n    render() {\r\n        return <g />;\r\n    }\r\n}\r\n\r\nYAxis.defaultProps = {\r\n    id: \"yaxis\", // id referred to by the chart\r\n    align: \"left\", // left or right of the chart\r\n    min: 0, // range\r\n    max: 1,\r\n    showGrid: false,\r\n    hideAxisLine: false,\r\n    type: \"linear\", // linear, log, or power\r\n    absolute: false, // Display scale always positive\r\n    format: \".2s\", // Format string for d3.format\r\n    labelOffset: 0, // Offset the label position\r\n    transition: 100, // Axis transition time\r\n    width: 80,\r\n    style: defaultStyle\r\n};\r\n\r\nYAxis.propTypes = {\r\n    /**\r\n     * A name for the axis which can be used by a chart to reference the axis.\r\n     * This is used by the ChartRow to match charts to this axis.\r\n     */\r\n    id: PropTypes.string.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * Show or hide this axis\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * The label to be displayed alongside the axis.\r\n     */\r\n    label: PropTypes.string,\r\n\r\n    /**\r\n     * The scale type: linear, power, or log.\r\n     */\r\n    type: PropTypes.oneOf([\"linear\", \"power\", \"log\"]),\r\n\r\n    /**\r\n     * Minimum value, which combined with \"max\", define the scale of the axis.\r\n     */\r\n    min: PropTypes.number.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * Maximum value, which combined with \"min\", define the scale of the axis.\r\n     */\r\n    max: PropTypes.number.isRequired, // eslint-disable-line\r\n\r\n    /**\r\n     * A d3 scale for the y-axis which you can use to transform your data in the y direction.\r\n     * If omitted, the scale will be automatically computed based on the max and min props.\r\n     */\r\n    yScale: PropTypes.func,\r\n\r\n    /**\r\n     * Render all ticks on the axis as positive values.\r\n     */\r\n    absolute: PropTypes.bool, // eslint-disable-line\r\n\r\n    /**\r\n     * Object specifying the CSS by which the axis can be styled. The object can contain:\r\n     * \"label\", \"values\", \"axis\" and \"ticks\". Each of these is an inline CSS style applied\r\n     * to the axis label, axis values, axis line and ticks respectively.\r\n     *\r\n     * Note that these are passed into d3's styling, so are regular CSS property names\r\n     * and not React's camel case names (e.g. \"stroke-dasharray\" not strokeDasharray).\r\n     */\r\n    style: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        axis: PropTypes.object, // eslint-disable-line\r\n        values: PropTypes.object, // esline-disable-line\r\n        ticks: PropTypes.object // esline-disable-line\r\n    }),\r\n\r\n    /**\r\n     * Render a horizontal grid by extending the axis ticks across the chart area. Note that this\r\n     * can only be applied to an inner axis (one next to a chart). If you have multiple axes then\r\n     * this can't be used on the outer axes. Also, if you have an axis on either side of the chart\r\n     * then you can use this, but the UX not be ideal.\r\n     */\r\n    showGrid: PropTypes.bool,\r\n\r\n    /**\r\n     * Render the axis line. This is a nice option of you are also using `showGrid` as you may not\r\n     * want both the vertical axis line and the extended ticks.\r\n     */\r\n    hideAxisLine: PropTypes.bool,\r\n\r\n    /**\r\n     * The transition time for moving from one scale to another\r\n     */\r\n    transition: PropTypes.number,\r\n\r\n    /**\r\n     * The width of the axis\r\n     */\r\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    /**\r\n     * Offset the axis label from its default position. This allows you to\r\n     * fine tune the label location, which may be necessary depending on the\r\n     * scale and how much room the tick labels take up. Maybe positive or\r\n     * negative.\r\n     */\r\n    labelOffset: PropTypes.number,\r\n\r\n    /**\r\n     * If a string, the d3.format for the axis labels (e.g. `format=\\\"$,.2f\\\"`).\r\n     * If a function, that function will be called with each tick value and\r\n     * should generate a formatted string for that value to be used as the label\r\n     * for that tick (e.g. `function (n) { return Number(n).toFixed(2) }`).\r\n     */\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * If the chart should be rendered to with the axis on the left or right.\r\n     * If you are using the axis in a ChartRow, you do not need to provide this.\r\n     */\r\n    align: PropTypes.string,\r\n\r\n    /**\r\n     * [Internal] The scale supplied by the ChartRow\r\n     */\r\n    scale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number,\r\n\r\n    /**\r\n     * The number of ticks\r\n     */\r\n    tickCount: PropTypes.number\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n/**\r\n *\r\n * The `<Charts>` element is a grouping for charts within a row.\r\n * It takes no props. Each chart within the group will be overlaid\r\n * on top of each other.\r\n *\r\n * Here is an example of two line charts within a `<Charts>` group:\r\n *\r\n * ```xml\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis/>\r\n *         <Charts>\r\n *             <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\r\n *             <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\r\n *         </Charts>\r\n *         <YAxis/>\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n *\r\n * ## Making your own chart\r\n *\r\n * Anything within this grouping is considered a chart, meaning it will have\r\n * certain props injected into it. As a result you can easily implement your own chart\r\n * by simply expecting to have these props available and rendering as such.\r\n *\r\n * For your own chart, the render() method should return a SVG group `<g>` at the\r\n * top level, and then your chart rendering within that.\r\n *\r\n * In addition to any props you add to your chart, the following props are passed into\r\n * each chart automatically:\r\n *\r\n * #### timeScale\r\n *\r\n * A d3 scale for the time axis which you can use to transform your data in the x direction\r\n *\r\n * #### yScale\r\n *\r\n * A d3 scale for the y-axis which you can use to transform your data in the y direction\r\n *\r\n * #### width\r\n *\r\n * A the width your chart will render into\r\n */\r\nexport default class Charts extends React.Component {\r\n    render() {\r\n        return `${this.constructor.name} elements are for configuration only\r\nand should not be rendered`;\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport merge from \"merge\";\r\n\r\nconst defaultBoxStyle = {\r\n    fill: \"#FEFEFE\",\r\n    stroke: \"#DDD\",\r\n    opacity: 0.8\r\n};\r\n\r\nconst defaultTextStyle = {\r\n    fontSize: 11,\r\n    textAnchor: \"left\",\r\n    fill: \"#b0b0b0\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nconst defaultTextStyleCentered = {\r\n    fontSize: 11,\r\n    textAnchor: \"middle\",\r\n    fill: \"#bdbdbd\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nfunction mergeStyles(style, isCentered) {\r\n    return {\r\n        boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\r\n        labelStyle: merge(\r\n            true,\r\n            isCentered ? defaultTextStyleCentered : defaultTextStyle,\r\n            style.label ? style.label : {}\r\n        )\r\n    };\r\n}\r\n\r\n/**\r\n * Renders a list of values in svg\r\n *\r\n *      +----------------+\r\n *      | Max 100 Gbps   |\r\n *      | Avg 26 Gbps    |\r\n *      +----------------+\r\n */\r\nconst ValueList = props => {\r\n    const { align, style, width, height } = props;\r\n    const { boxStyle, labelStyle } = mergeStyles(style, align === \"center\");\r\n\r\n    if (!props.values.length) {\r\n        return <g />;\r\n    }\r\n\r\n    const values = props.values.map((item, i) => {\r\n        if (align === \"left\") {\r\n            return (\r\n                <g key={i}>\r\n                    <text x={10} y={5} dy={`${(i + 1) * 1.2}em`} style={labelStyle}>\r\n                        <tspan style={{ fontWeight: 700 }}>{`${item.label}: `}</tspan>\r\n                        <tspan>{`${item.value}`}</tspan>\r\n                    </text>\r\n                </g>\r\n            );\r\n        }\r\n\r\n        const posx = parseInt(props.width / 2, 10);\r\n        return (\r\n            <g key={i}>\r\n                <text x={posx} y={5} dy={`${(i + 1) * 1.2}em`} style={labelStyle}>\r\n                    <tspan style={{ fontWeight: 700 }}>{`${item.label}: `}</tspan>\r\n                    <tspan>{`${item.value}`}</tspan>\r\n                </text>\r\n            </g>\r\n        );\r\n    });\r\n\r\n    const box = <rect style={boxStyle} x={0} y={0} width={width} height={height} />;\r\n\r\n    return (\r\n        <g>\r\n            {box}\r\n            {values}\r\n        </g>\r\n    );\r\n};\r\n\r\nValueList.defaultProps = {\r\n    align: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    pointerEvents: \"none\",\r\n    style: { fill: \"#FEFEFE\", stroke: \"#DDD\", opacity: 0.8 }\r\n};\r\n\r\nValueList.propTypes = {\r\n    /**\r\n     * Where to position the label, either \"left\" or \"center\" within the box\r\n     */\r\n    align: PropTypes.oneOf([\"center\", \"left\"]),\r\n\r\n    /**\r\n     * An array of label value pairs to render\r\n     */\r\n    values: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string, // eslint-disable-line\r\n            value: PropTypes.oneOfType([\r\n                // eslint-disable-line\r\n                PropTypes.number,\r\n                PropTypes.string\r\n            ])\r\n        })\r\n    ).isRequired,\r\n\r\n    /**\r\n     * CSS object to be applied to the ValueList surrounding box and the label (text).\r\n     */\r\n    style: PropTypes.object, // eslint-disable-line\r\n\r\n    /**\r\n     * The width of the rectangle to render into\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the rectangle to render into\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default ValueList;\r\n","/**\r\n *  Copyright (c) 2016, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport merge from \"merge\";\r\n\r\nconst defaultBoxStyle = {\r\n    fill: \"#FEFEFE\",\r\n    stroke: \"#DDD\",\r\n    opacity: 0.8\r\n};\r\n\r\nconst defaultTextStyle = {\r\n    fontSize: 11,\r\n    textAnchor: \"left\",\r\n    fill: \"#b0b0b0\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nconst defaultTextStyleCentered = {\r\n    fontSize: 11,\r\n    textAnchor: \"middle\",\r\n    fill: \"#bdbdbd\",\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nfunction mergeStyles(style, isCentered) {\r\n    return {\r\n        boxStyle: merge(true, defaultBoxStyle, style.box ? style.box : {}),\r\n        labelStyle: merge(\r\n            true,\r\n            isCentered ? defaultTextStyleCentered : defaultTextStyle,\r\n            style.label ? style.label : {}\r\n        )\r\n    };\r\n}\r\n\r\n/**\r\n * Renders a simple label surrounded by a box within in svg\r\n *\r\n *      +----------------+\r\n *      | My label       |\r\n *      |                |\r\n *      +----------------+\r\n */\r\n\r\nconst Label = ({ label, style, align, width, height }) => {\r\n    const { boxStyle, labelStyle } = mergeStyles(style, align === \"center\");\r\n\r\n    const posx = align === \"center\" ? parseInt(width / 2, 10) : 10;\r\n\r\n    const text = (\r\n        <text x={posx} y={5} dy=\"1.2em\" style={labelStyle}>\r\n            {label}\r\n        </text>\r\n    );\r\n\r\n    const box = <rect x={0} y={0} style={boxStyle} width={width} height={height} />;\r\n\r\n    return (\r\n        <g>\r\n            {box}\r\n            {text}\r\n        </g>\r\n    );\r\n};\r\n\r\nLabel.defaultProps = {\r\n    align: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    pointerEvents: \"none\"\r\n};\r\n\r\nLabel.propTypes = {\r\n    /**\r\n     * Where to position the label, either \"left\" or \"center\" within the box\r\n     */\r\n    align: PropTypes.oneOf([\"center\", \"left\"]),\r\n\r\n    /**\r\n     * The label to render\r\n     */\r\n    label: PropTypes.string.isRequired,\r\n\r\n    /**\r\n     * The style of the label. This is the inline CSS applied directly\r\n     * to the label box\r\n     */\r\n    style: PropTypes.object, // eslint-disable-line\r\n\r\n    /**\r\n     * The width of the rectangle to render into\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the rectangle to render into\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nexport default Label;\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport \"moment-duration-format\";\r\n\r\nimport ValueList from \"./ValueList\";\r\nimport Label from \"./Label\";\r\n\r\nexport default class TimeMarker extends React.Component {\r\n    renderLine(posx) {\r\n        return (\r\n            <line\r\n                style={this.props.infoStyle.line}\r\n                x1={posx}\r\n                y1={0}\r\n                x2={posx}\r\n                y2={this.props.height}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderTimeMarker(d) {\r\n        const textStyle = {\r\n            fontSize: 11,\r\n            textAnchor: \"left\",\r\n            fill: \"#bdbdbd\"\r\n        };\r\n\r\n        let dateStr = `${d}`;\r\n        if (this.props.timeFormat === \"day\") {\r\n            const formatter = timeFormat(\"%d\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"month\") {\r\n            const formatter = timeFormat(\"%B\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"year\") {\r\n            const formatter = timeFormat(\"%Y\");\r\n            dateStr = formatter(d);\r\n        } else if (this.props.timeFormat === \"relative\") {\r\n            dateStr = moment.duration(+d).format();\r\n        } else if (_.isString(this.props.timeFormat)) {\r\n            const formatter = timeFormat(this.props.timeFormat);\r\n            dateStr = formatter(d);\r\n        } else if (_.isFunction(this.props.timeFormat)) {\r\n            dateStr = this.props.timeFormat(d);\r\n        }\r\n\r\n        return (\r\n            <text x={0} y={0} dy=\"1.2em\" style={textStyle}>\r\n                {dateStr}\r\n            </text>\r\n        );\r\n    }\r\n\r\n    renderInfoBox(posx) {\r\n        const w = this.props.infoWidth;\r\n\r\n        const infoBoxProps = {\r\n            align: \"left\",\r\n            style: {\r\n                box: this.props.infoStyle.box,\r\n                label: this.props.infoStyle.label\r\n            },\r\n            width: this.props.infoWidth,\r\n            height: this.props.infoHeight\r\n        };\r\n\r\n        if (this.props.infoValues) {\r\n            const infoBox = _.isString(this.props.infoValues) ? (\r\n                <Label {...infoBoxProps} label={this.props.infoValues} />\r\n            ) : (\r\n                <ValueList {...infoBoxProps} values={this.props.infoValues} />\r\n            );\r\n\r\n            if (posx + 10 + w < this.props.width - 50) {\r\n                return (\r\n                    <g transform={`translate(${posx + 10},${5})`}>\r\n                        {this.props.showTime ? this.renderTimeMarker(this.props.time) : null}\r\n                        <g transform={`translate(0,${this.props.showTime ? 20 : 0})`}>{infoBox}</g>\r\n                    </g>\r\n                );\r\n            }\r\n            return (\r\n                <g transform={`translate(${posx - w - 10},${5})`}>\r\n                    {this.props.showTime ? this.renderTimeMarker(this.props.time) : null}\r\n                    <g transform={`translate(0,${this.props.showTime ? 20 : 0})`}>{infoBox}</g>\r\n                </g>\r\n            );\r\n        }\r\n        return <g />;\r\n    }\r\n\r\n    render() {\r\n        const posx = this.props.timeScale(this.props.time);\r\n        if (posx) {\r\n            return (\r\n                <g>\r\n                    {this.props.showLine ? this.renderLine(posx) : null}\r\n                    {this.props.showInfoBox ? this.renderInfoBox(posx) : null}\r\n                </g>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nTimeMarker.propTypes = {\r\n    /**\r\n     * Show or hide this chart\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * The time, expressed as a Javascript `Date` object, to display the marker\r\n     */\r\n    time: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * The values to show in the info box. This is either an array of\r\n     * objects, with each object specifying the label and value\r\n     * to be shown in the info box, or a simple string label\r\n     */\r\n    infoValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string, // eslint-disable-line\r\n                value: PropTypes.string // eslint-disable-line\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * The style of the info box and connecting lines. This is an\r\n     * object of the form { line, box, dot }. Line, box and dot\r\n     * are themselves objects representing inline CSS for each of\r\n     * the pieces of the info marker.\r\n     */\r\n    infoStyle: PropTypes.shape({\r\n        line: PropTypes.object, // eslint-disable-line\r\n        box: PropTypes.object, // eslint-disable-line\r\n        dot: PropTypes.object // eslint-disable-line\r\n    }),\r\n\r\n    /**\r\n     * The width of the hover info box\r\n     */\r\n    infoWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the hover info box\r\n     */\r\n    infoHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Display the info box at all. If you don't have any values to show and just\r\n     * want a line and a time (for example), you can set this to false.\r\n     */\r\n    showInfoBox: PropTypes.bool,\r\n\r\n    /**\r\n     * You can show the info box without the corresponding time marker. Why would\r\n     * you do this? I don't know. Actually, I do. You might use the ChartContainer\r\n     * tracker mechanism to show the line across multiple rows, then add a TimeMarker\r\n     * selectively to each row.\r\n     */\r\n    showLine: PropTypes.bool,\r\n\r\n    /**\r\n     * You can hide the time displayed above the info box. You might do this because\r\n     * it is already displayed elsewhere in your UI. Or maybe you just don't like it.\r\n     */\r\n    showTime: PropTypes.bool,\r\n\r\n    /**\r\n     * The time format used for display of the time above the info box.\r\n     */\r\n    timeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n     */\r\n    timeScale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The width supplied by the surrounding ChartContainer\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * [Internal] The height supplied by the surrounding ChartContainer\r\n     */\r\n    height: PropTypes.number\r\n};\r\n\r\nTimeMarker.defaultProps = {\r\n    visible: true,\r\n    showInfoBox: true,\r\n    showLine: true,\r\n    showTime: true,\r\n    infoStyle: {\r\n        line: {\r\n            stroke: \"#999\",\r\n            cursor: \"crosshair\",\r\n            pointerEvents: \"none\"\r\n        },\r\n        box: {\r\n            fill: \"white\",\r\n            opacity: 0.9,\r\n            stroke: \"#999\",\r\n            pointerEvents: \"none\"\r\n        },\r\n        dot: {\r\n            fill: \"#999\"\r\n        }\r\n    },\r\n    infoWidth: 90,\r\n    infoHeight: 25\r\n};\r\n","/**\r\n *  Copyright (c) 2015, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\n\r\nexport default class ScaleInterpolator {\r\n    constructor(transition, ease, observer) {\r\n        this.id = _.uniqueId(\"scaler\");\r\n        this.ease = ease;\r\n        this.transitionTime = transition;\r\n        this.observer = observer;\r\n\r\n        this.sourceScale = null;\r\n        this.targetScale = null;\r\n        this.cachedScaler = null;\r\n        this.cacheKey = null;\r\n    }\r\n\r\n    update() {\r\n        let animationTime = 0;\r\n\r\n        if (!this.initialTimestamp) {\r\n            this.initialTimestamp = window.performance.now();\r\n        } else {\r\n            animationTime = window.performance.now() - this.initialTimestamp;\r\n        }\r\n\r\n        const animationPosition = this.transitionTime\r\n            ? Math.min(animationTime / this.transitionTime, 1.0)\r\n            : 1.0;\r\n\r\n        if (!this.targetScale) {\r\n            return;\r\n        }\r\n\r\n        if (this.observer) {\r\n            const func1 = this.sourceScale;\r\n            const func2 = this.targetScale;\r\n            const te = this.ease(animationPosition);\r\n            const scaler = x => {\r\n                const a = func1(x);\r\n                const b = func2(x);\r\n                return a + (b - a) * te;\r\n            };\r\n            this.observer(scaler);\r\n        }\r\n\r\n        if (animationPosition < 1.0) {\r\n            // keep animating\r\n            setTimeout(() => this.update(), 20);\r\n        } else {\r\n            // reset\r\n            this.sourceScale = this.targetScale;\r\n            this.targetScale = null;\r\n            this.initialTimestamp = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n   * A new (or initial) scale is set on the interpolator\r\n   */\r\n    setScale(key, scale) {\r\n        // Initial scale\r\n        if (!this.sourceScale) {\r\n            this.sourceScale = scale;\r\n            return;\r\n        }\r\n\r\n        //\r\n        //  If there was already a scale, and a new scale is set\r\n        // the this begins an animation across between the two\r\n        // scales, assuming a transition time is provided. To do\r\n        // this we set the new scale as the target and reset the\r\n        // t to 0. (if there's no transition, jump to t = 1)\r\n        //\r\n\r\n        if (key !== this.cacheKey) {\r\n            this.targetScale = scale;\r\n            this.cachedScaler = null;\r\n            this.initialTimestamp = null;\r\n            setTimeout(() => this.update(), 0);\r\n        }\r\n\r\n        this.cacheKey = key;\r\n    }\r\n\r\n    /**\r\n   * Returns a scaler, which is a function that scales the value\r\n   * supplied to it. This return the scaler corresponding to the\r\n   * source scale. Note that if a target scale is defined and the\r\n   * interpolator is animating towards that target, the observer\r\n   * callback will be called with the transitional scaler that can\r\n   * be used to scale data to the intermediate state.\r\n   */\r\n    scaler() {\r\n        if (_.isNull(this.cachedScaler)) {\r\n            this.cachedScaler = v => this.sourceScale(v);\r\n        }\r\n        return this.cachedScaler;\r\n    }\r\n\r\n    /**\r\n   * Returns the d3 scale. It will return the target scale if present\r\n   * otherwise the source scale. Note: this is the d3 internal scale. To\r\n   * scale values, use the scaler.\r\n   */\r\n    latestScale() {\r\n        return this.targetScale ? this.targetScale : this.sourceScale;\r\n    }\r\n\r\n    /**\r\n   * Returns the transition, as set in the constructor\r\n   */\r\n    transition() {\r\n        return this.transitionTime;\r\n    }\r\n}\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { easeSinOut } from \"d3-ease\";\r\nimport { scaleLinear, scaleLog, scalePow } from \"d3-scale\";\r\nimport { areComponentsEqual } from \"react-hot-loader\";\r\n\r\nimport Brush from \"./Brush\";\r\nimport YAxis from \"./YAxis\";\r\nimport Charts from \"./Charts\";\r\nimport MultiBrush from \"./MultiBrush\";\r\nimport TimeMarker from \"./TimeMarker\";\r\nimport ScaleInterpolator from \"../js/interpolators\";\r\n\r\nfunction createScale(yaxis, type, min, max, y0, y1) {\r\n    let scale;\r\n    if (_.isUndefined(min) || _.isUndefined(max)) {\r\n        scale = null;\r\n    } else if (type === \"linear\") {\r\n        scale = scaleLinear()\r\n            .domain([min, max])\r\n            .range([y0, y1])\r\n            .nice();\r\n    } else if (type === \"log\") {\r\n        const base = yaxis.props.logBase || 10;\r\n        scale = scaleLog()\r\n            .base(base)\r\n            .domain([min, max])\r\n            .range([y0, y1]);\r\n    } else if (type === \"power\") {\r\n        const power = yaxis.props.powerExponent || 2;\r\n        scale = scalePow()\r\n            .exponent(power)\r\n            .domain([min, max])\r\n            .range([y0, y1]);\r\n    }\r\n    return scale;\r\n}\r\n\r\n/**\r\n * A ChartRow is a container for a set of YAxis and multiple charts\r\n * which are overlaid on each other in a central canvas.\r\n *\r\n * Here is an example where a single `<ChartRow>` is defined within\r\n * the `<ChartContainer>`. Of course you can have any number of rows.\r\n *\r\n * For this row we specify the one prop `height` as 200 pixels high.\r\n *\r\n * Within the `<ChartRow>` we add:\r\n *\r\n * * `<YAxis>` elements for axes to the left of the chart\r\n * * `<Chart>` block containing our central chart area\r\n * * `<YAxis>` elements for our axes to the right of the charts\r\n *\r\n * ```\r\n * <ChartContainer timeRange={audSeries.timerange()}>\r\n *     <ChartRow height=\"200\">\r\n *         <YAxis />\r\n *         <YAxis />\r\n *         <Charts>\r\n *             charts...\r\n *        </Charts>\r\n *         <YAxis />\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n */\r\nexport default class ChartRow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // id of clipping rectangle we will generate and use for each child\r\n        // chart. Lives in state to ensure just one clipping rectangle and\r\n        // id per chart row instance; we don't want a fresh id generated on\r\n        // each render.\r\n        const clipId = _.uniqueId(\"clip_\");\r\n        const clipPathURL = `url(#${clipId})`;\r\n        this.state = {\r\n            clipId,\r\n            clipPathURL\r\n        };\r\n        this.mounted = true;\r\n    }\r\n\r\n    isChildYAxis = child =>\r\n        areComponentsEqual(child.type, YAxis) ||\r\n        (_.has(child.props, \"min\") && _.has(child.props, \"max\"));\r\n\r\n    updateScales(props) {\r\n        const axisMargin = props.axisMargin;\r\n        const innerHeight = +props.height - axisMargin * 2;\r\n        const rangeTop = axisMargin;\r\n        const rangeBottom = innerHeight - axisMargin;\r\n        React.Children.forEach(props.children, child => {\r\n            if (child === null) return;\r\n            if (this.isChildYAxis(child)) {\r\n                const { id, max, min, transition = 0, type = \"linear\" } = child.props;\r\n                if (!_.has(this.scaleMap, id)) {\r\n                    // If necessary, initialize a ScaleInterpolator for this y-axis.\r\n                    // When the yScale changes, we will update this interpolator.\r\n                    this.scaleMap[id] = new ScaleInterpolator(transition, easeSinOut, s => {\r\n                        const yAxisScalerMap = this.state.yAxisScalerMap;\r\n                        yAxisScalerMap[id] = s;\r\n                        if (this.mounted) this.setState(yAxisScalerMap);\r\n                    });\r\n                }\r\n                // Get the vertical scale for this y-axis.\r\n                let scale;\r\n                if (_.has(child.props, \"yScale\")) {\r\n                    // If the yScale prop is passed explicitly, use that.\r\n                    scale = child.props.yScale;\r\n                } else {\r\n                    // Otherwise, compute the scale based on the max and min props.\r\n                    scale = createScale(child, type, min, max, rangeBottom, rangeTop);\r\n                }\r\n\r\n                // Update the scale on the interpolator for this y-axis.\r\n                const cacheKey = `${type}-${min}-${max}-${rangeBottom}-${rangeTop}`;\r\n                this.scaleMap[id].setScale(cacheKey, scale);\r\n            }\r\n        });\r\n\r\n        // Update the state with the newly interpolated scaler for each y-axis.\r\n        const scalerMap = {};\r\n        _.forEach(this.scaleMap, (interpolator, id) => {\r\n            scalerMap[id] = interpolator.scaler();\r\n        });\r\n\r\n        if (this.mounted) this.setState({ yAxisScalerMap: scalerMap });\r\n    }\r\n\r\n    componentWillMount() {\r\n        // Our chart scales are driven off a mapping between id of the axis\r\n        // and the scale that axis represents. Depending on the transition time,\r\n        // this scale will animate over time. The controller of this animation is\r\n        // the ScaleInterpolator. We create new Scale Interpolators here for each\r\n        // axis id.\r\n        this.scaleMap = {};\r\n        this.updateScales(this.props);\r\n    }\r\n\r\n    /**\r\n     * When we get changes to the row's props we update our map of\r\n     * axis scales.\r\n     */\r\n    componentWillReceiveProps(nextProps) {\r\n        this.updateScales(nextProps);\r\n    }\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n    render() {\r\n        const { paddingLeft, paddingRight } = this.props;\r\n\r\n        const axes = []; // Contains all the yAxis elements used in the render\r\n        const chartList = []; // Contains all the Chart elements used in the render\r\n        // Dimensions\r\n        const innerHeight = +this.props.height - this.props.axisMargin * 2;\r\n\r\n        //\r\n        // Build a map of elements that occupy left or right slots next to the\r\n        // chart.\r\n        //\r\n        // If an element has both and id and a min/max range, then we consider\r\n        // it to be a y axis. For those we calculate a d3 scale that can be\r\n        // reference by a chart. That scale will also be available to the axis\r\n        // when it renders.\r\n        //\r\n        // For this row, we will need to know how many axis slots we are using.\r\n        //\r\n\r\n        const yAxisMap = {}; // Maps axis id -> axis element\r\n        const leftAxisList = []; // Ordered list of left axes ids\r\n        const rightAxisList = []; // Ordered list of right axes ids\r\n        let alignLeft = true;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (areComponentsEqual(child.type, Charts)) {\r\n                alignLeft = false;\r\n            } else {\r\n                const id = child.props.id;\r\n                // Check to see if we think this 'axis' is actually an axis\r\n                if (this.isChildYAxis(child)) {\r\n                    const yaxis = child;\r\n\r\n                    if (yaxis.props.id && yaxis.props.visible !== false) {\r\n                        // Relate id to the axis\r\n                        yAxisMap[yaxis.props.id] = yaxis;\r\n                    }\r\n\r\n                    // Columns counts\r\n                    if (alignLeft) {\r\n                        leftAxisList.push(id);\r\n                    } else {\r\n                        rightAxisList.push(id);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Since we'll be building the left axis items from the inside to the outside\r\n        leftAxisList.reverse();\r\n\r\n        //\r\n        // Push each axis onto the axes, transforming each into its\r\n        // column location\r\n        //\r\n\r\n        let transform;\r\n        let id;\r\n        let props;\r\n        let axis;\r\n        let posx = 0;\r\n\r\n        // Space used by columns on left and right of charts\r\n        const leftWidth = _.reduce(this.props.leftAxisWidths, (a, b) => a + b, 0);\r\n        const rightWidth = _.reduce(this.props.rightAxisWidths, (a, b) => a + b, 0);\r\n        const chartWidth = this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        posx = leftWidth;\r\n        for (\r\n            let leftColumnIndex = 0;\r\n            leftColumnIndex < this.props.leftAxisWidths.length;\r\n            leftColumnIndex += 1\r\n        ) {\r\n            const colWidth = this.props.leftAxisWidths[leftColumnIndex];\r\n            posx -= colWidth;\r\n            if (colWidth > 0 && leftColumnIndex < leftAxisList.length) {\r\n                id = leftAxisList[leftColumnIndex];\r\n                if (_.has(yAxisMap, id)) {\r\n                    transform = `translate(${posx + paddingLeft},0)`;\r\n\r\n                    // Additional props for left aligned axes\r\n                    props = {\r\n                        width: colWidth,\r\n                        height: innerHeight,\r\n                        chartExtent: chartWidth,\r\n                        isInnerAxis: leftColumnIndex === 0,\r\n                        align: \"left\",\r\n                        scale: this.scaleMap[id].latestScale()\r\n                    };\r\n\r\n                    // Cloned left axis\r\n                    axis = React.cloneElement(yAxisMap[id], props);\r\n\r\n                    axes.push(\r\n                        <g key={`y-axis-left-${leftColumnIndex}`} transform={transform}>\r\n                            {axis}\r\n                        </g>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        posx = this.props.width - rightWidth - paddingRight;\r\n        for (\r\n            let rightColumnIndex = 0;\r\n            rightColumnIndex < this.props.rightAxisWidths.length;\r\n            rightColumnIndex += 1\r\n        ) {\r\n            const colWidth = this.props.rightAxisWidths[rightColumnIndex];\r\n            if (colWidth > 0 && rightColumnIndex < rightAxisList.length) {\r\n                id = rightAxisList[rightColumnIndex];\r\n                if (_.has(yAxisMap, id)) {\r\n                    transform = `translate(${posx + paddingLeft},0)`;\r\n\r\n                    // Additional props for right aligned axes\r\n                    props = {\r\n                        width: colWidth,\r\n                        height: innerHeight,\r\n                        chartExtent: chartWidth,\r\n                        //showGrid: this.props.showGrid,\r\n                        isInnerAxis: rightColumnIndex === 0,\r\n                        align: \"right\",\r\n                        scale: this.scaleMap[id].latestScale()\r\n                    };\r\n\r\n                    // Cloned right axis\r\n                    axis = React.cloneElement(yAxisMap[id], props);\r\n\r\n                    axes.push(\r\n                        <g key={`y-axis-right-${rightColumnIndex}`} transform={transform}>\r\n                            {axis}\r\n                        </g>\r\n                    );\r\n                }\r\n            }\r\n\r\n            posx += colWidth;\r\n        }\r\n\r\n        //\r\n        // Push each chart onto the chartList, transforming each to the right\r\n        // of the left axis slots and specifying its width. Each chart is passed\r\n        // its time and y-scale. The y-scale is looked up in scaleMap, whose\r\n        // current value is stored in the component state.\r\n        //\r\n\r\n        const chartTransform = `translate(${leftWidth + paddingLeft},0)`;\r\n\r\n        let keyCount = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (areComponentsEqual(child.type, Charts)) {\r\n                const charts = child;\r\n                React.Children.forEach(charts.props.children, chart => {\r\n                    if (!_.has(chart.props, \"visible\") || chart.props.visible) {\r\n                        let scale = null;\r\n                        if (_.has(this.state.yAxisScalerMap, chart.props.axis)) {\r\n                            scale = this.state.yAxisScalerMap[chart.props.axis];\r\n                        }\r\n\r\n                        let ytransition = null;\r\n                        if (_.has(this.scaleMap, chart.props.axis)) {\r\n                            ytransition = this.scaleMap[chart.props.axis];\r\n                        }\r\n\r\n                        const chartProps = {\r\n                            key: keyCount,\r\n                            width: chartWidth,\r\n                            height: innerHeight,\r\n                            timeScale: this.props.timeScale,\r\n                            timeFormat: this.props.timeFormat\r\n                        };\r\n\r\n                        if (scale) {\r\n                            chartProps.yScale = scale;\r\n                        }\r\n\r\n                        if (ytransition) {\r\n                            chartProps.transition = ytransition;\r\n                        }\r\n\r\n                        chartList.push(React.cloneElement(chart, chartProps));\r\n                        keyCount += 1;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        //\r\n        // Push each child Brush on to the brush list.  We need brushed to be\r\n        // rendered last (on top) of everything else in the Z order, both for\r\n        // visual correctness and to ensure that the brush gets mouse events\r\n        // before anything underneath\r\n        //\r\n\r\n        const brushList = [];\r\n        const multiBrushList = [];\r\n        keyCount = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (child === null) return;\r\n            if (\r\n                areComponentsEqual(child.type, Brush) ||\r\n                areComponentsEqual(child.type, MultiBrush)\r\n            ) {\r\n                const brushProps = {\r\n                    key: `brush-${keyCount}`,\r\n                    width: chartWidth,\r\n                    height: innerHeight,\r\n                    timeScale: this.props.timeScale\r\n                };\r\n                if (areComponentsEqual(child.type, Brush)) {\r\n                    brushList.push(React.cloneElement(child, brushProps));\r\n                } else {\r\n                    multiBrushList.push(React.cloneElement(child, brushProps));\r\n                }\r\n            }\r\n            keyCount += 1;\r\n        });\r\n\r\n        const charts = (\r\n            <g transform={chartTransform} key=\"event-rect-group\">\r\n                <g key=\"charts\" clipPath={this.state.clipPathURL}>\r\n                    {chartList}\r\n                </g>\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Clipping\r\n        //\r\n        const clipper = (\r\n            <defs>\r\n                <clipPath id={this.state.clipId}>\r\n                    <rect\r\n                        x=\"0\"\r\n                        y=\"0\"\r\n                        style={{ strokeOpacity: 0.0 }}\r\n                        width={chartWidth}\r\n                        height={innerHeight}\r\n                    />\r\n                </clipPath>\r\n            </defs>\r\n        );\r\n\r\n        //\r\n        // Brush\r\n        //\r\n        const brushes = (\r\n            <g transform={chartTransform} key=\"brush-group\">\r\n                {brushList}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Multi Brush\r\n        //\r\n        const multiBrushes = (\r\n            <g transform={chartTransform} key=\"multi-brush-group\">\r\n                {multiBrushList}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // TimeMarker used as a tracker\r\n        //\r\n        let tracker;\r\n        if (this.props.trackerTime) {\r\n            const timeFormat = this.props.trackerTimeFormat || this.props.timeFormat;\r\n            const timeMarkerProps = {\r\n                timeFormat,\r\n                showLine: false,\r\n                showTime: this.props.trackerShowTime,\r\n                time: this.props.trackerTime,\r\n                timeScale: this.props.timeScale,\r\n                width: chartWidth,\r\n                infoStyle: this.props.trackerStyle\r\n            };\r\n            if (this.props.trackerInfoValues) {\r\n                timeMarkerProps.infoWidth = this.props.trackerInfoWidth;\r\n                timeMarkerProps.infoHeight = this.props.trackerInfoHeight;\r\n                timeMarkerProps.infoValues = this.props.trackerInfoValues;\r\n                timeMarkerProps.timeFormat = this.props.trackerTimeFormat;\r\n            }\r\n            const trackerStyle = {\r\n                pointerEvents: \"none\"\r\n            };\r\n            const trackerTransform = `translate(${leftWidth + paddingLeft},0)`;\r\n\r\n            tracker = (\r\n                <g key=\"tracker-group\" style={trackerStyle} transform={trackerTransform}>\r\n                    <TimeMarker {...timeMarkerProps} />\r\n                </g>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <g>\r\n                {clipper}\r\n                {axes}\r\n                {charts}\r\n                {brushes}\r\n                {multiBrushes}\r\n                {tracker}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nChartRow.defaultProps = {\r\n    trackerTimeFormat: \"%b %d %Y %X\",\r\n    enablePanZoom: false,\r\n    height: 100,\r\n    axisMargin: 5,\r\n    visible: true\r\n};\r\n\r\nChartRow.propTypes = {\r\n    /**\r\n     * The height of the row.\r\n     */\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    /**\r\n     * The vertical margin between the top and bottom of the row\r\n     * height and the top and bottom of the range of the chart.\r\n     */\r\n    axisMargin: PropTypes.number,\r\n\r\n    /**\r\n     * Show or hide this row\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * Should the time be shown on top of the tracker info box\r\n     */\r\n    trackerShowTime: PropTypes.bool,\r\n\r\n    /**\r\n     * The width of the tracker info box\r\n     */\r\n    trackerInfoWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the tracker info box\r\n     */\r\n    trackerInfoHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Info box value or values to place next to the tracker line.\r\n     * This is either an array of objects, with each object\r\n     * specifying the label (a string) and value (also a string)\r\n     * to be shown in the info box, or a simple string label.\r\n     */\r\n    trackerInfoValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string, // eslint-disable-line\r\n                value: PropTypes.string // eslint-disable-line\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * Specify the title for the chart row\r\n     */\r\n    title: PropTypes.string,\r\n\r\n    /**\r\n     * Specify the height of the title\r\n     * Default value is 28 pixels\r\n     */\r\n    titleHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the styling of the chart row's title\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Specify the styling of the box behind chart row's title\r\n     */\r\n    titleBoxStyle: PropTypes.object,\r\n\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    leftAxisWidths: PropTypes.arrayOf(PropTypes.number),\r\n    rightAxisWidths: PropTypes.arrayOf(PropTypes.number),\r\n    width: PropTypes.number,\r\n    timeScale: PropTypes.func,\r\n    trackerTimeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    timeFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    trackerTime: PropTypes.instanceOf(Date)\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TimeRange } from \"pondjs\";\r\n\r\nimport { getElementOffset } from \"../js/util\";\r\n\r\n/**\r\n * Internal component which provides the top level event catcher for the charts.\r\n * This is a higher order component. It wraps a tree of SVG elements below it,\r\n * passed in as this.props.children, and catches events that they do not handle.\r\n *\r\n * The EventHandler is responsible for pan and zoom events as well as other click\r\n * and hover actions.\r\n */\r\nexport default class EventHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isPanning: false,\r\n            initialPanBegin: null,\r\n            initialPanEnd: null,\r\n            initialPanPosition: null\r\n        };\r\n\r\n        this.handleScrollWheel = this.handleScrollWheel.bind(this);\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.eventHandlerRef.addEventListener(\"wheel\", this.handleScrollWheel, { passive: false });\r\n    }\r\n\r\n    // get the event mouse position relative to the event rect\r\n    getOffsetMousePosition(e) {\r\n        const offset = getElementOffset(this.eventRect);\r\n        const x = e.pageX - offset.left;\r\n        const y = e.pageY - offset.top;\r\n        return [Math.round(x), Math.round(y)];\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleScrollWheel(e) {\r\n        if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        const SCALE_FACTOR = 0.001;\r\n        let scale = 1 + e.deltaY * SCALE_FACTOR;\r\n        if (scale > 3) {\r\n            scale = 3;\r\n        }\r\n        if (scale < 0.1) {\r\n            scale = 0.1;\r\n        }\r\n\r\n        const xy = this.getOffsetMousePosition(e);\r\n\r\n        const begin = this.props.scale.domain()[0].getTime();\r\n        const end = this.props.scale.domain()[1].getTime();\r\n        const center = this.props.scale.invert(xy[0]).getTime();\r\n\r\n        let beginScaled = center - parseInt((center - begin) * scale, 10);\r\n        let endScaled = center + parseInt((end - center) * scale, 10);\r\n\r\n        // Duration constraint\r\n        let duration = (end - begin) * scale;\r\n\r\n        if (this.props.minDuration) {\r\n            const minDuration = parseInt(this.props.minDuration, 10);\r\n            if (duration < this.props.minDuration) {\r\n                beginScaled = center - ((center - begin) / (end - begin)) * minDuration;\r\n                endScaled = center + ((end - center) / (end - begin)) * minDuration;\r\n            }\r\n        }\r\n\r\n        if (this.props.minTime && this.props.maxTime) {\r\n            const maxDuration = this.props.maxTime.getTime() - this.props.minTime.getTime();\r\n            if (duration > maxDuration) {\r\n                duration = maxDuration;\r\n            }\r\n        }\r\n\r\n        // Range constraint\r\n        if (this.props.minTime && beginScaled < this.props.minTime.getTime()) {\r\n            beginScaled = this.props.minTime.getTime();\r\n            endScaled = beginScaled + duration;\r\n        }\r\n\r\n        if (this.props.maxTime && endScaled > this.props.maxTime.getTime()) {\r\n            endScaled = this.props.maxTime.getTime();\r\n            beginScaled = endScaled - duration;\r\n        }\r\n\r\n        const newBegin = new Date(beginScaled);\r\n        const newEnd = new Date(endScaled);\r\n\r\n        const newTimeRange = new TimeRange(newBegin, newEnd);\r\n\r\n        if (this.props.onZoom) {\r\n            this.props.onZoom(newTimeRange);\r\n        }\r\n    }\r\n\r\n    handleMouseDown(e) {\r\n        if (!this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        if (e.button === 2) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        document.addEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        if (this.props.enableDragZoom) {\r\n            const offsetxy = this.getOffsetMousePosition(e);\r\n            this.setState({\r\n                isDragging: true,\r\n                initialDragZoom: offsetxy[0],\r\n                currentDragZoom: offsetxy[0]\r\n            });\r\n        }\r\n\r\n        if (this.props.enablePanZoom) {\r\n            const x = e.pageX;\r\n            const y = e.pageY;\r\n            const xy0 = [Math.round(x), Math.round(y)];\r\n\r\n            const begin = this.props.scale.domain()[0].getTime();\r\n            const end = this.props.scale.domain()[1].getTime();\r\n\r\n            this.setState({\r\n                isPanning: true,\r\n                initialPanBegin: begin,\r\n                initialPanEnd: end,\r\n                initialPanPosition: xy0\r\n            });\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleMouseUp(e) {\r\n        if (!this.props.onMouseClick && !this.props.enablePanZoom && !this.props.enableDragZoom) {\r\n            return;\r\n        }\r\n\r\n        e.stopPropagation();\r\n\r\n        document.removeEventListener(\"mouseover\", this.handleMouseMove);\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n\r\n        const offsetxy = this.getOffsetMousePosition(e);\r\n\r\n        const x = e.pageX;\r\n        const isPanning =\r\n            this.state.initialPanPosition && Math.abs(x - this.state.initialPanPosition[0]) > 2;\r\n        const isDragging =\r\n            this.state.initialDragZoom && Math.abs(offsetxy[0] - this.state.initialDragZoom) > 2;\r\n\r\n        if (this.props.onMouseClick && !isPanning && !isDragging) {\r\n            this.props.onMouseClick(offsetxy[0], offsetxy[1]);\r\n        }\r\n\r\n        if (this.props.enableDragZoom) {\r\n            if (isDragging) {\r\n                const start = this.props.scale.invert(this.state.initialDragZoom).getTime();\r\n                const end = this.props.scale.invert(this.state.currentDragZoom).getTime();\r\n\r\n                let newBegin = parseInt(start, 10);\r\n                let newEnd = parseInt(end, 10);\r\n\r\n                if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n                    newBegin = this.props.minTime.getTime();\r\n                }\r\n\r\n                if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n                    newEnd = this.props.maxTime.getTime();\r\n                }\r\n\r\n                const newTimeRange = new TimeRange([newBegin, newEnd].sort());\r\n                if (this.props.onZoom) {\r\n                    this.props.onZoom(newTimeRange);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                isDragging: false,\r\n                initialDragZoom: null,\r\n                initialPanEnd: null,\r\n                currentDragZoom: null\r\n            });\r\n        }\r\n\r\n        if (this.props.enablePanZoom) {\r\n            this.setState({\r\n                isPanning: false,\r\n                initialPanBegin: null,\r\n                initialPanEnd: null,\r\n                initialPanPosition: null\r\n            });\r\n        }\r\n    }\r\n\r\n    handleMouseOut(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.props.onMouseOut) {\r\n            this.props.onMouseOut();\r\n        }\r\n    }\r\n\r\n    handleMouseMove(e) {\r\n        e.preventDefault();\r\n        const x = e.pageX;\r\n        const y = e.pageY;\r\n        const xy = [Math.round(x), Math.round(y)];\r\n        const offsetxy = this.getOffsetMousePosition(e);\r\n        if (this.state.isDragging) {\r\n            this.setState({\r\n                currentDragZoom: offsetxy[0]\r\n            });\r\n        }\r\n        if (this.state.isPanning) {\r\n            const xy0 = this.state.initialPanPosition;\r\n            const timeOffset =\r\n                this.props.scale.invert(xy[0]).getTime() -\r\n                this.props.scale.invert(xy0[0]).getTime();\r\n\r\n            let newBegin = parseInt(this.state.initialPanBegin - timeOffset, 10);\r\n            let newEnd = parseInt(this.state.initialPanEnd - timeOffset, 10);\r\n            const duration = parseInt(this.state.initialPanEnd - this.state.initialPanBegin, 10);\r\n\r\n            if (this.props.minTime && newBegin < this.props.minTime.getTime()) {\r\n                newBegin = this.props.minTime.getTime();\r\n                newEnd = newBegin + duration;\r\n            }\r\n\r\n            if (this.props.maxTime && newEnd > this.props.maxTime.getTime()) {\r\n                newEnd = this.props.maxTime.getTime();\r\n                newBegin = newEnd - duration;\r\n            }\r\n\r\n            const newTimeRange = new TimeRange(newBegin, newEnd);\r\n            if (this.props.onZoom) {\r\n                this.props.onZoom(newTimeRange);\r\n            }\r\n        } else if (this.props.onMouseMove) {\r\n            const mousePosition = this.getOffsetMousePosition(e);\r\n            if (this.props.onMouseMove) {\r\n                this.props.onMouseMove(mousePosition[0], mousePosition[1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleContextMenu(e) {\r\n        var x = e.pageX;\r\n        var y = e.pageY;\r\n        if (this.props.onContextMenu) {\r\n            this.props.onContextMenu(x, y);\r\n        }\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    render() {\r\n        const cursor = this.state.isPanning ? \"-webkit-grabbing\" : \"default\";\r\n        const handlers = {\r\n            onMouseDown: this.handleMouseDown,\r\n            onMouseMove: this.handleMouseMove,\r\n            onMouseOut: this.handleMouseOut,\r\n            onMouseUp: this.handleMouseUp,\r\n            onContextMenu: this.handleContextMenu\r\n        };\r\n        return (\r\n            <g\r\n                pointerEvents=\"all\"\r\n                ref={c => {\r\n                    this.eventHandlerRef = c;\r\n                }}\r\n                {...handlers}\r\n            >\r\n                <rect\r\n                    key=\"handler-hit-rect\"\r\n                    ref={c => {\r\n                        this.eventRect = c;\r\n                    }}\r\n                    style={{ fill: \"#000\", opacity: 0.0, cursor }}\r\n                    x={0}\r\n                    y={0}\r\n                    width={this.props.width}\r\n                    height={this.props.height}\r\n                />\r\n                {this.props.children}\r\n                {this.state.isDragging && (\r\n                    <rect\r\n                        style={{ opacity: 0.3, fill: \"grey\" }}\r\n                        x={Math.min(this.state.currentDragZoom, this.state.initialDragZoom)}\r\n                        y={0}\r\n                        width={Math.abs(this.state.currentDragZoom - this.state.initialDragZoom)}\r\n                        height={this.props.height}\r\n                        pointerEvents=\"none\"\r\n                    />\r\n                )}\r\n            </g>\r\n        );\r\n    }\r\n}\r\n\r\nEventHandler.propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    enablePanZoom: PropTypes.bool,\r\n    enableDragZoom: PropTypes.bool,\r\n    scale: PropTypes.func.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    maxTime: PropTypes.instanceOf(Date),\r\n    minTime: PropTypes.instanceOf(Date),\r\n    minDuration: PropTypes.number,\r\n    onZoom: PropTypes.func,\r\n    onMouseMove: PropTypes.func,\r\n    onMouseOut: PropTypes.func,\r\n    onMouseClick: PropTypes.func,\r\n    onContextMenu: PropTypes.func\r\n};\r\n\r\nEventHandler.defaultProps = {\r\n    enablePanZoom: false,\r\n    enableDragZoom: false\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\"; // eslint-disable-line\r\nimport PropTypes from \"prop-types\";\r\nimport { axisBottom } from \"d3-axis\";\r\nimport { select } from \"d3-selection\";\r\nimport \"d3-selection-multi\";\r\nimport { timeDay, utcDay, timeMonth, utcMonth, timeYear, utcYear } from \"d3-time\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport \"moment-duration-format\";\r\n\r\nfunction scaleAsString(scale) {\r\n    return `${scale.domain().toString()}-${scale.range().toString()}`;\r\n}\r\n\r\nconst defaultStyle = {\r\n    values: {\r\n        stroke: \"none\",\r\n        fill: \"#8B7E7E\", // Default value color\r\n        fontWeight: 100,\r\n        fontSize: 11,\r\n        font: '\"Goudy Bookletter 1911\", sans-serif\"'\r\n    },\r\n    ticks: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    },\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\"\r\n    }\r\n};\r\n\r\n/**\r\n * Renders a horizontal time axis. This is used internally by the ChartContainer\r\n * as a result of you specifying the timerange for the chart. Please see the API\r\n * docs for ChartContainer for more information.\r\n */\r\nexport default class TimeAxis extends React.Component {\r\n    componentDidMount() {\r\n        const { scale, format, showGrid, gridHeight } = this.props;\r\n        this.renderTimeAxis(scale, format, showGrid, gridHeight);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const { scale, utc, format, showGrid, gridHeight } = nextProps;\r\n        if (\r\n            scaleAsString(this.props.scale) !== scaleAsString(scale) ||\r\n            this.props.utc !== utc ||\r\n            this.props.showGrid !== showGrid ||\r\n            this.props.gridHeight !== gridHeight\r\n        ) {\r\n            this.renderTimeAxis(scale, format, showGrid, gridHeight);\r\n        }\r\n    }\r\n\r\n    // Force the component not to update because d3 will control the\r\n    // DOM from this point down.\r\n    shouldComponentUpdate() {\r\n        // eslint-disable-line\r\n        return false;\r\n    }\r\n\r\n    mergeStyles(style) {\r\n        return {\r\n            valueStyle: merge(\r\n                true,\r\n                defaultStyle.values,\r\n                this.props.style.values ? this.props.style.values : {}\r\n            ),\r\n            tickStyle: merge(\r\n                true,\r\n                defaultStyle.ticks,\r\n                this.props.style.ticks ? this.props.style.ticks : {}\r\n            )\r\n        };\r\n    }\r\n\r\n    renderTimeAxis(scale, format, showGrid, gridHeight) {\r\n        let axis;\r\n\r\n        const tickSize = showGrid ? -gridHeight : 10;\r\n        const utc = this.props.utc;\r\n        const tickCount = this.props.tickCount;\r\n        const style = this.mergeStyles(this.props.style);\r\n        const { tickStyle, valueStyle } = style;\r\n\r\n        if (tickCount > 0) {\r\n            if (format === \"day\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcDay : timeDay, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%d\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"month\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcMonth : timeMonth, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%B\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"year\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcYear : timeYear, 1, tickCount])\r\n                    .tickFormat(timeFormat(\"%Y\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"relative\") {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(d => moment.duration(+d).format())\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isString(format)) {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(timeFormat(format))\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isFunction(format)) {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickFormat(format)\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                axis = axisBottom(scale)\r\n                    .ticks(tickCount)\r\n                    .tickSize(0);\r\n            }\r\n        } else {\r\n            if (format === \"day\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcDay : timeDay, 1])\r\n                    .tickFormat(timeFormat(\"%d\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"month\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcMonth : timeMonth, 1])\r\n                    .tickFormat(timeFormat(\"%B\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"year\") {\r\n                axis = axisBottom(scale)\r\n                    .tickArguments([utc ? utcYear : timeYear, 1])\r\n                    .tickFormat(timeFormat(\"%Y\"))\r\n                    .tickSizeOuter(0);\r\n            } else if (format === \"relative\") {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(d => moment.duration(+d).format())\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isString(format)) {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(timeFormat(format))\r\n                    .tickSizeOuter(0);\r\n            } else if (_.isFunction(format)) {\r\n                axis = axisBottom(scale)\r\n                    .tickFormat(format)\r\n                    .tickSizeOuter(0);\r\n            } else {\r\n                axis = axisBottom(scale).tickSize(0);\r\n            }\r\n        }\r\n\r\n        // Remove the old axis from under this DOM node\r\n        select(ReactDOM.findDOMNode(this))\r\n            .selectAll(\"*\")\r\n            .remove(); // eslint-disable-line\r\n        //\r\n        // Draw the new axis\r\n        //\r\n        select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n            .append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .style(\"stroke\", \"none\")\r\n            .styles(valueStyle)\r\n            .call(axis.tickSize(tickSize));\r\n\r\n        if (this.props.angled) {\r\n            select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n                .select(\"g\")\r\n                .selectAll(\".tick\")\r\n                .select(\"text\")\r\n                .styles(valueStyle)\r\n                .style(\"text-anchor\", \"end\")\r\n                .attr(\"dx\", \"-1.2em\")\r\n                .attr(\"dy\", \"0em\")\r\n                .attr(\"transform\", function(d) {\r\n                    return \"rotate(-65)\";\r\n                });\r\n        } else {\r\n            select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n                .select(\"g\")\r\n                .selectAll(\".tick\")\r\n                .select(\"text\")\r\n                .styles(valueStyle);\r\n        }\r\n        select(ReactDOM.findDOMNode(this)) // eslint-disable-line\r\n            .select(\"g\")\r\n            .selectAll(\".tick\")\r\n            .select(\"line\")\r\n            .styles(tickStyle);\r\n\r\n        select(ReactDOM.findDOMNode(this))\r\n            .select(\"g\")\r\n            .select(\"path\")\r\n            .remove();\r\n    }\r\n\r\n    render() {\r\n        return <g />;\r\n    }\r\n}\r\n\r\nTimeAxis.defaultProps = {\r\n    showGrid: false,\r\n    style: defaultStyle,\r\n    angled: false\r\n};\r\n\r\nTimeAxis.propTypes = {\r\n    scale: PropTypes.func.isRequired,\r\n    showGrid: PropTypes.bool,\r\n    angled: PropTypes.bool,\r\n    gridHeight: PropTypes.number,\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n    utc: PropTypes.bool,\r\n    style: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        values: PropTypes.object, // eslint-disable-line\r\n        axis: PropTypes.object // eslint-disable-line\r\n    }),\r\n    tickCount: PropTypes.number\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport invariant from \"invariant\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleTime, scaleUtc } from \"d3-scale\";\r\nimport { TimeRange } from \"pondjs\";\r\nimport { areComponentsEqual } from \"react-hot-loader\";\r\n\r\nimport Brush from \"./Brush\";\r\nimport MultiBrush from \"./MultiBrush\";\r\nimport ChartRow from \"./ChartRow\";\r\nimport Charts from \"./Charts\";\r\nimport EventHandler from \"./EventHandler\";\r\nimport TimeAxis from \"./TimeAxis\";\r\nimport TimeMarker from \"./TimeMarker\";\r\nimport Label from \"./Label\";\r\n\r\nconst defaultTimeAxisStyle = {\r\n    axis: {\r\n        fill: \"none\",\r\n        stroke: \"#C0C0C0\",\r\n        pointerEvents: \"none\"\r\n    }\r\n};\r\n\r\nconst defaultTitleStyle = {\r\n    fontWeight: 100,\r\n    fontSize: 14,\r\n    font: '\"Goudy Bookletter 1911\", sans-serif\"',\r\n    fill: \"#C0C0C0\"\r\n};\r\n\r\nconst defaultChartRowTitleLabelStyle = {\r\n    fontWeight: 100,\r\n    fontSize: 13,\r\n    font: '\"Goudy Bookletter 1911\", sans-serif\"',\r\n    fill: \"#000\"\r\n};\r\n\r\nconst defaultChartRowTitleBoxStyle = {\r\n    fill: \"white\",\r\n    stroke: \"none\"\r\n};\r\n\r\nconst defaultTrackerStyle = {\r\n    line: {\r\n        stroke: \"#999\",\r\n        cursor: \"crosshair\",\r\n        pointerEvents: \"none\"\r\n    },\r\n    box: {\r\n        fill: \"white\",\r\n        opacity: 0.9,\r\n        stroke: \"#999\",\r\n        pointerEvents: \"none\"\r\n    },\r\n    dot: {\r\n        fill: \"#999\"\r\n    }\r\n};\r\n\r\n/**\r\n * The `<ChartContainer>` is the outer most element of a chart and is\r\n * responsible for generating and arranging its sub-elements. Specifically,\r\n * it is a container for one or more `<ChartRows>` (each of which contains\r\n * charts, axes etc) and in addition it manages the overall time range of\r\n * the chart and so also is responsible for the time axis, which is always\r\n * shared by all the rows.\r\n *\r\n * Here is an example:\r\n *\r\n * ```xml\r\n * <ChartContainer timeRange={audSeries.timerange()} width=\"800\">\r\n *     <ChartRow>\r\n *         ...\r\n *     </ChartRow>\r\n *     <ChartRow>\r\n *         ...\r\n *     </ChartRow>\r\n * </ChartContainer>\r\n * ```\r\n */\r\nexport default class ChartContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleTrackerChanged = this.handleTrackerChanged.bind(this);\r\n        this.handleTimeRangeChanged = this.handleTimeRangeChanged.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseOut = this.handleMouseOut.bind(this);\r\n        this.handleContextMenu = this.handleContextMenu.bind(this);\r\n        this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\r\n        this.handleZoom = this.handleZoom.bind(this);\r\n        this.saveSvgRef = this.saveSvgRef.bind(this);\r\n    }\r\n\r\n    //\r\n    // Event handlers\r\n    //\r\n\r\n    handleTrackerChanged(t) {\r\n        if (this.props.onTrackerChanged) {\r\n            this.props.onTrackerChanged(\r\n                t,\r\n                // Adjust the scaled time so that the result\r\n                // is the true x position relative to the whole chart\r\n                t => this.timeScale(t) + this.leftWidth\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Within the charts library the time range of the x axis is kept as a begin\r\n     * and end time (Javascript Date objects). But the interface is Pond based,\r\n     * so this callback returns a Pond TimeRange.\r\n     */\r\n    handleTimeRangeChanged(timerange) {\r\n        if (this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(timerange);\r\n        }\r\n    }\r\n\r\n    handleMouseMove(x, y) {\r\n        this.handleTrackerChanged(this.timeScale.invert(x));\r\n        if (this.props.onMouseMove) {\r\n            this.props.onMouseMove(x, y);\r\n        }\r\n    }\r\n\r\n    handleMouseOut(e) {\r\n        this.handleTrackerChanged(null);\r\n    }\r\n\r\n    handleContextMenu(x, y) {\r\n        if (this.props.onContextMenu) {\r\n            const t = this.props.scale ? this.props.scale.invert(x) : this.timeScale.invert(x);\r\n            this.props.onContextMenu(x, y, t);\r\n        }\r\n    }\r\n\r\n    handleBackgroundClick(x, y) {\r\n        if (this.props.onBackgroundClick) {\r\n            const t = this.props.scale ? this.props.scale.invert(x) : this.timeScale.invert(x);\r\n            this.props.onBackgroundClick(x, y, t);\r\n        }\r\n    }\r\n\r\n    handleZoom(timerange) {\r\n        if (this.props.onTimeRangeChanged) {\r\n            this.props.onTimeRangeChanged(timerange);\r\n        }\r\n    }\r\n\r\n    saveSvgRef(c) {\r\n        this.svg = c;\r\n    }\r\n\r\n    //\r\n    // Render\r\n    //\r\n\r\n    render() {\r\n        const { padding = 0 } = this.props;\r\n        const { paddingLeft = padding, paddingRight = padding } = this.props;\r\n        const { paddingTop = padding, paddingBottom = padding } = this.props;\r\n\r\n        let { titleHeight = 28 } = this.props;\r\n        if (_.isUndefined(this.props.title)) {\r\n            titleHeight = 0;\r\n        }\r\n\r\n        const chartRows = [];\r\n        const chartRowTitles = [];\r\n        const leftAxisWidths = [];\r\n        const rightAxisWidths = [];\r\n\r\n        //\r\n        // How much room does the axes of all the charts take up on the right\r\n        // and left. The result is an array for left and right axis which\r\n        // contain the min column width needed to hold the axes widths at the\r\n        // pos for all rows.\r\n        //\r\n        // pos   1      0        <charts>     0        1        2\r\n        //     | Axis | Axis |   CHARTS    |  Axis  |                      Row 1\r\n        //            | Axis |   CHARTS    |  Axis  |  Axis  |  Axis |     Row 2\r\n        //     ...............              ..........................\r\n        //          left cols              right cols\r\n        //\r\n\r\n        React.Children.forEach(this.props.children, childRow => {\r\n            if (areComponentsEqual(childRow.type, ChartRow)) {\r\n                //\r\n                // Within this row, count the number of columns that will be\r\n                // left and right of the Charts tag, as well as the total number\r\n                // of Charts tags for error handling\r\n                //\r\n                let countLeft = 0;\r\n                let countCharts = 0;\r\n\r\n                let align = \"left\";\r\n\r\n                React.Children.forEach(childRow.props.children, child => {\r\n                    if (child === null) return;\r\n                    if (areComponentsEqual(child.type, Charts)) {\r\n                        countCharts += 1;\r\n                        align = \"right\";\r\n                    } else if (\r\n                        !areComponentsEqual(child.type, Brush) &&\r\n                        !areComponentsEqual(child.type, MultiBrush)\r\n                    ) {\r\n                        if (align === \"left\") {\r\n                            countLeft += 1;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (countCharts !== 1) {\r\n                    const msg = \"ChartRow should have one and only one <Charts> tag within it\";\r\n                    invariant(false, msg, childRow.constructor.name);\r\n                }\r\n\r\n                align = \"left\";\r\n                let pos = countLeft - 1;\r\n\r\n                React.Children.forEach(childRow.props.children, child => {\r\n                    if (child === null) return;\r\n                    if (\r\n                        areComponentsEqual(child.type, Charts) ||\r\n                        areComponentsEqual(child.type, Brush) ||\r\n                        areComponentsEqual(child.type, MultiBrush)\r\n                    ) {\r\n                        if (areComponentsEqual(child.type, Charts)) {\r\n                            align = \"right\";\r\n                            pos = 0;\r\n                        }\r\n                    } else {\r\n                        let width = Number(child.props.width) || 40;\r\n                        const visible = !_.has(child.props, \"visible\") || child.props.visible;\r\n                        if (!visible) width = 0;\r\n\r\n                        if (align === \"left\") {\r\n                            leftAxisWidths[pos] = leftAxisWidths[pos]\r\n                                ? Math.max(width, leftAxisWidths[pos])\r\n                                : width;\r\n                            pos -= 1;\r\n                        } else if (align === \"right\") {\r\n                            rightAxisWidths[pos] = rightAxisWidths[pos]\r\n                                ? Math.max(width, rightAxisWidths[pos])\r\n                                : width;\r\n                            pos += 1;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // Space used by columns on left and right of charts\r\n        const leftWidth = (this.leftWidth = _.reduce(leftAxisWidths, (a, b) => a + b, 0));\r\n        const rightWidth = (this.rightWidth = _.reduce(rightAxisWidths, (a, b) => a + b, 0));\r\n\r\n        //\r\n        // Time scale\r\n        //\r\n\r\n        let { timeAxisHeight = 35 } = this.props;\r\n        if (this.props.hideTimeAxis) {\r\n            timeAxisHeight = 0;\r\n        }\r\n\r\n        const timeAxisWidth =\r\n            this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        if (!this.props.timeRange) {\r\n            throw Error(\"Invalid timerange passed to ChartContainer\");\r\n        }\r\n\r\n        const timeScale = (this.timeScale = this.props.utc\r\n            ? scaleUtc()\r\n                  .domain(this.props.timeRange.toJSON())\r\n                  .range([0, timeAxisWidth])\r\n            : scaleTime()\r\n                  .domain(this.props.timeRange.toJSON())\r\n                  .range([0, timeAxisWidth]));\r\n\r\n        const chartsWidth = this.props.width - leftWidth - rightWidth - paddingLeft - paddingRight;\r\n\r\n        let i = 0;\r\n        let yPosition = paddingTop;\r\n\r\n        // Chart title\r\n        const transform = `translate(${leftWidth + paddingLeft},${yPosition})`;\r\n        const titleStyle = merge(\r\n            true,\r\n            defaultTitleStyle,\r\n            this.props.titleStyle ? this.props.titleStyle : {}\r\n        );\r\n        const title = this.props.title ? (\r\n            <g transform={transform}>\r\n                <Label\r\n                    align=\"center\"\r\n                    label={this.props.title}\r\n                    style={{ label: titleStyle, box: { fill: \"none\", stroke: \"none\" } }}\r\n                    width={chartsWidth}\r\n                    height={titleHeight}\r\n                />\r\n            </g>\r\n        ) : (\r\n            <g />\r\n        );\r\n\r\n        const trackerStyle = merge(\r\n            true,\r\n            defaultTrackerStyle,\r\n            this.props.trackerStyle ? this.props.trackerStyle : {}\r\n        );\r\n\r\n        //yPosition += titleHeight;\r\n        let chartsHeight = 0;\r\n        React.Children.forEach(this.props.children, child => {\r\n            if (areComponentsEqual(child.type, ChartRow)) {\r\n                const chartRow = child;\r\n                const rowKey = `chart-row-row-${i}`;\r\n                const firstRow = i === 0;\r\n                const isVisible = child.props.visible;\r\n                const props = {\r\n                    timeScale,\r\n                    paddingLeft,\r\n                    paddingRight,\r\n                    leftAxisWidths,\r\n                    rightAxisWidths,\r\n                    width: this.props.width,\r\n                    minTime: this.props.minTime,\r\n                    maxTime: this.props.maxTime,\r\n                    transition: this.props.transition,\r\n                    enablePanZoom: this.props.enablePanZoom,\r\n                    minDuration: this.props.minDuration,\r\n                    showGrid: this.props.showGrid,\r\n                    timeFormat: this.props.format,\r\n                    trackerShowTime: firstRow,\r\n                    trackerTime: this.props.trackerPosition,\r\n                    trackerTimeFormat: this.props.format,\r\n                    trackerStyle: trackerStyle,\r\n                    onTimeRangeChanged: this.handleTimeRangeChanged,\r\n                    onTrackerChanged: this.handleTrackerChanged\r\n                };\r\n\r\n                let { titleHeight = 28 } = child.props;\r\n                if (_.isUndefined(child.props.title)) {\r\n                    titleHeight = 0;\r\n                }\r\n\r\n                const transform = `translate(${-leftWidth - paddingLeft},${yPosition +\r\n                    titleHeight})`;\r\n                if (isVisible) {\r\n                    chartRows.push(\r\n                        <g transform={transform} key={rowKey}>\r\n                            {React.cloneElement(chartRow, props)}\r\n                        </g>\r\n                    );\r\n\r\n                    if (!_.isUndefined(child.props.title)) {\r\n                        const rowTitleKey = `chart-row-row-title-${i}`;\r\n\r\n                        const titleLabelStyle = merge(\r\n                            true,\r\n                            defaultChartRowTitleLabelStyle,\r\n                            child.props.titleStyle ? child.props.titleStyle : {}\r\n                        );\r\n                        const titleBoxStyle = merge(\r\n                            true,\r\n                            defaultChartRowTitleBoxStyle,\r\n                            child.props.titleBoxStyle ? child.props.titleBoxStyle : {}\r\n                        );\r\n                        const titleTransform = `translate(${-leftWidth -\r\n                            paddingLeft},${yPosition})`;\r\n                        const title = (\r\n                            <g transform={titleTransform} key={rowTitleKey}>\r\n                                <Label\r\n                                    align=\"left\"\r\n                                    label={child.props.title}\r\n                                    style={{\r\n                                        label: titleLabelStyle,\r\n                                        box: titleBoxStyle\r\n                                    }}\r\n                                    width={props.width}\r\n                                    height={titleHeight}\r\n                                />\r\n                            </g>\r\n                        );\r\n\r\n                        chartRowTitles.push(title);\r\n                    }\r\n\r\n                    const height = parseInt(child.props.height, 10) + titleHeight;\r\n                    yPosition += height;\r\n                    chartsHeight += height;\r\n                }\r\n            }\r\n            i += 1;\r\n        });\r\n\r\n        // Hover tracker line\r\n        let tracker;\r\n        if (\r\n            this.props.trackerPosition &&\r\n            this.props.timeRange.contains(this.props.trackerPosition)\r\n        ) {\r\n            tracker = (\r\n                <g\r\n                    key=\"tracker-group\"\r\n                    style={{ pointerEvents: \"none\" }}\r\n                    transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}\r\n                >\r\n                    <TimeMarker\r\n                        width={chartsWidth}\r\n                        height={chartsHeight}\r\n                        showInfoBox={!!this.props.trackerValues}\r\n                        time={this.props.trackerPosition}\r\n                        timeScale={timeScale}\r\n                        timeFormat={this.props.format}\r\n                        infoWidth={this.props.trackerHintWidth}\r\n                        infoHeight={this.props.trackerHintHeight}\r\n                        infoValues={this.props.trackerValues}\r\n                        infoStyle={trackerStyle}\r\n                    />\r\n                </g>\r\n            );\r\n        }\r\n\r\n        //\r\n        // TimeAxis\r\n        //\r\n\r\n        let timeAxisStyle;\r\n        if (this.props.hideTimeAxis) {\r\n            timeAxisStyle = {\r\n                axis: {\r\n                    display: \"none\"\r\n                }\r\n            };\r\n        } else {\r\n            timeAxisStyle = merge(\r\n                true,\r\n                defaultTimeAxisStyle.axis,\r\n                this.props.timeAxisStyle.axis ? this.props.timeAxisStyle.axis : {}\r\n            );\r\n        }\r\n\r\n        const timeAxis = (\r\n            <g\r\n                transform={`translate(${leftWidth + paddingLeft},${paddingTop +\r\n                    titleHeight +\r\n                    chartsHeight})`}\r\n            >\r\n                <line\r\n                    x1={-leftWidth}\r\n                    y1={0.5}\r\n                    x2={chartsWidth + rightWidth}\r\n                    y2={0.5}\r\n                    style={timeAxisStyle}\r\n                />\r\n                <TimeAxis\r\n                    scale={timeScale}\r\n                    utc={this.props.utc}\r\n                    angled={this.props.timeAxisAngledLabels}\r\n                    style={this.props.timeAxisStyle}\r\n                    format={this.props.format}\r\n                    showGrid={this.props.showGrid}\r\n                    gridHeight={chartsHeight}\r\n                    tickCount={this.props.timeAxisTickCount}\r\n                />\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Event handler\r\n        //\r\n\r\n        const rows = (\r\n            <g transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}>\r\n                <EventHandler\r\n                    key=\"event-handler\"\r\n                    width={chartsWidth}\r\n                    height={chartsHeight + timeAxisHeight}\r\n                    scale={timeScale}\r\n                    enablePanZoom={this.props.enablePanZoom}\r\n                    enableDragZoom={this.props.enableDragZoom}\r\n                    minDuration={this.props.minDuration}\r\n                    minTime={this.props.minTime}\r\n                    maxTime={this.props.maxTime}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseMove={this.handleMouseMove}\r\n                    onMouseClick={this.handleBackgroundClick}\r\n                    onContextMenu={this.handleContextMenu}\r\n                    onZoom={this.handleZoom}\r\n                >\r\n                    {chartRows}\r\n                </EventHandler>\r\n            </g>\r\n        );\r\n\r\n        const rowTitles = (\r\n            <g transform={`translate(${leftWidth + paddingLeft},${paddingTop + titleHeight})`}>\r\n                {chartRowTitles}\r\n            </g>\r\n        );\r\n\r\n        //\r\n        // Final render of the ChartContainer is composed of a number of\r\n        // chartRows, a timeAxis and the tracker indicator\r\n        //\r\n\r\n        const svgWidth = this.props.width;\r\n        const svgHeight = chartsHeight + timeAxisHeight + paddingTop + paddingBottom + titleHeight;\r\n\r\n        const svgStyle = merge(\r\n            true,\r\n            { display: \"block\" },\r\n            this.props.style ? this.props.style : {}\r\n        );\r\n\r\n        return this.props.showGridPosition === \"over\" ? (\r\n            <svg width={svgWidth} height={svgHeight} style={svgStyle} ref={this.saveSvgRef}>\r\n                {title}\r\n                {rows}\r\n                {tracker}\r\n                {timeAxis}\r\n                {rowTitles}\r\n            </svg>\r\n        ) : (\r\n            <svg\r\n                width={svgWidth}\r\n                height={svgHeight}\r\n                style={{ display: \"block\" }}\r\n                ref={this.saveSvgRef}\r\n            >\r\n                {title}\r\n                {timeAxis}\r\n                {rows}\r\n                {rowTitles}\r\n                {tracker}\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nChartContainer.propTypes = {\r\n    /**\r\n     * A [Pond TimeRange](https://esnet-pondjs.appspot.com/#/timerange) representing the\r\n     * begin and end time of the chart.\r\n     */\r\n    timeRange: PropTypes.instanceOf(TimeRange).isRequired,\r\n\r\n    /**\r\n     * Should the time axis use a UTC scale or local\r\n     */\r\n    utc: PropTypes.bool,\r\n\r\n    /**\r\n     * Children of the ChartContainer should be ChartRows.\r\n     */\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\r\n        .isRequired,\r\n\r\n    /**\r\n     * The width of the chart. This library also includes a <Resizable> component\r\n     * that can be wrapped around a \\<ChartContainer\\>. The purpose of this is to\r\n     * inject a width prop into the ChartContainer so that it will fit the\r\n     * surrounding element. This is very handy when you need the chart to resize\r\n     * based on a responsive layout.\r\n     */\r\n    width: PropTypes.number,\r\n\r\n    /**\r\n     * Constrain the timerange to not move back in time further than this Date.\r\n     */\r\n    minTime: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * Constrain the timerange to not move forward in time than this Date. A\r\n     * common example is setting this to the current time or the end time\r\n     * of a fixed set of data.\r\n     */\r\n    maxTime: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * Boolean to turn on interactive pan and zoom behavior for the chart.\r\n     */\r\n    enablePanZoom: PropTypes.bool,\r\n\r\n    /**\r\n     * Boolean to turn on interactive drag to zoom behavior for the chart.\r\n     */\r\n    enableDragZoom: PropTypes.bool,\r\n\r\n    /**\r\n     * If this is set the timerange of the chart cannot be zoomed in further\r\n     * than this duration, in milliseconds. This might be determined by the\r\n     * resolution of your data.\r\n     */\r\n    minDuration: PropTypes.number,\r\n\r\n    /**\r\n     * Provides several options as to the format of the time axis labels.\r\n     *\r\n     * In general the time axis will generate an appropriate time scale based\r\n     * on the timeRange prop and there is no need to set this.\r\n     *\r\n     * However, some options exist:\r\n     *\r\n     *  - setting format to \"day\", \"month\" or \"year\" will show only ticks on those,\r\n     * and every one of those intervals. For example maybe you are showing a bar\r\n     * chart for October 2014 then setting the format to \"day\" will insure that a\r\n     * label is placed for each and every day\r\n     *\r\n     *  - setting format to \"relative\" interprets the time as a duration. This\r\n     * is good for data that is specified relative to its start time, rather than\r\n     * as an actual date/time\r\n     *\r\n     *  - setting the format to a d3 format string will use that format\r\n     *\r\n     *  - supplying a function for format will cause that function to be called\r\n     * whenever rendering a time\r\n     */\r\n    format: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * Time in milliseconds to transition from one Y-scale to the next\r\n     */\r\n    transition: PropTypes.number,\r\n\r\n    /**\r\n     * Show grid lines for each time marker\r\n     */\r\n    showGrid: PropTypes.bool,\r\n\r\n    /**\r\n     * Defines whether grid is overlayed (\"over\"( or underlayed (\"under\")\r\n     * with respect to the charts\r\n     */\r\n    showGridPosition: PropTypes.oneOf([\"over\", \"under\"]),\r\n\r\n    /**\r\n     * Defines how to style the SVG\r\n     */\r\n    style: PropTypes.object,\r\n\r\n    /**\r\n     * The width of the tracker info box\r\n     */\r\n    trackerHintWidth: PropTypes.number,\r\n\r\n    /**\r\n     * The height of the tracker info box\r\n     */\r\n    trackerHintHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Info box value or values to place next to the tracker line.\r\n     * This is either an array of objects, with each object\r\n     * specifying the label and value to be shown in the info box,\r\n     * or a simple string label.\r\n     */\r\n    trackerValues: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                label: PropTypes.string,\r\n                value: PropTypes.string\r\n            })\r\n        )\r\n    ]),\r\n\r\n    /**\r\n     * A Date specifying the position of the tracker line on the chart. It is\r\n     * common to take this from the onTrackerChanged callback so that the tracker\r\n     * followers the user's cursor, but it could be modified to snap to a point or\r\n     * to the nearest minute, for example.\r\n     */\r\n    trackerPosition: PropTypes.instanceOf(Date),\r\n\r\n    /**\r\n     * The style of the time marker. This is an object of the form { line, box, dot }.\r\n     * Line, box and dot are themselves objects representing inline CSS for each of\r\n     * the pieces of the info marker.\r\n     *\r\n     * When we use the TimeMarker as a tracker, we can style the box and dot as well.\r\n     */\r\n    trackerStyle: PropTypes.shape({\r\n        label: PropTypes.object, // eslint-disable-line\r\n        line: PropTypes.object, // eslint-disable-line\r\n        box: PropTypes.object, // eslint-disable-line\r\n        dot: PropTypes.object // eslint-disable-line\r\n    }),\r\n\r\n    /**\r\n     * Will be called when the user hovers over a chart. The callback will\r\n     * be called with the timestamp (a Date object) of the position hovered\r\n     * over as well as the current time axis' time scale. The timestamp may\r\n     * be used as the trackerPosition (see above), or to provide information\r\n     * about the time hovered over within the greater page. The time scale\r\n     * may be used to translate the timestamp into an x coordinate, which\r\n     * can then be used to position arbitrary components in sync with the\r\n     * current tracker position.\r\n     * Commonly we might do something like this:\r\n     * ```\r\n     *   <ChartContainer\r\n     *     onTrackerChanged={(tracker) => this.setState({tracker})}\r\n     *     trackerPosition={this.state.tracker}\r\n     *     ... />\r\n     * ```\r\n     */\r\n    onTrackerChanged: PropTypes.func,\r\n\r\n    /**\r\n     * This will be called if the user pans and/or zooms the chart. The callback\r\n     * will be called with the new TimeRange. This can be fed into the timeRange\r\n     * prop as well as used elsewhere on the greater page. Typical use might look\r\n     * like this:\r\n     * ```\r\n     *   <ChartContainer\r\n     *     onTimeRangeChanged={(timerange) => this.setState({timerange})}\r\n     *     timeRange={this.state.timerange}\r\n     *     ... />\r\n     * ```\r\n     */\r\n    onTimeRangeChanged: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the size of the chart changes\r\n     */\r\n    onChartResize: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user clicks the background plane of the chart. This is\r\n     * useful when deselecting elements.\r\n     */\r\n    onBackgroundClick: PropTypes.func,\r\n\r\n    /**\r\n     * Called when the user context-clicks the chart\r\n     */\r\n    onContextMenu: PropTypes.func,\r\n\r\n    /**\r\n     * Props for handling the padding\r\n     */\r\n    padding: PropTypes.number,\r\n    paddingLeft: PropTypes.number,\r\n    paddingRight: PropTypes.number,\r\n    paddingTop: PropTypes.number,\r\n    paddingBottom: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the title for the chart\r\n     */\r\n    title: PropTypes.string,\r\n\r\n    /**\r\n     * Specify the height of the title\r\n     * Default value is 28 pixels\r\n     */\r\n    titleHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the styling of the chart's title\r\n     */\r\n    titleStyle: PropTypes.object,\r\n\r\n    /**\r\n     * Object specifying the CSS by which the `TimeAxis` can be styled. The object can contain:\r\n     * \"values\" (the time labels), \"axis\" (the main horizontal line) and \"ticks\" (which may\r\n     * optionally extend the height of all chart rows using the `showGrid` prop. Each of these\r\n     * is an inline CSS style applied to the axis label, axis values, axis line and ticks\r\n     * respectively.\r\n     *\r\n     * Note that \"ticks\" and \"values\" are passed into d3's styles, so they are regular CSS property names\r\n     * and not React's camel case names (e.g. \"stroke-dasharray\" not \"strokeDasharray\"). \"axis\" is a\r\n     * regular React rendered SVG line, so it uses camel case.\r\n     */\r\n    timeAxisStyle: PropTypes.shape({\r\n        axis: PropTypes.object,\r\n        values: PropTypes.object,\r\n        ticks: PropTypes.object\r\n    }),\r\n\r\n    /**\r\n     * Height of the time axis\r\n     * Default value is 35 pixels\r\n     */\r\n    timeAxisHeight: PropTypes.number,\r\n\r\n    /**\r\n     * Specify the number of ticks\r\n     * The default ticks for quantitative scales are multiples of 2, 5 and 10.\r\n     * So, while you can use this prop to increase or decrease the tick count, it will always return multiples of 2, 5 and 10.\r\n     */\r\n    timeAxisTickCount: PropTypes.number,\r\n\r\n    /**\r\n     * Angle the time axis labels\r\n     */\r\n    timeAxisAngledLabels: PropTypes.bool,\r\n\r\n    /**\r\n     * Prop to hide time axis if required\r\n     */\r\n    hideTimeAxis: PropTypes.bool\r\n};\r\n\r\nChartContainer.defaultProps = {\r\n    width: 800,\r\n    padding: 0,\r\n    enablePanZoom: false,\r\n    enableDragZoom: false,\r\n    utc: false,\r\n    showGrid: false,\r\n    showGridPosition: \"over\",\r\n    timeAxisStyle: defaultTimeAxisStyle,\r\n    titleStyle: defaultTitleStyle,\r\n    trackerStyle: defaultTrackerStyle,\r\n    hideTimeAxis: false\r\n};\r\n","/**\r\n *  Copyright (c) 2015-present, The Regents of the University of California,\r\n *  through Lawrence Berkeley National Laboratory (subject to receipt\r\n *  of any required approvals from the U.S. Dept. of Energy).\r\n *  All rights reserved.\r\n *\r\n *  This source code is licensed under the BSD-style license found in the\r\n *  LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport _ from \"underscore\";\r\nimport merge from \"merge\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TimeSeries, Event } from \"pondjs\";\r\n\r\n/**\r\n * Renders an event view that shows the supplied set of events along a time axis.\r\n * The events should be supplied as a Pond TimeSeries.\r\n * That series may contain regular TimeEvents, TimeRangeEvents\r\n * or IndexedEvents.\r\n */\r\nexport default class EventChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hover: null\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Continues a hover event on a specific bar of the bar chart.\r\n     */\r\n    onMouseOver(e, event) {\r\n        if (this.props.onMouseOver) {\r\n            this.props.onMouseOver(event);\r\n        }\r\n        this.setState({ hover: event });\r\n    }\r\n\r\n    /**\r\n     * Handle mouse leave and calls onMouseLeave callback if one is provided\r\n     */\r\n    onMouseLeave() {\r\n        if (this.props.onMouseLeave) {\r\n            this.props.onMouseLeave(this.state.hover);\r\n        }\r\n        this.setState({ hover: null });\r\n    }\r\n\r\n    /**\r\n     * Handle click will call the onSelectionChange callback if one is provided\r\n     * as a prop. It will be called with the event selected.\r\n     */\r\n    handleClick(e, event) {\r\n        e.stopPropagation();\r\n        if (this.props.onSelectionChange) {\r\n            this.props.onSelectionChange(event);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { series, textOffsetX, textOffsetY, hoverMarkerWidth } = this.props;\r\n        const scale = this.props.timeScale;\r\n        const eventMarkers = [];\r\n\r\n        // Create and array of markers, one for each event\r\n        let i = 0;\r\n        for (const event of series.events()) {\r\n            const begin = event.begin();\r\n            const end = event.end();\r\n            const beginPos = scale(begin) >= 0 ? scale(begin) : 0;\r\n            const endPos = scale(end) <= this.props.width ? scale(end) : this.props.width;\r\n\r\n            const transform = `translate(${beginPos},0)`;\r\n            const isHover = this.state.hover ? Event.is(event, this.state.hover) : false;\r\n            // console.log()\r\n            let state;\r\n            if (isHover) {\r\n                state = \"hover\";\r\n            } else {\r\n                state = \"normal\";\r\n            }\r\n\r\n            let barNormalStyle = {};\r\n            let barStyle = {};\r\n            if (this.props.style) {\r\n                barNormalStyle = this.props.style(event, \"normal\");\r\n                barStyle = this.props.style(event, state);\r\n            }\r\n\r\n            let label = \"\";\r\n            if (this.props.label) {\r\n                if (_.isString(this.props.label)) {\r\n                    label = this.props.label;\r\n                } else if (_.isFunction(this.props.label)) {\r\n                    label = this.props.label(event);\r\n                }\r\n            }\r\n\r\n            const x = this.props.spacing;\r\n            const y = 0;\r\n            let width = endPos - beginPos - 2 * this.props.spacing;\r\n            width = width < 0 ? 0 : width;\r\n            const height = this.props.size;\r\n\r\n            const eventLabelStyle = {\r\n                fontWeight: 100,\r\n                fontSize: 11\r\n            };\r\n\r\n            let text = null;\r\n            // if (true) {\r\n            if (isHover) {\r\n                text = (\r\n                    <g>\r\n                        <rect\r\n                            className=\"eventchart-marker\"\r\n                            x={x}\r\n                            y={y+10}\r\n                            // y={y}\r\n                            width={width}\r\n                            height={height + 4}\r\n                            style={merge(true, barNormalStyle, { pointerEvents: \"none\" })}\r\n                        />\r\n                        <text\r\n                            style={{\r\n                                pointerEvents: \"none\",\r\n                                fill: \"#444\",\r\n                                ...eventLabelStyle\r\n                            }}\r\n                            x={8 + textOffsetX}\r\n                            y={15 + textOffsetY}\r\n                        >\r\n                            {label}\r\n                        </text>\r\n                    </g>\r\n                );\r\n            }\r\n\r\n            eventMarkers.push(\r\n                <g transform={transform}\r\n                 key={i}\r\n                 onClick={e => this.handleClick(e, event)}\r\n                 onMouseLeave={() => this.onMouseLeave()}\r\n                 onMouseOver={e => this.onMouseOver(e, event)}\r\n                 >\r\n                     <circle\r\n                        cx = {x}\r\n                        cy = {y+5}\r\n                        r =  {5}\r\n                        style = {barStyle}\r\n                        // style = {{fill: \"red\"}}\r\n                    />\r\n                    <rect\r\n                        className=\"eventchart-marker\"\r\n                        x={x}\r\n                        y={y+4}\r\n                        width={width}\r\n                        height={2}\r\n                        // height={height}\r\n                        style={barStyle}\r\n                        // onClick={e => this.handleClick(e, event)}\r\n                        // onMouseLeave={() => this.onMouseLeave()}\r\n                        // onMouseOver={e => this.onMouseOver(e, event)}\r\n                    />\r\n                       <circle\r\n                        cx = {x+width}\r\n                        cy = {y+5}\r\n                        r =  {5}\r\n                        style = {barStyle}\r\n                        // style = {{fill: \"red\"}}\r\n                    />\r\n                    {text}\r\n                </g>\r\n            );\r\n\r\n            i += 1;\r\n        }\r\n\r\n        return <g>{eventMarkers}</g>;\r\n    }\r\n}\r\n\r\nEventChart.defaultProps = {\r\n    visible: true,\r\n    size: 30,\r\n    spacing: 0,\r\n    textOffsetX: 0,\r\n    textOffsetY: 0,\r\n    hoverMarkerWidth: 5\r\n};\r\n\r\nEventChart.propTypes = {\r\n    /**\r\n     * Show or hide this chart\r\n     */\r\n    visible: PropTypes.bool,\r\n\r\n    /**\r\n     * What [Pond TimeSeries](https://esnet-pondjs.appspot.com/#/timeseries) data to visualize\r\n     */\r\n    series: PropTypes.instanceOf(TimeSeries).isRequired,\r\n\r\n    // events: PropTypes.instanceOf()\r\n    /**\r\n     * Set hover label text\r\n     * When label is function callback it will be called with current event.\r\n     */\r\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n\r\n    /**\r\n     * The height in pixels for the event bar\r\n     */\r\n    size: PropTypes.number,\r\n\r\n    /**\r\n     * The distance in pixels to inset the event bar from its actual timerange\r\n     */\r\n    spacing: PropTypes.number,\r\n\r\n    /**\r\n     * Marker width on hover\r\n     */\r\n    hoverMarkerWidth: PropTypes.number,\r\n\r\n    /**\r\n     * Hover text offset position X\r\n     */\r\n    textOffsetX: PropTypes.number,\r\n\r\n    /**\r\n     * Hover text offset position Y\r\n     */\r\n    textOffsetY: PropTypes.number,\r\n\r\n    /**\r\n     * A function that should return the style of the event box\r\n     */\r\n    style: PropTypes.func,\r\n\r\n    /**\r\n     * Event selection on click. Will be called with selected event.\r\n     */\r\n    onSelectionChange: PropTypes.func,\r\n\r\n    /**\r\n     * Mouse leave at end of hover event\r\n     */\r\n    onMouseLeave: PropTypes.func,\r\n\r\n    /**\r\n     * Mouse over event callback\r\n     */\r\n    onMouseOver: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The timeScale supplied by the surrounding ChartContainer\r\n     */\r\n    timeScale: PropTypes.func,\r\n\r\n    /**\r\n     * [Internal] The width supplied by the surrounding ChartContainer\r\n     */\r\n    width: PropTypes.number\r\n};\r\n","// import {v4 as uuid} from 'uuid';\r\nimport {useState, useEffect} from 'react'\r\nimport { useTheme, Theme } from \"@material-ui/core/styles\";\r\nimport { useStoreState } from \"../hooks\";\r\nimport {Text} from 'evergreen-ui';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EventInfoDisplay from './Timeline/EventInfoDisplay';\r\nimport type {EventRow} from '../model/map_data';\r\n// https://codesandbox.io/s/l28vmvp2n9?from-embed\r\n\r\nimport ChartContainer from  \"./TimeSeries/components/ChartContainer\";\r\n// import ChartContainer from  \"react-timeseries-charts\";\r\nimport Charts from  \"./TimeSeries/components/Charts\";\r\nimport Resizable from  \"./TimeSeries/components/Resizable\";\r\nimport ChartRow from  \"./TimeSeries/components/ChartRow\";\r\nimport YAxis from  \"./TimeSeries/components/YAxis\";\r\nimport EventChart from  \"./TimeSeries/components/EventChart\";\r\nimport Baseline from  \"./TimeSeries/components/Baseline\";\r\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport {EventLevel} from '../model/enums'\r\n\r\ninterface Seperator{\r\n  pos: number, \r\n  name: string, \r\n  count: number,\r\n}\r\n\r\nconst Timeline = function() {\r\n  const active_filter = useStoreState(state=>state.map_data?.filter);\r\n  const time_series = useStoreState(state=>state.map_data.timeline_series);\r\n\r\n  const event_rows: EventRow[] = useStoreState(state=>state.map_data.event_spreadsheet);\r\n  const [eventInfo, setEventInfo] = useState<EventRow | undefined>(undefined);\r\n  const [selectedEvent, setSelectedEvent] = useState<TimeSeries | undefined>(undefined);\r\n  const [chartHeight, setChartHeight] = useState(0);\r\n  const [timeSeriesCount, setTimeSeriesCount] = useState(0);\r\n  const [seperators, setSeperators] = useState([      \r\n    {pos: 0, name: EventLevel.national.toUpperCase(), count: time_series.national.length},\r\n    {pos: 1, name: EventLevel.state.toUpperCase(), count: time_series.state.length},\r\n    {pos: 2, name: EventLevel.city.toUpperCase(), count: time_series.city.length}]);\r\n  const theme = useTheme();\r\n  const row_height = 40;\r\n  // const row_height = 20;\r\n  const start_date= new Date(1792,0,1);\r\n  const end_date = new Date(2020,0,1)\r\n  const is_sm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const data_loaded = useStoreState(state=>state.map_data.loaded);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  function sum(acc: number,val: number){ return acc+val;} \r\n\r\n  useEffect(()=>{\r\n      const time_series_count = time_series.state.length + time_series.city.length + time_series.national.length\r\n      \r\n      console.log(event_rows)\r\n      console.log(time_series)\r\n      console.log(time_series_count)\r\n      setChartHeight(row_height*time_series_count)\r\n      setTimeSeriesCount(time_series_count)\r\n      const lengths = [time_series.state.length, time_series.city.length, time_series.national.length]\r\n      const heights = lengths.map(l=>l/timeSeriesCount)\r\n      // console.log(heights)\r\n      // const poss = heights.map((h,i,a)=>a.slice(0,i).reduce(sum))\r\n      console.log(heights[2])\r\n      const poss = [heights[0], heights[0+1]]\r\n      poss.push(poss[0]+poss[1]);\r\n      poss.forEach((p: number, i: number)=>{\r\n          // sc = Object.assign()\r\n          seperators[i].pos = p\r\n          // seperators[i].pos = 1 - p\r\n      })\r\n      setSeperators(seperators)\r\n      console.log(seperators)\r\n      console.log(seperators.length)\r\n      // const poss = [heights[0], heights[0+1], heights[0+1+2]]\r\n\r\n      console.log(poss)\r\n      console.log(lengths, heights, poss)\r\n      // lengths.reduce((acc: number[], cv: number)){\r\n      //   acc\r\n      // }\r\n\r\n  // },[data_loaded, seperators]);\r\n  },[data_loaded, event_rows, time_series]);\r\n  useEffect(()=>{\r\n\r\n  }, [seperators])\r\n  const timelineSection = {\r\n    // height: 'fit-content', \r\n    height: 200,\r\n    // height\r\n    width: '100%',\r\n    borderTop: `1px solid ${theme.palette.primary.main}`,\r\n    display: is_sm?\"inline-flex\":\"none\",\r\n  } as React.CSSProperties\r\n\r\n  const testChart = {\r\n    // width: \"100%\", \r\n    // height: \"200px\",\r\n    // margin: 'auto',\r\n    // marginTop: '1em',\r\n  } as React.CSSProperties\r\n\r\n  const linesContainer= {\r\n    position: 'absolute',\r\n    width: \"100%\", \r\n    height: \"100%\",\r\n    top: 0, \r\n    zIndex: -1,\r\n    opacity: 0.5,\r\n  } as React.CSSProperties\r\n\r\n  const seperatorText = {\r\n    fontSize: '9px',\r\n    position: 'absolute',\r\n    color: 'lightgrey',\r\n  } as React.CSSProperties\r\n\r\n  const historicalEventsText = {\r\n    fontSize: '9px',\r\n    position: 'absolute',\r\n    color: theme.palette.primary.main,\r\n  } as React.CSSProperties\r\n\r\n  const timeAxis = {\r\n    axis: {\r\n      stroke: theme.palette.primary.main,\r\n    }\r\n  }\r\n\r\n\r\n\r\n  let timerange = new TimeRange(start_date, end_date);\r\n  const make_series = (series: TimeSeries[], theme: Theme, active_filter: any, row_height: number) => {\r\n      let test = series.map(function(ev, i){\r\n        let base_style = {\r\n          fill: theme.palette.primary.main,\r\n          opacity: 1.0\r\n        }\r\n        \r\n        function style_func(s: any, state: any){\r\n          if (state == \"hover\"){\r\n            console.log(\"got hover\");\r\n            return {\r\n              fill:theme.palette.primary.light,\r\n              opacity: 1.0\r\n            }\r\n\r\n          } \r\n          if (state == \"selected\"){\r\n            return {\r\n              fill:theme.palette.primary.dark,\r\n              opacity: 1.0\r\n            }\r\n          } \r\n          return base_style\r\n  \r\n        }\r\n        function label_func(e: any){\r\n          return e.data().first().get(\"title\")\r\n        }\r\n        function handle_click(e: any){\r\n          console.log(e.data().first().get(\"title\"))\r\n          let title = e.data().first().get(\"title\");\r\n          let found_row = event_rows.filter(r=>r.title === title)[0];\r\n          \r\n          setEventInfo(found_row);\r\n          setSelectedEvent(e)\r\n          console.log(found_row);\r\n          console.log(getAllFuncs(e));\r\n        }\r\n      return (\r\n  \r\n        <ChartRow \r\n        height = {`${row_height}`} \r\n        style = {{fill: \"#f1a340\"}} key = {i} axisMargin = {1}\r\n        >\r\n          {/* <YAxis\r\n            id=\"y\"\r\n            label=\"Price ($)\"\r\n            min={0.5}\r\n            max={1.5}\r\n            width=\"60\"\r\n            type=\"linear\"\r\n            format=\"$,.2f\"\r\n        /> */}\r\n          <Charts>\r\n          {/* <Baseline\r\n                axis=\"y\"\r\n                value={1.0}\r\n                label=\"USD Baseline\"\r\n                position=\"right\"\r\n            /> */}\r\n            <EventChart\r\n              series = {ev}\r\n              size = {row_height}\r\n              label = {(e: any)=>label_func(e)}\r\n              onSelectionChange = {(e: any)=>handle_click(e)}\r\n              textOffsetY  = {-5}\r\n              // label = {(e: any)=>e.data().frist().get(\"title\")}\r\n              style={style_func}\r\n            ></EventChart>\r\n          </Charts>\r\n        </ChartRow>\r\n        )\r\n      \r\n    })\r\n    return test\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing = {0} style = {timelineSection}>\r\n      <Grid item xs = {2}>\r\n        {/* <div></div> */}\r\n        <Text style = {historicalEventsText}>\r\n          <span> HISTORICAL EVENTS</span>\r\n        </Text>\r\n        <EventInfoDisplay info = {eventInfo}></EventInfoDisplay>\r\n      </Grid>\r\n        <Grid item xs = {10} style = {{height: data_loaded?'100%':\"101%\"}}>\r\n            <div style = {{position: 'relative', height: '200px'}}>\r\n            <div style = {linesContainer}>\r\n              { \r\n                seperators.map(function(f: Seperator, i: number){\r\n                    let tf: string = parseFloat(`${f.pos}`).toFixed(2);\r\n                    console.log(tf)\r\n                    if (Math.floor(f.pos) === f.pos){\r\n                      \r\n                    console.log(i)\r\n                    console.log(f)\r\n                    console.log(f.pos*100);\r\n                    let test_top: string = `${parseFloat(tf)*100}%`;\r\n                    \r\n                    // conosol\r\n                    const testtest = {\r\n                      paddingTop: test_top,\r\n                      position: 'relative',\r\n                      height: '0px',\r\n                      borderTop: `1px solid lightgrey`,\r\n                    } as React.CSSProperties\r\n                    \r\n                    return(\r\n                      <div key = {f.pos} style = {testtest}>\r\n                        <Text key = {f.pos} style ={seperatorText}>{f.name}</Text>\r\n                      </div>\r\n                    )\r\n                  }\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <ChartContainer\r\n                timeRange={timerange}\r\n                enablePanZoom={false}\r\n                width = {width*.75}\r\n                // width = {data_loaded?1000:1005}\r\n                showGrid = {true}\r\n                timeAxisStyle = {timeAxis}\r\n                timeAxisTickCount = {5}\r\n                >\r\n                { make_series(time_series.national, theme, active_filter, row_height )}\r\n\r\n                { make_series(time_series.state, theme, active_filter, row_height )}\r\n\r\n                { make_series(time_series.city, theme, active_filter, row_height )}\r\n              </ChartContainer>\r\n\r\n        </div>\r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nexport default Timeline\r\n\r\nfunction getAllFuncs(toCheck: any) {\r\n  var props: any[] = [];\r\n  var obj = toCheck;\r\n  do {\r\n      props = props.concat(Object.getOwnPropertyNames(obj));\r\n  } while (obj = Object.getPrototypeOf(obj));\r\n\r\n  return props.sort().filter(function(e, i, arr) { \r\n     if (e!=arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n  });\r\n}\r\n\r\n","import React from 'react'; // we need this to make JSX compile\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport {Heading} from 'evergreen-ui';\r\ntype SelectorSectionProps = { \r\n    title: string, \r\n    children: JSX.Element,\r\n}\r\n\r\n\r\n\r\nexport const SelectorSection = ({title, children}: SelectorSectionProps) => {\r\n    const theme = useTheme();\r\n    const container = {\r\n        height: \"100%\",\r\n        paddingLeft: '.25em',\r\n        paddingRight: '.25em',\r\n        minHeight: '6rem',\r\n    } as React.CSSProperties\r\n\r\n    const headerContainer = {\r\n        borderBottom: `1px solid ${theme.palette.primary.main}`,\r\n        paddingBottom: '.1em',\r\n        height: \"20%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignContent: \"center\",\r\n    } as React.CSSProperties\r\n\r\n    const header = {\r\n        color: theme.palette.primary.main,\r\n        marginTop: 0,\r\n        marginBottom: 'auto',\r\n        fontFamily: theme.typography.fontFamily,\r\n    } as React.CSSProperties\r\n\r\n    return (\r\n    <div style = {container}>\r\n        <div style = {headerContainer}>\r\n            <Heading size = {300} style = {header}>{title}</Heading>\r\n        </div>\r\n        {children}\r\n    </div> \r\n    )\r\n}\r\n\r\nexport default SelectorSection","import {Heading, Text, Icon, ArrowRightIcon} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { useStoreActions } from \"../../../hooks\";\r\nimport {useState} from 'react';\r\nimport {AuthorDisciplineFilter, TopicSubCategoryFilter, ThemeCategoryFilter} from '../../../model/enums';\r\n\r\nimport React from 'react';\r\n//haa\r\nexport type SelectorGroupProps = { \r\n    title: string | null, \r\n    size: number, \r\n    children?: JSX.Element|JSX.Element[],\r\n    filters?: (TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter )[]\r\n}\r\n\r\nconst SelectorGroup = ({title, children, filters}: SelectorGroupProps) => {\r\n    const set_multi_filter = useStoreActions(actions=>actions.map_data.thunk_set_multi_filter);\r\n    const dummy_filters = [TopicSubCategoryFilter.EE_COMMERCE, AuthorDisciplineFilter.ARCHITECTURE, ThemeCategoryFilter.DIVERSITY];\r\n    const [hovered, SetHovered] = useState(false);\r\n    const theme = useTheme();\r\n    const groupStyle = {\r\n        fontFamily: theme.typography.fontFamily,\r\n        textDecoration: 'underline',\r\n        color: hovered?theme.palette.primary.light:theme.palette.primary.main,\r\n    } as React.CSSProperties;\r\n\r\n    const childContainer = {\r\n        marginTop: (title !== null)?'.25em':0,\r\n    } as React.CSSProperties;\r\n    \r\n    const headerAndChild = {\r\n        height: 'fit-content',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        fontFamily: theme.typography.fontFamily,\r\n        \r\n    }\r\n    return (\r\n        <div style = {headerAndChild}>\r\n            <div \r\n                onMouseUp={()=>set_multi_filter(filters??[])}\r\n                onMouseEnter = {()=>SetHovered(true)}\r\n                onMouseLeave = {()=>SetHovered(false)}\r\n            >\r\n            <Text >\r\n                <Heading size = {100} style = {groupStyle}>\r\n                    {title}\r\n                </Heading>\r\n            </Text>\r\n            </div>\r\n            <div style = {childContainer}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SelectorGroup;","import Grid from '@material-ui/core/Grid';\r\nimport {Link, Paragraph, Text, Icon, ArrowRightIcon} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport React from 'react';\r\nimport type {SelectorGroupProps} from './SelectorGroup';\r\n// import '../../../css/SelectorParent.css';\r\ntype SelectorParentProps = { \r\n    columns?: number,\r\n    children?: JSX.Element|JSX.Element[],\r\n    // children?: (title: string) => React.ReactElement[]\r\n}\r\n\r\n\r\nconst SelectorParent = ({children, columns}: SelectorParentProps) => {\r\n    const theme = useTheme();\r\n    const clusterContainer = {\r\n        height: '76%',\r\n        padding: 0,\r\n        columns: columns ?? 12,\r\n        // display: 'flex',\r\n    } as React.CSSProperties\r\n    \r\n    const selectorGroup = {\r\n        // paddingTop: '.25em',\r\n        display: 'flex',\r\n        paddingLeft: '.25em',\r\n        paddingRight: '.25em',\r\n        paddingTop: '.5em',\r\n        height: \"100%\",\r\n        borderLeft: `1px dashed ${theme.palette.primary.main}`, \r\n        borderRight: `1px dashed ${theme.palette.primary.main}`, \r\n    } as React.CSSProperties\r\n\r\n    const noSiblings = {\r\n        display: 'flex',\r\n        paddingTop: '.5em',\r\n        // paddingTop: '.25em',\r\n        paddingRight: '.25em',\r\n        paddingLeft: '.25em',\r\n        height: \"100%\",\r\n    } as React.CSSProperties\r\n\r\n    const selectorGroupFirst = {\r\n        paddingTop: '.5em',\r\n        // paddingTop: '.25em',\r\n        display: 'flex',\r\n        paddingLeft: 0,\r\n        height: \"100%\",\r\n        borderRight: `1px dashed ${theme.palette.primary.main}`, \r\n    } as React.CSSProperties\r\n\r\n    const selectorGroupLast = {\r\n        paddingTop: '.5em',\r\n        display: 'flex',\r\n        // paddingTop: '.25em',\r\n        paddingLeft: '.25em',\r\n        height: \"100%\",\r\n        borderLeft: `1px dashed ${theme.palette.primary.main}`, \r\n    } as React.CSSProperties\r\n\r\n    const group_style = (ind: number, chil: JSX.Element|JSX.Element[]) =>{\r\n        if (Array.isArray(chil)){\r\n            if (ind == 0){\r\n                return selectorGroupFirst\r\n            }\r\n            if (ind == chil.length-1){\r\n                return selectorGroupLast\r\n            } else {\r\n                return selectorGroup\r\n            }\r\n        } else {\r\n            return noSiblings\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing = {0} direction = \"row\" style = {clusterContainer} >\r\n            {children ? React.Children.map<React.ReactNode, React.ReactNode>(children, (child, index) => {\r\n                if (React.isValidElement(child)) {\r\n                    return (<Grid style ={group_style(index, children)} item xs = {child.props.size}>{child}</Grid>)\r\n                }\r\n            }): null}\r\n\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default SelectorParent;\r\n","import React, { useState, useEffect } from 'react'; // we need this to make JSX compile\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport \"../../../css/App.css\";\r\nimport {getRandomNumber} from \"../../../utils\";\r\nimport {useStoreState } from \"../../../hooks\";\r\ntype UnitProps = { \r\n    color: number, \r\n    is_active_filter?: boolean,\r\n}\r\n\r\n\r\n\r\nexport const GridUnit = ({ color, is_active_filter}: UnitProps) => {\r\n    const theme = useTheme();\r\n    const size = 12; \r\n    const [hover, setHover] = useState(false);\r\n    const mounted = true;\r\n    const data_loaded = useStoreState(state=>state.map_data.loaded);\r\n    const duration = getRandomNumber(0.5, 4);\r\n    const containerStyle = {\r\n        display: data_loaded? 'block':'none',\r\n        animation: data_loaded?`fadein ${duration}s normal`:'',\r\n        animationIterationCound: 1,\r\n        marginTop: 'auto',\r\n    } as React.CSSProperties\r\n\r\n    useEffect(()=>{\r\n    },[mounted]);\r\n\r\n    const match_color = (ind: number) =>{\r\n        if (ind === -2){\r\n            return blue[500]\r\n        }\r\n        if (ind === -1){\r\n            return blue[100]\r\n        }\r\n        if (ind === 0){\r\n            return theme.palette.primary.main\r\n        };\r\n        if (ind === 1){\r\n            return blue[300]\r\n        };\r\n        if (ind === 2){\r\n            return blue[400]\r\n        };\r\n        if (ind === 3){\r\n            return blue[500]\r\n        };\r\n        if (ind === 4){\r\n            return theme.palette.primary.dark\r\n        } else {\r\n            return \"red\"\r\n        }\r\n    }\r\n\r\n    const boxStyle = (is_active_filter?: boolean) => {\r\n        if (is_active_filter){\r\n            // console.log(\"GOT ACTIVE FILTER~~\");\r\n            return {\r\n            width: `${size}px`, \r\n            height: `${size}px`,\r\n            backgroundColor: match_color(color),\r\n            marginTop: 'auto',\r\n            marginBottom: '3px',\r\n            marginRight: '3px',\r\n            outline: '1px solid #ffcb06',\r\n            opacity: 1,\r\n            } as React.CSSProperties;\r\n\r\n        } else {\r\n            if (color == -2){\r\n                return {\r\n                    width: `${size}px`, \r\n                    height: `${size}px`,\r\n                    backgroundColor: match_color(color),\r\n                    marginTop: 'auto',\r\n                    marginBottom: '3px',\r\n                    marginRight: '3px',\r\n                    opacity: 0.5,\r\n                } as React.CSSProperties;\r\n            } else {\r\n                return {\r\n                    width: `${size}px`, \r\n                    height: `${size}px`,\r\n                    backgroundColor: match_color(color),\r\n                    marginTop: 'auto',\r\n                    marginBottom: '3px',\r\n                    marginRight: '3px',\r\n                    opacity: 1.0,\r\n                } as React.CSSProperties;\r\n            }\r\n        } \r\n    } \r\n    return (\r\n    <div style = {containerStyle}>\r\n        <div style = {boxStyle(is_active_filter)} onMouseEnter={()=>setHover(true)} onMouseLeave = {()=>setHover(false)}>\r\n            \r\n        </div> \r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GridUnit","export function getRandomNumber(min: number, max: number) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.random() * (max - min) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","// import Grid from '@material-ui/core/Grid';\r\n// import { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport GridUnit from './GridUnit';\r\nimport { useStoreActions, useStoreState } from \"../../../hooks\";\r\nimport {useState, useEffect} from 'react';\r\nimport {AuthorDisciplineFilter, TopicSubCategoryFilter, ThemeCategoryFilter} from '../../../model/enums';\r\ninterface GridChunkProps{\r\n  count: number,\r\n  filter: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter | null,\r\n  base_color: number,\r\n}\r\n\r\nfunction roundToStep(value: number, step:number) {\r\n  const val = Math.round(value / step) * step;\r\n  let num_cols = val/step;\r\n  const max_num_rows = step;\r\n\r\n  if (value !== undefined && value !==null){\r\n    let test_arrs = Array.from(Array(num_cols).keys()).map((k: number, i:number)=>{\r\n      let num_units = 0;\r\n      if (i==num_cols-1){\r\n        num_units = max_num_rows - Math.abs((value-val))\r\n        // num_units = max_num_rows + (value-val)\r\n      } else {\r\n        num_units = step; \r\n      }\r\n      const col_data: any = {\r\n        count: num_units\r\n      };\r\n      return col_data\r\n    })\r\n    // console.log(test_arrs);\r\n    return test_arrs\r\n  }\r\n\r\n}\r\n\r\nconst GridChunk = ({count, filter, base_color}: GridChunkProps) =>{\r\n  const rowContainer = {\r\n    // marginTop: '.25em',\r\n    // width: ''\r\n    // width: '14px',\r\n    // position: 'absolute',\r\n    // bottom: 0,\r\n    // backgroundColor: 'red',\r\n    // width: '12%',\r\n  } as React.CSSProperties\r\n  \r\n  const chunkContainer = {\r\n    height: '100%',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    // j\r\n    // width: 15,\r\n    // bottom: 0,\r\n  } as React.CSSProperties\r\n\r\n  const real_filter = useStoreState(state=>state.map_data.filter);\r\n  const set_filter = useStoreActions(actions=>actions.map_data.thunk_set_filter);\r\n  const set_row_color = (cur_filter_val: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter | null, is_hovered: boolean, base_color: number) => {\r\n    if (cur_filter_val === filter) {\r\n      return 4\r\n    } \r\n    if (cur_filter_val === null){\r\n      return base_color;\r\n    }\r\n    if (cur_filter_val !== null && cur_filter_val != filter){\r\n      return -2\r\n    }\r\n    else {\r\n      return is_hovered?-1:base_color\r\n    }\r\n}\r\n  const [hovered, setHovered] = useState(false);\r\n    useEffect(()=>{\r\n    }, [real_filter])\r\n\r\n    useEffect(()=>{\r\n    }, [hovered])\r\n  \r\n  const adjust_width = (base_style: React.CSSProperties, num_cols: number) =>{\r\n    base_style.width = 15*num_cols;\r\n    return base_style\r\n  }\r\n\r\n  let group_columns: any = roundToStep(count, 3)\r\n  const to_chunk = (col_list?: any[])=>{\r\n    if (col_list){\r\n      return (  \r\n        <div style = {chunkContainer} \r\n        onMouseUp = {()=>set_filter(filter)}\r\n        onMouseEnter = {()=>setHovered(!hovered)}\r\n        onMouseLeave ={()=>setHovered(!hovered)}\r\n        >\r\n          {      \r\n            Array.from(Array(col_list.length).keys()).map((r: number)=>{\r\n              console.log(col_list);\r\n              let cur_col: any = col_list[r];\r\n              return (\r\n                <div style = {rowContainer} key = {r}>\r\n                {            \r\n                  Array.from(Array(cur_col.count).keys()).map((i: number, c: any)=>{\r\n                    // console.log(cur_col.count);\r\n                    return (<GridUnit color = {set_row_color(real_filter, hovered, base_color)} is_active_filter = {filter === real_filter} key = {i}/>)\r\n                  })\r\n                }\r\n                </div>\r\n              )\r\n            })\r\n          }\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n  return (  \r\n      <>\r\n        { to_chunk(group_columns)}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default GridChunk","// import Grid from '@material-ui/core/Grid';\r\nimport {Paragraph, Text} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from './Containers/SelectorGroup';\r\nimport SelectorParent from './Containers/SelectorParent';\r\nimport GridChunk from './Grid/GridChunk';\r\nimport GridUnit from './Grid/GridUnit';\r\nimport { useStoreState } from \"../../hooks\";\r\nimport {AuthorDisciplineFilter} from '../../model/enums';\r\n\r\n\r\nfunction to_author_enum(discipline: string, year: string): AuthorDisciplineFilter{\r\n    const filter_string = discipline+\"_\"+year;\r\n    const filter_enum =  AuthorDisciplineFilter[filter_string as unknown as keyof typeof AuthorDisciplineFilter]\r\n    return filter_enum; \r\n}\r\n\r\nconst YearDiscipline = () => {\r\n    const theme = useTheme();\r\n    const year_data = useStoreState(state=>state.map_data?.map_stats?.year);\r\n    console.log(year_data);\r\n\r\n    const chunksContainer = {\r\n        // position: 'relative',\r\n        // marginTop: ''\r\n        display: 'flex',\r\n        height: '51px',\r\n\r\n    } as React.CSSProperties;\r\n\r\n    const disciplineStyle = {\r\n        color: theme.palette.primary.main,\r\n        fontSize: '8pt',\r\n        justifyContent: 'space-between',\r\n        fontFamily: theme.typography.fontFamily,\r\n    \r\n    } as React.CSSProperties\r\n    const rowContainer = {\r\n        display: 'flex',\r\n        fontSize: '8pt',\r\n        height: 20,\r\n        // paddingTop: 10,\r\n        marginTop: -4,\r\n\r\n        // : 'center',\r\n    } as React.CSSProperties\r\n\r\n    const make_year_chunks = (year: string, year_breakdown?: any) =>{\r\n        \r\n        if (year_breakdown){\r\n            return (\r\n                <div style = {chunksContainer}>\r\n                    <GridChunk base_color = {0} count = {year_breakdown.ARCHITECTURE} filter = {to_author_enum(\"ARCHITECTURE\", year)}/>\r\n                    <GridChunk base_color = {1} count = {year_breakdown.ARCHITECTURE} filter = {to_author_enum(\"ARTDESIGN\", year)}/>\r\n                    <GridChunk base_color = {2} count = {year_breakdown.ARCHITECTURE} filter = {to_author_enum(\"LANDSCAPE\", year)}/>\r\n                    <GridChunk base_color = {3} count = {year_breakdown.ARCHITECTURE} filter = {to_author_enum(\"OTHER\", year)}/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n       <>\r\n        <SelectorParent>\r\n            <SelectorGroup title = {null} size = {3}>\r\n                <div style = {rowContainer}>\r\n                    <GridUnit color = {0}/>\r\n                    <Paragraph style = {disciplineStyle}>ARCHITECTURE</Paragraph>\r\n                </div>\r\n                <div style = {rowContainer}>\r\n                    <GridUnit color = {1}/>\r\n                    <Text style = {disciplineStyle}>\r\n                        <Paragraph style = {disciplineStyle}>LANDSCAPE ARCH</Paragraph>\r\n                    </Text>\r\n                </div>\r\n                <div style = {rowContainer}>\r\n                    <GridUnit color = {2} />\r\n                    <Paragraph style = {disciplineStyle}>ART + DESIGN</Paragraph>\r\n                </div>\r\n                <div style = {rowContainer}>\r\n                    <GridUnit color = {3}/>\r\n                    <Paragraph style = {disciplineStyle}>OTHER</Paragraph>\r\n                </div>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"2016\"} size = {3} filters = {\r\n                [\r\n                AuthorDisciplineFilter.ARTDESIGN_2016,\r\n                AuthorDisciplineFilter.ARCHITECTURE_2016,\r\n                AuthorDisciplineFilter.OTHER_2016,\r\n                AuthorDisciplineFilter.LANDSCAPE_2016\r\n                ]    \r\n                }>\r\n                {\r\n                make_year_chunks(\"2016\", year_data[\"2016\"])\r\n                }\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"2018\"} size = {3}  filters = {\r\n                [\r\n                AuthorDisciplineFilter.ARTDESIGN_2018,\r\n                AuthorDisciplineFilter.ARCHITECTURE_2018,\r\n                AuthorDisciplineFilter.OTHER_2018,\r\n                AuthorDisciplineFilter.LANDSCAPE_2018,\r\n                ]    \r\n                }>\r\n            {\r\n                    make_year_chunks( \"2018\", year_data[\"2018\"])\r\n                }\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"2020\"} size = {3}  filters = {\r\n                [\r\n                AuthorDisciplineFilter.ARTDESIGN_2020,\r\n                AuthorDisciplineFilter.ARCHITECTURE_2020,\r\n                AuthorDisciplineFilter.OTHER_2020,\r\n                AuthorDisciplineFilter.LANDSCAPE_2020,\r\n                ]    \r\n                }>\r\n            {\r\n                    make_year_chunks(\"2020\", year_data[\"2020\"])\r\n                }\r\n            </SelectorGroup>\r\n        </SelectorParent>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default YearDiscipline;","// import Grid from '@material-ui/core/Grid';\r\nimport {Link, Paragraph, Text, Icon, ArrowRightIcon} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from './Containers/SelectorGroup';\r\nimport SelectorParent from './Containers/SelectorParent';\r\nimport { useStoreActions, useStoreState } from \"../../hooks\";\r\nimport GridChunk from './Grid/GridChunk';\r\nimport {AuthorDisciplineFilter, TopicSubCategoryFilter, ThemeCategoryFilter} from '../../model/enums';\r\n\r\ninterface GridChunkProps{\r\n  count: number,\r\n  rows: number,\r\n  cols: number, \r\n  filter: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter | null,\r\n}\r\n\r\n\r\nconst Themes = () => {\r\n    const theme = useTheme();\r\n    const total_count = 35;\r\n    const theme_stats = useStoreState(state=>state.map_data?.map_stats?.theme);\r\n    // const theme_stats = map_stats.theme;\r\n    return (\r\n       <>\r\n        <SelectorParent>\r\n            <SelectorGroup title = {\"Equity\"} size = {4}>\r\n              <GridChunk count = {theme_stats.EQUITY} filter = {ThemeCategoryFilter.EQUITY} base_color = {0}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Access\"} size = {4}>\r\n              <GridChunk count = {theme_stats.ACCESS} filter = {ThemeCategoryFilter.ACCESS}  base_color = {0}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Diversity\"} size = {4}>\r\n              <GridChunk count = {theme_stats.DIVERSITY} filter = {ThemeCategoryFilter.DIVERSITY}  base_color = {0}/>\r\n            </SelectorGroup>\r\n        </SelectorParent>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default Themes;","import { useStoreActions, useStoreState } from \"../../../hooks\";\r\nimport {Link, Paragraph, Text, Icon,} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport {useState, useEffect, cloneElement} from 'react';\r\nimport GridUnit from './GridUnit';\r\nimport {AuthorDisciplineFilter, TopicSubCategoryFilter, ThemeCategoryFilter} from '../../../model/enums';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\ninterface GridRowProps{\r\n    count: number,\r\n    active_filter: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter | null,\r\n    filter: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter,\r\n    icon: JSX.Element,\r\n    tooltip: string, \r\n}\r\n\r\nconst GridRow =({count, icon, filter, active_filter, tooltip}: GridRowProps) => {\r\n    const theme = useTheme();\r\n    const [hovered, setHovered] = useState(false);\r\n    const real_filter = useStoreState(state=>state.map_data.filter);\r\n    const set_filter = useStoreActions(actions=>actions.map_data.thunk_set_filter);\r\n\r\n    const set_row_color = (cur_filter: TopicSubCategoryFilter | AuthorDisciplineFilter | ThemeCategoryFilter | null, is_hovered: boolean) => {\r\n        if (cur_filter == filter) {\r\n          return 4\r\n        } \r\n        if (cur_filter !==  filter && cur_filter !== null){\r\n          console.log(\"not\");\r\n          return -2\r\n        }\r\n        else {\r\n          return is_hovered?4:0\r\n        }\r\n    }\r\n    const set_icon_color = (is_active_filter: boolean, is_hovered: boolean) => {\r\n        return is_hovered?blue[100]:theme.palette.primary;\r\n    }\r\n    useEffect(()=>{\r\n        console.log(filter === real_filter);\r\n        // console.log(filter, real_filter)\r\n    }, [real_filter])\r\n\r\n    useEffect(()=>{\r\n    }, [hovered])\r\n\r\n    const rowGrid = {\r\n      width: '100%', \r\n      // height: '100%',\r\n      display: 'flex',\r\n      // height: 12,\r\n      // marginTop: '.25em',\r\n    } as React.CSSProperties;\r\n\r\n    return (\r\n      <div style = {rowGrid} \r\n       onMouseEnter = {()=>setHovered(!hovered)}\r\n       onMouseLeave ={()=>setHovered(!hovered)}\r\n       onMouseUp = {()=>{set_filter(filter);}}\r\n      >\r\n        {\r\n          Array.from(Array(count)).map((r, i)=>{\r\n            return(\r\n              <GridUnit key = {i} color = {set_row_color(real_filter, hovered)} is_active_filter = {real_filter === filter}></GridUnit>\r\n            )\r\n\r\n          })\r\n          \r\n        }\r\n        {\r\n        <Tooltip title = {tooltip}>\r\n          {icon}\r\n        </Tooltip>\r\n        }\r\n      </div>\r\n    )\r\n} \r\n\r\nexport default GridRow","// import Grid from '@material-ui/core/Grid';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport SelectorGroup from './Containers/SelectorGroup';\r\nimport SelectorParent from './Containers/SelectorParent';\r\nimport GridRow from './Grid/GridRow';\r\nimport {useEffect} from 'react';\r\nimport {TopicSubCategoryFilter} from '../../model/enums';\r\n// import {}\r\n// https://material-ui.com/components/material-icons/\r\n\r\nimport {\r\n  LightbulbIcon,\r\n  HomeIcon,\r\n  ChartIcon,\r\n  BriefcaseIcon,\r\n  TreeIcon,\r\n  SymbolCrossIcon,\r\n  PeopleIcon, \r\n} from 'evergreen-ui';\r\n\r\nimport {\r\n  DirectionsBus, \r\n  Apartment,\r\n  Opacity,\r\n  Gavel,\r\n  AccountBalance,\r\n  VolumeUp,\r\n  School,\r\n} from  '@material-ui/icons';\r\n\r\nimport {useStoreState } from \"../../hooks\";\r\n\r\nconst built_filters = [\r\n  TopicSubCategoryFilter.BE_ENERGY,\r\n  TopicSubCategoryFilter.BE_HOUSING,\r\n  TopicSubCategoryFilter.BE_TRANSPORTATION,\r\n]\r\n\r\nconst economic_filters = [\r\n  TopicSubCategoryFilter.EE_COSTOFLIVING,\r\n  TopicSubCategoryFilter.EE_HOUSINGMARKET,\r\n  TopicSubCategoryFilter.EE_COMMERCE,\r\n]\r\n\r\nconst natural_filters  = [\r\n  TopicSubCategoryFilter.NE_GREENSPACE,\r\n  TopicSubCategoryFilter.NE_POLLUTION,\r\n  TopicSubCategoryFilter.NE_WATER,\r\n]\r\nconst political_filters  = [\r\n  TopicSubCategoryFilter.PE_GOVERMENT,\r\n  TopicSubCategoryFilter.PE_LEGISLATION,\r\n  TopicSubCategoryFilter.PE_ACTIVISM,\r\n]\r\n\r\nconst social_filters= [\r\n  TopicSubCategoryFilter.SE_EDUCATION,\r\n  TopicSubCategoryFilter.SE_HEALTH,\r\n  TopicSubCategoryFilter.SE_POPULATION,\r\n]\r\n\r\nconst MapLens = () => {\r\n    const theme = useTheme();\r\n    const tag_stats = useStoreState(state=>state.map_data?.map_stats?.tag);\r\n    const active_filter = useStoreState(state=>state.map_data.filter);\r\n    // console.log(tag_stats);\r\n\r\n    return (\r\n       <>\r\n        <SelectorParent columns = {5}>\r\n            <SelectorGroup title = {\"Built\"} size = {2} filters = {built_filters}>\r\n              <GridRow tooltip = {\"Energy\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.BE_ENERGY} count = {tag_stats.BE?.ENERGY} icon = {<LightbulbIcon color = {theme.palette.primary.main} size = {12} />}></GridRow>\r\n              <GridRow tooltip = {\"Housing\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.BE_HOUSING} count = {tag_stats.BE?.HOUSING} icon = {<Apartment color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}  ></GridRow>\r\n              <GridRow tooltip = {\"Transportation\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.BE_TRANSPORTATION} count = {tag_stats.BE?.TRANSPORTATION} icon = {<DirectionsBus fontSize = \"small\" color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Economic\"} size = {3} filters = {economic_filters}>\r\n              <GridRow tooltip = {\"Cost of Living\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.EE_COSTOFLIVING} count = {tag_stats.EE?.COSTOFLIVING} icon = {<HomeIcon color = {theme.palette.primary.main} size = {12}/>}></GridRow>\r\n              <GridRow tooltip = {\"Housing Market\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.EE_HOUSINGMARKET} count = {tag_stats.EE?.HOUSINGMARKET} icon = {<ChartIcon color = {theme.palette.primary.main} size = {12}/>}></GridRow>\r\n              <GridRow tooltip = {\"Commerce\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.EE_COMMERCE} count = {tag_stats.EE?.COMMERCE} icon = {<BriefcaseIcon color = {theme.palette.primary.main} size = {12}/>}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Natural\"} size = {2} filters = {natural_filters}>\r\n              <GridRow tooltip = {\"Greenspace\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.NE_GREENSPACE} count = {tag_stats.NE?.GREENSPACE} icon = {<TreeIcon color = {theme.palette.primary.main} size = {12}/>}></GridRow>\r\n              <GridRow tooltip = {\"Pollution\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.NE_POLLUTION} count = {tag_stats.NE?.POLLUTION} icon = {<ChartIcon color = {theme.palette.primary.main} size = {12}/>}></GridRow>\r\n              <GridRow tooltip = {\"Hydrology\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.NE_WATER} count = {tag_stats.NE?.WATER} icon = {<Opacity color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Political\"} size = {3} filters = {political_filters}>\r\n              <GridRow tooltip = {\"Goverment\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.PE_GOVERMENT} count = {tag_stats.PE?.GOVERMENT} icon = {<AccountBalance color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}></GridRow>\r\n              <GridRow tooltip = {\"Legislation\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.PE_LEGISLATION} count = {tag_stats.PE?.LEGISLATION} icon = {<Gavel color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}></GridRow>\r\n              <GridRow tooltip = {\"Activism\"} active_filter = {active_filter}  filter = {TopicSubCategoryFilter.PE_ACTIVISM} count = {tag_stats.PE?.ACTIVISM} icon = {<VolumeUp color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}/>\r\n            </SelectorGroup>\r\n            <SelectorGroup title = {\"Social\"} size = {2} filters = {social_filters}>\r\n              <GridRow tooltip = {\"Education\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.SE_EDUCATION} count = {tag_stats.SE?.EDUCATION} icon = {<School color = {\"primary\"} style ={{fontSize: \"12pt\"}}/>}></GridRow>\r\n              <GridRow tooltip = {\"Health\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.SE_HEALTH} count = {tag_stats.SE?.HEALTH} icon = {<SymbolCrossIcon color = {theme.palette.primary.main} size = {12}/>}></GridRow>\r\n              <GridRow tooltip = {\"Population\"} active_filter = {active_filter} filter = {TopicSubCategoryFilter.SE_POPULATION} count = {tag_stats.SE?.POPULATION} icon = {<PeopleIcon color = {theme.palette.primary.main} size = {12}/>}/>\r\n            </SelectorGroup>\r\n        </SelectorParent>\r\n      </>\r\n    )\r\n\r\n}\r\n\r\nexport default MapLens;","import Grid from '@material-ui/core/Grid';\r\nimport SelectorSection from './SelectorSection';\r\nimport {Link, Paragraph, Text, Icon, ArrowRightIcon} from 'evergreen-ui';\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport YearDiscipline from './Selectors/YearDiscipline';\r\nimport Themes from './Selectors/Themes';\r\nimport MapLens from './Selectors/MapLens';\r\nimport \"../css/toolbar.css\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst Toolbar = () => {\r\n    const theme = useTheme();\r\n    const is_sm = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n    const toolbarContainer = {\r\n        height: 'fit-content',\r\n        // height: '100%',\r\n        justifyContent: \"space-between\",\r\n        minHeight: '6rem',\r\n        maxHeight: '17rem',\r\n        display: is_sm?\"inline-flex\":\"none\",\r\n    \r\n    } as React.CSSProperties\r\n\r\n\r\n    const instructions_paragraph ={\r\n        fontFamily: theme.typography.fontFamily,\r\n        color: theme.palette.primary.main,\r\n        fontSize: \"9pt\",\r\n        lineHeight: \"12pt\",\r\n    };\r\n\r\n    const SelectorContainer = withStyles({\r\n        root: {\r\n            // padding: 0,\r\n            height: \"100%\",\r\n            border: `1px solid ${theme.palette.primary.main}`, \r\n            paddingLeft: '.5em',\r\n            paddingRight: '.1em',\r\n        }\r\n    })(Grid);\r\n\r\n    return (\r\n        <Grid container spacing = {1} style = {toolbarContainer}>\r\n                <SelectorContainer item xs = {12} sm = {12} md = {6} lg = {2}>\r\n                    <SelectorSection title = \"SELECT & FILTER\">\r\n                        <Text style = {instructions_paragraph}>\r\n                            <Paragraph size = {300} style = {instructions_paragraph}>\r\n                            Click on titles to view main categories. Click on rectangle blocks to filter by subcategories.\r\n                            </Paragraph>\r\n                        </Text>\r\n                    </SelectorSection>\r\n                </SelectorContainer>\r\n\r\n                <SelectorContainer item xs = {12} sm = {12} md = {6} lg ={4}>\r\n                    <SelectorSection title = \"YEAR & DISCIPLINE\">\r\n                        <YearDiscipline></YearDiscipline>\r\n                    </SelectorSection>\r\n                </SelectorContainer>\r\n                <SelectorContainer item xs = {12} sm = {12} md = {6} lg = {3}>\r\n                    <SelectorSection title = \"TOPICS\">\r\n                        <MapLens></MapLens>\r\n                    </SelectorSection>\r\n                </SelectorContainer>\r\n                <SelectorContainer item xs = {12} sm = {12} md = {6} lg = {2}>\r\n                    <SelectorSection title = \"THEMES\">\r\n                        <Themes></Themes>\r\n                    </SelectorSection>\r\n                </SelectorContainer>\r\n\r\n  \r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n\r\n            //     {/* <Grid item xs = {3} style = {gridSect}>\r\n            //         <div style = {{paddingRight: '2em'}}>\r\n\r\n   \r\n            //         {/* <SelectorSection title = \" f \"> */}\r\n            //         <Text>\r\n                        \r\n            //         <Link style = {linkStyle} >WAYS TO EXPEREINCE THIS \r\n            //             <Icon icon = {ArrowRightIcon} size  = {9}/>\r\n            //         </Link>\r\n            //         <Paragraph style = {instructions_paragraph}>Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, \r\n            //             making it over 2000 years old. \r\n            //         </Paragraph>\r\n            //         </Text>\r\n            // </div>\r\n            //     {/* </SelectorSection> */}\r\n            // </Grid> */}","import {useEffect} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Text, } from 'evergreen-ui';\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport '../css/App.css';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction Title() {\r\n  const theme = useTheme();\r\n  const is_md = useMediaQuery(theme.breakpoints.up(\"lg\"));\r\n  const titleHeader = {\r\n    fontSize: \"36px\",\r\n    fontFamily: theme.typography.fontFamily,\r\n\r\n  } as React.CSSProperties;\r\n  const titleSubHeader = {\r\n    fontSize: \"14px\",\r\n    fontFamily: theme.typography.fontFamily,\r\n\r\n  } as React.CSSProperties;\r\n\r\n  return (\r\n    <Grid container spacing = {0}>\r\n        <Grid item xs = {2} style = {{display: is_md?'flex':'none'}}>\r\n            <div>\r\n            </div>\r\n        </Grid>\r\n        <Grid item xs = {10}>\r\n            <div>\r\n            <Text style = {titleHeader}>DIY CARTOGRAPHY: </Text>\r\n            </div>\r\n            <div>\r\n            <Text style = {titleSubHeader}>MAPPING THE IMPACT OF URBAN DEVELOPMENT</Text>\r\n            </div>\r\n        </Grid>\r\n    </Grid>\r\n                  \r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import {useEffect} from 'react';\nimport './css/App.css';\nimport Grid from '@material-ui/core/Grid';\nimport Sidebar from './Components/Sidebar'\nimport MapGallery from './Components/MapGallery';\nimport Timeline from './Components/Timeline';\nimport { useStoreActions } from \"./hooks\";\nimport Toolbar from './Components/Toolbar'\nimport Title from './Components/Title';\nimport {defaultTheme} from 'evergreen-ui';\nimport {ThemeProvider} from 'evergreen-ui';\nimport { merge } from 'lodash';\n\n\n// const My\n\n// const test_data = \n// https://docs.google.com/spreadsheets/d/1-S8EkLYsknYoFWSynVeMQCi6Gf9PoV9A5ezzICXamJA/edit?usp=sharing\n    // https://docs.google.com/spreadsheets/d/e/2PACX-1vShkIFNo43AJw8tdtdq4vsa40okE7v4IJbbXUOuIsLpnCYZMaQnPH9k3_YFhm814s2oa9VrVkQbzPNa/pubhtml\nfunction App() {\n  const test_thunk = useStoreActions(actions => actions.map_data.fetch_map_data);\n  const myCustomTheme = merge({}, defaultTheme, {\n      typography: {\n        fontFamilies: {\n          display: 'Audimat',\n          ui: 'Audimat',\n          mono: 'Audimat',\n        }\n      }\n})\n  useEffect(()=>{\n    test_thunk();\n    console.log(defaultTheme);\n  },[]);\n  \n  return (\n<ThemeProvider value = {myCustomTheme}>\n    <Grid container spacing = {0} style = {{minHeight: \"40rem\", height: \"100%\"}}>\n          <Grid item md = {12} lg = {12}>\n          <Toolbar/>\n          </Grid>\n          <Grid container spacing = {0} style = {{paddingTop: '1em', paddingBottom: '1em'}}>\n   \n              <Grid item md = {12} lg = {12}>\n                  <Title/>\n              </Grid>\n              <Grid item md = {12} lg = {2}>\n                    <Sidebar/>\n              </Grid>\n              <Grid item md = {12} lg = {10}>\n                    <MapGallery/>\n              </Grid>\n          </Grid>\n          <Grid item xs = {12} style = {{height: \"25%\", padding: 0}}>\n                <Timeline/>\n          </Grid>\n    </Grid>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createMuiTheme } from \"@material-ui/core\";\r\nimport blue from '@material-ui/core/colors/blue';\r\nexport const theme = createMuiTheme({\r\n    palette:{\r\n        primary: {\r\n            light: blue[100],\r\n            // light: blue[100],\r\n            main: \"#739eae\",\r\n            dark: blue[700],\r\n        }\r\n    },\r\n    spacing: factor => `${0.25 * factor}rem`,\r\n    overrides:{\r\n        MuiGrid:{\r\n            root:{\r\n                margin: '0px',\r\n                // display: 'flex',\r\n            }\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: \"Audimat\",\r\n    }\r\n})","import { Action, action, thunk, Thunk, debug } from 'easy-peasy';\r\nimport GetSheetDone from 'get-sheet-done';\r\nimport { TimeSeries, TimeRangeEvent, TimeRange} from \"pondjs\";\r\nimport { AuthorDisciplineFilter, TopicSubCategoryFilter, ThemeCategoryFilter, EventLevel, GalleryFilterType, EventType} from './enums';\r\n\r\nexport interface GalleryImage{\r\n  src: string,\r\n  thumbnail: string,\r\n  isSelected: boolean,\r\n  caption: string, \r\n  thumbnailWidth: number,\r\n  thumbnailHeight: number,\r\n  tags: MapMetada[],\r\n  // tags: Tag[],\r\n}\r\n// discipline: map_row.discipline,\r\n// subtopic: map_row.subtopic,\r\n// theme: map_row.theme,\r\n// year: map_row.year,\r\n\r\nexport interface MapMetada{\r\n  discipline: AuthorDisciplineFilter,\r\n  subtopic: TopicSubCategoryFilter,\r\n  theme: ThemeCategoryFilter, \r\n  year: any,\r\n} \r\n\r\nexport interface Tag{\r\n  value: string, \r\n  title: string, \r\n}\r\n\r\nexport interface LabeledCols<T>{\r\n  data: Array<T>,\r\n  title: string,\r\n  updated: string, \r\n}\r\n\r\nexport interface MapRow{\r\n  title: string;\r\n  info: string;\r\n  author: string;\r\n  tags: string;\r\n  discipline: string, \r\n  theme: string,\r\n  photo1: string;\r\n  photo2: string;\r\n  photo3: string;\r\n  photo4: string;\r\n  photo5: string;\r\n  thumbnail: string;\r\n  year: string;\r\n  subtopic: string;\r\n}\r\n\r\nexport interface YearDisciplineStats{\r\n  sixteen: YearGroup,\r\n  eighteen: YearGroup,\r\n}\r\n\r\nexport interface MapStats{\r\n  year: any,\r\n  tag: any,\r\n  theme: any,\r\n}\r\n\r\n\r\nexport interface TagStats{\r\n  BE: any,\r\n  EE: any,\r\n  NE: any,\r\n  PE: any, \r\n  SE: any,\r\n}\r\n\r\nexport interface ThemeStats{\r\n  EQUITY: number,\r\n  ACCESS: number,\r\n  DIVERSITY: number,\r\n}\r\n\r\nexport interface YearGroup{\r\n  ARTDESIGN: number,\r\n  ARCHITECTURE: number,\r\n  LANDSCAPE: number,\r\n  OTHER: number,\r\n}\r\n\r\nexport interface LightBoxContent{\r\n  images: PhotoInfo[], \r\n  description: string,\r\n  author: string, \r\n  title: string,\r\n}\r\n\r\nexport interface PhotoInfo{\r\n  source: string, \r\n  kind: string, \r\n}\r\nexport interface EventRow{\r\n  start: Date,\r\n  end: Date,\r\n  title: string,\r\n  info: string,\r\n  tags: string,\r\n  category: EventLevel, \r\n  type: EventType,\r\n}\r\n\r\nexport interface ExternalData{\r\n  events: EventRow[],\r\n  maps: MapRow[],\r\n}\r\n\r\nexport interface EventData{\r\n  title: string,\r\n  event_type: EventType,\r\n  tags: string[]\r\n}\r\n\r\nexport interface TimelineData{\r\n  national: TimeSeries[],\r\n  state: TimeSeries[],\r\n  city: TimeSeries[],\r\n}\r\n\r\n\r\n\r\ntype FilterOption =  AuthorDisciplineFilter | TopicSubCategoryFilter | ThemeCategoryFilter | null;\r\nexport interface FilterObj{\r\n  filter_type: GalleryFilterType,\r\n  filter: FilterOption, \r\n}\r\n\r\nexport interface MapDataModel {\r\n  filter: FilterOption;\r\n  multi_tag: FilterOption[],\r\n  map_spreadsheet: MapRow[],\r\n  map_stats: MapStats | undefined,\r\n  event_spreadsheet: EventRow[],\r\n  active_images: GalleryImage[];\r\n  gallery_images: GalleryImage[];\r\n  timeline_series: TimelineData;\r\n  loaded: boolean;\r\n  active_lightbox: LightBoxContent;\r\n  fetch_map_data: Thunk<MapDataModel>;\r\n  filter_gallery: Action<MapDataModel, FilterObj>;\r\n  set_map_spreadsheet: Action<MapDataModel, MapRow[]>;\r\n  set_map_stats: Action<MapDataModel, MapStats>;\r\n  set_event_spreadsheet: Action<MapDataModel, EventRow[]>;\r\n  set_gallery_images: Action<MapDataModel, GalleryImage[]>;\r\n  set_active_images: Action<MapDataModel, GalleryImage[]>;\r\n  set_timeline_series: Action<MapDataModel, TimelineData>;\r\n  set_active_filter: Action<MapDataModel, FilterOption>;\r\n  thunk_set_filter: Thunk<MapDataModel, FilterOption>;\r\n  reset_gallery: Action<MapDataModel>;\r\n  set_active_lightbox: Action<MapDataModel, GalleryImage>;\r\n  set_loaded: Action<MapDataModel, boolean>;\r\n  thunk_set_multi_filter: Thunk<MapDataModel, FilterOption[]>;\r\n  set_multi_filter: Action<MapDataModel, FilterOption[]>\r\n}\r\n\r\ntype ImagePromise = Promise<HTMLImageElement>;\r\n\r\nconst empty_nat: TimeSeries[] = [];\r\nconst empty_state: TimeSeries[] = [];\r\nconst empty_city: TimeSeries[] = [];\r\nconst test_initial: TimelineData = {\r\n  national: empty_nat, \r\n  state: empty_state, \r\n  city: empty_city,\r\n}\r\n\r\nconst empty_photo: PhotoInfo[] = [];\r\n\r\nconst lb_initial: LightBoxContent = {\r\n  images: empty_photo,\r\n  description: \"default\",\r\n  title: \"string\",\r\n  author: \"some author\",\r\n}\r\n\r\nconst init_map_stats: MapStats = {\r\n  year: {},\r\n  tag: {},\r\n  theme: {},\r\n}\r\n\r\nconst map_data: MapDataModel = {\r\n\r\n  active_images: [],\r\n  filter: null,\r\n  multi_tag: [],\r\n  gallery_images: [], \r\n  timeline_series: test_initial, \r\n  loaded: false, \r\n  active_lightbox: lb_initial,\r\n  map_spreadsheet: [],\r\n  map_stats: init_map_stats,\r\n  event_spreadsheet: [],\r\n  fetch_map_data: thunk(async actions =>{\r\n    const DOC_KEY = '1-S8EkLYsknYoFWSynVeMQCi6Gf9PoV9A5ezzICXamJA';\r\n    const map_rows: MapRow[] = [];\r\n    const event_rows: EventRow[] = [];\r\n\r\n    const map_data: ExternalData = {\r\n      events:  event_rows,\r\n      maps:  map_rows\r\n    };\r\n    //get maps sheet\r\n    let test_2018 = get_map_sheet(DOC_KEY, 3);\r\n    let test_2020 = get_map_sheet(DOC_KEY, 4);\r\n    let test_2016 = get_map_sheet(DOC_KEY, 5);\r\n    let map_sheets = [test_2018, test_2020, test_2016];\r\n\r\n    Promise.all(map_sheets).then((sheet_data: (void | MapRow[])[])=>{\r\n      let gallery_image_responses: ImagePromise[] = [];\r\n      let all_unsized_images: GalleryImage[] = [];\r\n\r\n      sheet_data.forEach((sheet_payload: void | MapRow[]) => {\r\n        if (Array.isArray(sheet_payload)){\r\n          let succesful_map_rows = sheet_payload as Array<MapRow>\r\n          let unsized_gallery_images = map_rows_to_images(succesful_map_rows);\r\n          let image_responses: ImagePromise[] = unsized_gallery_images.map((gi: GalleryImage)=>get_image(gi));\r\n          gallery_image_responses.push(...image_responses);\r\n          all_unsized_images.push(...unsized_gallery_images);\r\n          map_data.maps.push(...sheet_payload);\r\n        } else {\r\n          console.error(\"did not get map row array\")\r\n        }\r\n      })\r\n      Promise.all(gallery_image_responses).then((res: HTMLImageElement[])=>{\r\n        let sized_gallery_images = all_unsized_images.map(function(def_img: GalleryImage, i){\r\n            def_img['thumbnailWidth'] =  res[i].width * .05;\r\n            def_img['thumbnailHeight'] =  res[i].height * .05;\r\n            return def_img\r\n        })\r\n        actions.set_gallery_images(sized_gallery_images)\r\n        actions.set_active_images(sized_gallery_images)\r\n      })\r\n      const map_stats= generate_map_stats(map_data.maps);\r\n      actions.set_map_stats(map_stats);\r\n      actions.set_map_spreadsheet(map_data.maps);\r\n      actions.set_loaded(true);\r\n    });\r\n\r\n    get_sheet<EventRow>(DOC_KEY, 2).then((event_sheet: LabeledCols<EventRow>)=>{\r\n      const typed_event_rows = type_event_rows(event_sheet.data);\r\n      actions.set_event_spreadsheet(typed_event_rows);\r\n      const timeline_series = make_time_series(typed_event_rows);\r\n\r\n      actions.set_timeline_series(timeline_series)\r\n      actions.set_loaded(true);\r\n    }).catch((err: any)=>{\r\n      console.error(`Error fetching DOC_KEY ${DOC_KEY}`);\r\n    })\r\n\r\n  }),\r\n  set_map_spreadsheet: action((state, map_rows)=>{\r\n    state.map_spreadsheet = map_rows\r\n  }),\r\n  set_map_stats: action((state, map_stats_obj)=>{\r\n    state.map_stats = map_stats_obj;\r\n  }),\r\n  set_event_spreadsheet: action((state, event_rows)=>{\r\n    state.event_spreadsheet = event_rows\r\n  }),\r\n  set_gallery_images: action((state, payload)=>{\r\n    state.gallery_images = payload\r\n  }),\r\n  set_active_images: action((state, payload)=>{\r\n    state.active_images = payload\r\n  }),\r\n  filter_gallery: action((state, filter_option)=>{\r\n    if (filter_option.filter === state.filter){\r\n      state.filter = null;\r\n      state.active_images = state.gallery_images;\r\n    } else {\r\n      if (filter_option.filter_type === GalleryFilterType.TOPIC){\r\n        const with_subtopic = state.gallery_images.filter(gi=>gi.tags[0].subtopic === filter_option.filter)\r\n        state.active_images = with_subtopic;\r\n        state.filter = filter_option.filter;\r\n      }\r\n      if (filter_option.filter_type === GalleryFilterType.THEME){\r\n        const with_theme = state.gallery_images.filter(gi=>gi.tags[0].theme === filter_option.filter)\r\n        state.active_images = with_theme;\r\n        state.filter = filter_option.filter;\r\n      }\r\n      if (filter_option.filter_type === GalleryFilterType.DISCIPLINE){\r\n        let split =  filter_option.filter?.split(\"_\");\r\n        if (split){\r\n          let discipline = split[0];\r\n          let year = split[1];\r\n          console.log(year, discipline);\r\n          // const with_discipline_and_year = state.gallery_images.filter(gi=>gi.tags[0].discipline)\r\n          const with_discipline_and_year = state.gallery_images.filter(gi=>gi.tags[0].discipline === discipline  && gi.tags[0].year === year)\r\n          // const with_discipline_and_year = state.gallery_images.filter(gi=>gi.tags[0].year === year)\r\n          state.active_images = with_discipline_and_year;\r\n          console.log(debug(with_discipline_and_year));\r\n          state.filter = filter_option.filter;\r\n        }\r\n    }\r\n    }\r\n  }),\r\n  set_timeline_series: action((state, timeline_series)=>{\r\n    //  console.log(timeline_series);\r\n     state.timeline_series =  timeline_series\r\n  }),\r\n  thunk_set_filter: thunk((actions, filter)=>{\r\n    if (filter == null){\r\n      actions.reset_gallery();\r\n    } \r\n    \r\n    let cat_options = Object.values(TopicSubCategoryFilter);\r\n    if (cat_options.includes(filter as TopicSubCategoryFilter)){\r\n      actions.filter_gallery({\r\n        filter_type: GalleryFilterType.TOPIC,\r\n        filter: filter,\r\n      })\r\n    }\r\n\r\n    let theme_options = Object.values(ThemeCategoryFilter);\r\n    if (theme_options.includes(filter as ThemeCategoryFilter)){\r\n      actions.filter_gallery({\r\n        filter_type: GalleryFilterType.THEME,\r\n        filter: filter,\r\n      })\r\n    } \r\n\r\n    let author_options = Object.values(AuthorDisciplineFilter);\r\n    if (author_options.includes(filter as AuthorDisciplineFilter)){\r\n      actions.filter_gallery({\r\n        filter_type: GalleryFilterType.DISCIPLINE,\r\n        filter: filter,\r\n      })\r\n    } \r\n    \r\n  }),\r\n  reset_gallery: action((state)=>{\r\n    state.active_images = state.gallery_images; \r\n  }),\r\n  set_active_filter: action((state, active_filter)=>{\r\n    state.filter = active_filter\r\n  }),\r\n  set_active_lightbox: action((state, item)=>{\r\n    let source_row  =  state.map_spreadsheet.filter(r=>r.photo1 === item.src)[0];\r\n    let photo_sources: PhotoInfo[] = [];\r\n    Object.keys(source_row).forEach(function(k: string){\r\n      \r\n        if (k.startsWith('photo')){\r\n          const key = k as keyof typeof source_row;\r\n          const photo_info: PhotoInfo = {\r\n            source: source_row[key],\r\n            kind: k\r\n          }\r\n          photo_sources.push(photo_info)\r\n        }\r\n    })\r\n    const info: LightBoxContent = {\r\n      images: photo_sources,\r\n      description: source_row.info,\r\n      title: source_row.title,\r\n      author: source_row.author,\r\n    }\r\n    state.active_lightbox = info\r\n  }),\r\n  set_loaded: action((state, is_loaded)=>{\r\n    state.loaded = is_loaded\r\n  }),\r\n  thunk_set_multi_filter: thunk((actions, filters)=>{\r\n      console.log(filters)\r\n      actions.set_multi_filter(filters)\r\n  }),\r\n  set_multi_filter: action((state, filters)=>{\r\n      state.multi_tag = filters\r\n  })\r\n}\r\n\r\nfunction generate_map_stats(map_rows: MapRow[]): MapStats{\r\n  const yd = generate_year_discpline_stats(map_rows)\r\n  const td = generate_topic_stats(map_rows)\r\n  const theme_stats = generate_theme_stats(map_rows)\r\n  const map_stats: MapStats = {\r\n    year: yd,\r\n    tag: td,\r\n    theme: theme_stats,\r\n  }\r\n  return map_stats\r\n}\r\n\r\nfunction generate_year_discpline_stats(map_rows: MapRow[]): YearDisciplineStats{\r\n  const year_groups = groupBy(map_rows, \"year\");\r\n  const yg_keys = Object.keys(year_groups);\r\n  const max_unit_count = 10;\r\n\r\n  const year_group = yg_keys.map((k: any, i: number )=>{\r\n    const year_breakdown = groupBy(year_groups[k], \"discipline\");\r\n    let cats = Object.keys(year_breakdown);\r\n    let final_data: any = {};\r\n    cats.forEach(c=>{\r\n      // console.log(year_groups[k]);\r\n      // console.log(year_breakdown[c]);\r\n      // console.log(year_groups[k].length);\r\n      // console.log(year_groups[k].length);\r\n      final_data[c] = Math.round((year_breakdown[c].length/year_groups[yg_keys[i]].length)*max_unit_count);\r\n    });\r\n    return final_data\r\n  })\r\n  const final_data: any = {};\r\n  console.log(year_group);\r\n  year_group.forEach((s, ind)=>{\r\n      final_data[yg_keys[ind]] = s    \r\n  })\r\n  let fomratted_data = final_data as YearDisciplineStats;\r\n  return fomratted_data\r\n}\r\n\r\nfunction generate_topic_stats(map_rows: MapRow[]): TagStats {\r\n  const total_cat_blocks = 75;\r\n  const topic_groups = groupBy(map_rows, \"tags\")\r\n  let empty_cont: any = {}\r\n  let keys = Object.keys(topic_groups);\r\n  keys.forEach(k=>{\r\n    const topic_group_count = topic_groups[k].length;\r\n    const sub_groups = groupBy(topic_groups[k], \"subtopic\");\r\n    const cat_percent = topic_groups[k].length/map_rows.length;\r\n    const portioned_cat_blocks = cat_percent*total_cat_blocks;\r\n    let empty_sg: any = {\r\n      cat_percent: topic_groups[k].length/map_rows.length,\r\n      cat_blocks: portioned_cat_blocks,\r\n    };\r\n    const sub_keys = Object.keys(sub_groups);\r\n    sub_keys.forEach(sk=>{\r\n      empty_sg[sk] = Math.round(((Math.ceil(((sub_groups[sk].length/topic_group_count)*100)/20)*20)/100)*5)\r\n    })\r\n    empty_cont[k] = empty_sg\r\n  });\r\n  \r\n  return empty_cont as TagStats\r\n  \r\n}\r\n\r\nfunction generate_theme_stats(map_rows: MapRow[]): any{\r\n  const num_theme_blocks = 25\r\n  //max number of blocks is 45\r\n  const theme_groups = groupBy(map_rows, \"theme\");\r\n  const theme_keys = Object.keys(theme_groups);\r\n  let empty_theme_data: any = {};\r\n  \r\n  theme_keys.forEach(k=>{\r\n    empty_theme_data[k] = Math.round((theme_groups[k].length/map_rows.length)*num_theme_blocks)\r\n    // empty_theme_data[k] = theme_groups[k].length/map_rows.length\r\n  })\r\n  return empty_theme_data as ThemeStats\r\n}\r\n\r\nfunction make_time_series(rows: EventRow[]): TimelineData{\r\n  const categorized_events = groupBy(rows, \"category\");\r\n  Object.keys(categorized_events).forEach(key => {\r\n    const value = categorized_events[key];\r\n    const series = event_row_to_series(value);\r\n    categorized_events[key] = series;\r\n    \r\n  });\r\n  console.log(categorized_events);\r\n  return categorized_events\r\n}\r\n\r\nfunction event_row_to_series(rows: EventRow[]): TimeSeries[]{\r\n  // const all_events:  TimeRangeEvent[] = [];\r\n  let all_series: TimeSeries[] = [];\r\n  let all_events: TimeRangeEvent[] = [];\r\n  rows.forEach((event_row: EventRow)=>{\r\n    if (event_row.type === EventType.DATE){\r\n      console.log(\"GOT DATE TYPE\");\r\n      const time_range = new TimeRange(event_row.start, event_row.end);\r\n      const data: EventData = {\r\n        title: event_row.title,\r\n        event_type: event_row.type,\r\n        tags: event_row.tags.split(',').map(t=>t.trim()),\r\n      }\r\n      const time_range_event = new TimeRangeEvent(time_range, [data]);\r\n      // console.log(time_range_event)\r\n      all_events.push(time_range_event);\r\n      // all\r\n      // all_events.push(time_range_event);\r\n      // const time_series =  new TimeSeries({\r\n      //   name: \"test\",\r\n      //   events: [time_range_event]\r\n      // })\r\n      // all_series.push(time_series);\r\n      // return time_series\r\n    }\r\n\r\n    if (event_row.type === EventType.RANGE){\r\n      console.log(\"GOT RANGE TYPE\");\r\n      const time_range = new TimeRange(event_row.start, event_row.end);\r\n      const data: EventData = {\r\n        title: event_row.title,\r\n        event_type: event_row.type,\r\n        tags: event_row.tags.split(',').map(t=>t.trim()),\r\n      }\r\n      const time_range_event = new TimeRangeEvent(time_range, [data]);\r\n      all_events.push(time_range_event);\r\n      // all_events.push(time_range_event);\r\n      // const time_series =  new TimeSeries({\r\n      //   name: \"test\",\r\n      //   events: [time_range_event]\r\n      // })\r\n      // all_series.push(time_series);\r\n      // return time_series\r\n    }\r\n  });\r\n  return group_events_to_rows(all_events)\r\n}\r\n\r\nfunction group_events_to_rows(events: TimeRangeEvent[]): TimeSeries[] {\r\n  let test_obj: any = {};\r\n  test_obj[0] = [];\r\n      (events as TimeRangeEvent[]).forEach((ev2: TimeRangeEvent, ind: number, array: TimeRangeEvent[])=>{\r\n        let row_count = 0;\r\n        \r\n        if (array.every((e3)=>{\r\n          if (ev2 === e3){\r\n            return true\r\n          }\r\n          if (date_range_overlaps(e3.begin(), e3.end(), ev2.begin(), ev2.end())){\r\n              return false\r\n          } else {\r\n            return true\r\n          }\r\n        })){\r\n          test_obj[row_count].push(ev2)\r\n        } else {\r\n          row_count = row_count + 1;\r\n          test_obj[ind] = [ev2]\r\n        }\r\n      })\r\n      const sorted_events= Object.keys(test_obj).map(k=>{\r\n        test_obj[k] = test_obj[k].sort((a: any,b: any)=>a.begin()-b.begin());\r\n      \r\n      })\r\n      const row_arrays = Object.keys(sorted_events).map(k=>(\r\n        // console.log(test_obj[k])\r\n        new TimeSeries({\r\n          name: \"test\",\r\n          events: test_obj[k],\r\n          })\r\n      ))\r\n      // console.log(row_arrays)\r\n      return row_arrays\r\n}\r\n\r\nfunction date_range_overlaps(a_start: Date, a_end: Date, b_start: Date, b_end: Date) {\r\n  if (a_start < b_start && b_start < a_end) return true; // b starts in a\r\n  if (a_start < b_end   && b_end   < a_end) return true; // b ends in a\r\n  if (b_start <  a_start && a_end   <  b_end) return true; // a in b\r\n  return false;\r\n}\r\n\r\nfunction map_rows_to_images(rows: MapRow[]): GalleryImage[]{\r\n  let unsized_gallery_images: GalleryImage[] = rows.map((map_row: MapRow)=>(\r\n    {\r\n        src: map_row.photo1,\r\n        thumbnail: map_row.thumbnail,\r\n        isSelected: false,\r\n        caption: \"Im in this other file\",\r\n        thumbnailWidth: 95,\r\n        thumbnailHeight: 174,\r\n        tags: [{\r\n          discipline: AuthorDisciplineFilter[map_row.discipline as unknown as keyof typeof AuthorDisciplineFilter],\r\n          subtopic: TopicSubCategoryFilter[map_row.tags + \"_\" + map_row.subtopic as unknown as keyof typeof TopicSubCategoryFilter],\r\n          theme: ThemeCategoryFilter[map_row.theme as unknown as keyof typeof ThemeCategoryFilter],\r\n          year: map_row.year,\r\n        }]\r\n  }))\r\n    return unsized_gallery_images\r\n}\r\n\r\nfunction groupBy(arr: any[], property: any) {\r\n  return arr.reduce((acc, cur) => {\r\n    acc[cur[property]] = [...acc[cur[property]] || [], cur];\r\n    return acc;\r\n  }, {});\r\n}\r\n\r\nfunction type_event_rows(rows: any[]): EventRow[]{\r\n  rows.forEach((r: any, ind: number)=>{\r\n    const cat_string: string = rows[ind][\"category\"];\r\n    const event_type_string: string = rows[ind][\"type\"];\r\n    const type_cat: EventLevel  = EventLevel[cat_string as unknown as keyof typeof EventLevel];\r\n    const type_event: EventType  = EventType[event_type_string as unknown as keyof typeof EventType];\r\n    rows[ind][\"category\"] = type_cat;\r\n    rows[ind][\"type\"] = type_event;\r\n\r\n    const start_date = new Date(rows[ind][\"start\"]);\r\n    const end_date = new Date(rows[ind][\"end\"]);\r\n    rows[ind][\"start\"] = start_date;\r\n    rows[ind][\"end\"] = end_date;\r\n  })\r\n  return rows\r\n}\r\n\r\nfunction type_map_rows(rows: any[]): MapRow[]{\r\n  rows.forEach((r: any, ind: number)=>{\r\n    const discipline_string: string = rows[ind][\"discipline\"];\r\n    const type_cat: AuthorDisciplineFilter  = AuthorDisciplineFilter[discipline_string as unknown as keyof typeof AuthorDisciplineFilter];\r\n    rows[ind][\"discipline\"] = type_cat;\r\n    // console.log(rows[ind][\"catedisciplinegory\"])\r\n  })\r\n  return rows\r\n}\r\n\r\nfunction get_image(image: GalleryImage): Promise<HTMLImageElement>{\r\n  const promise = new Promise<HTMLImageElement>(function(resolve, reject) {\r\n    let img = new Image();\r\n    img.src = image.thumbnail;\r\n    img.onload = () => {\r\n      image.thumbnailHeight = img.height;\r\n      image.thumbnailWidth = img.width;\r\n      resolve(img);\r\n    };\r\n  });\r\n  return promise\r\n}\r\n\r\nfunction get_sheet <T>(key: string, sheet_num: number): Promise<LabeledCols<T>>{\r\n  const promise = new Promise<LabeledCols<T>>(function(resolve, reject) {\r\n    GetSheetDone.labeledCols(key, sheet_num).then((sheet: any) => {\r\n        resolve(sheet)\r\n       }).catch((err: any )=> {\r\n         console.error(`Error fetching DOC_KEY ${key}, sheet number ${sheet_num}`);\r\n    });\r\n  });\r\n  return promise\r\n}\r\n\r\nfunction get_map_sheet(key: string, sheet_index: number): Promise<void | MapRow[]>{\r\n// function get_map_sheet(key: string, sheet_index: number): Promise<LabeledCols<MapRow[]>>{\r\n  var to_get =  get_sheet<MapRow>(key, sheet_index).then((map_sheet: LabeledCols<MapRow>)=>{\r\n    const typed_map_rows = type_map_rows(map_sheet.data);\r\n    return typed_map_rows\r\n  }).catch((err: any)=>{\r\n    console.error(`Error fetching DOC_KEY ${key}`);\r\n  })\r\nreturn to_get\r\n}\r\n\r\nfunction getAllFuncs(toCheck: any) {\r\n  var props: any[] = [];\r\n  var obj = toCheck;\r\n  do {\r\n      props = props.concat(Object.getOwnPropertyNames(obj));\r\n  } while (obj = Object.getPrototypeOf(obj));\r\n\r\n  return props.sort().filter(function(e, i, arr) { \r\n     if (e!==arr[i+1] && typeof toCheck[e] == 'function') return true;\r\n  });\r\n}\r\n\r\n\r\nexport default map_data;\r\n","import map_data, { MapDataModel } from './map_data';\r\n// https://codesandbox.io/s/easy-peasy-typescript-v3-riqbl?file=/src/model/todos.ts\r\n\r\nexport interface StoreModel {\r\n  map_data: MapDataModel;\r\n//   notification: NotificationModel;\r\n}\r\n\r\nconst model: StoreModel = {\r\n  map_data,\r\n//   notification,\r\n};\r\n\r\nexport default model;\r\n","import {createStore, action} from 'easy-peasy';\r\nimport model from './model';\r\n\r\nconst store = createStore(model);\r\n\r\nexport default store","import ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {theme} from './theme';\nimport {StoreProvider} from 'easy-peasy';\n\nimport store from './store';\nReactDOM.render(\n    <ThemeProvider theme = {theme} >\n      <StoreProvider store = {store}>\n      <App />\n     </StoreProvider>\n    </ThemeProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}